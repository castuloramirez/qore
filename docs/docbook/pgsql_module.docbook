<?xml version="1.0" encoding="UTF-8" ?>
  <sect1 id="pgsql_Module">
    <title>pgsql Module</title>

    <para>The pgsql module provides a PostgreSQL driver to Qore's DBI system, allowing Qore programs to access PostgreSQL databases through the <link linkend="Qore::SQL::Datasource_Class">Datasource Class</link>.</para>

    <para>Example of creating a PostgreSQL Datasource:</para>

    <programlisting>$db = new Datasource(SQL::DSPGSQL, $user, $pass, $db, $charset, $hostname);</programlisting>

    <para>This driver supports the following DBI capabilities when compiled against PostgreSQL 7 or better: <code>DBI_CAP_TRANSACTION_MANAGEMENT, DBI_CAP_CHARSET_SUPPORT, DBI_CAP_LOB_SUPPORT, DBI_CAP_STORED_PROCEDURES</code>.</para>

    <para>The driver employs efficient binary bindings for all non-text data types and fully supports multidimensional arrays when in when selecting and binding by value.  The driver determines on a per-connection basis by querying server capabilities whether the server uses 8-byte integer or floating-point data for date/time types, and also whether or not a binary day value is included in intervals.</para>

    <para>When the Datasource is not in auto-commit mode, this driver automatically inserts &quot;begin&quot; statements at the start of each transaction to provide consistent transaction handling across all Qore DBI drivers; it's not necessary to do this manually.  Note that an exception while already in a transaction will have the effect that the pgsql connection cannot be used until the transaction is closed; this is different from most other current Qore DBI drivers.  An exception in a <link linkend="Qore::SQL::Datasource::exec">Datasource::exec()</link> method as the first statement of a transaction will cause an automatic implicit rollback to be executed to maintain compatibility with other Qore DBI drivers.</para>

    <para>Due to the fact that Qore date/time values do not currently support time zone information, when PostgreSQL data having a time zone component is converted to a Qore data type, the time zone information is lost.  Also, Qore date/time values support a millisecond resolution, while PostgreSQL supports microsecond resolution.  All decimal places after milliseconds are discarded when converting to a Qore date/time value.</para>

    <para>Stored procedure execution is supported; the following is an example of a stored procedure call:</para>

    <para>Example PostgreSQL PLPG/SQL function:</para>

    <programlisting>create or replace function int_test(val int4) returns int4 as $$
begin
    return val * 2;
end;
$$ language plpgsql;</programlisting>

    <para>Qore code to call this function:</para>

    <programlisting>$result = $db.exec(&quot;select int_test(%v)&quot;, 11);
printf(&quot;%N\n&quot;, $result);</programlisting>

    <para>Resulting in:</para>

    <programlisting>hash: (1 member)
  int_test : 22</programlisting>

    <para>Like all Qore components, the PostgreSQL DBI driver is thread-safe.</para>

    <para>Note that binding by placeholder is not supported by this driver as PostgreSQL returns values directly; Qore DBI placeholder buffer specifications are ignored when the pgsql driver is used.</para>

    <para>When binding arrays, all data types in the Qore list must be identical.  When binding multi-dimensional arrays, the number of elements in each list in each array dimension must be the same.  These are PostgreSQL restrictions.</para>

    <para>The following table describes how PostgreSQL data types are converted to Qore data types by the pgsql driver.</para>

    <table>
      <title>PostgreSQL to Qore Type Mappings</title>
      <tgroup cols='3' align='left' colsep='1' rowsep='1'>
	<thead>
	  <row>
	    <entry><para>PostgreSQL Type</para></entry>
	    <entry><para>Qore Type</para></entry>
	    <entry><para>Notes</para></entry>
	  </row>
	</thead>
	<tbody>
          <row>
            <entry><para><code>BOOLEAN</code></para></entry>
            <entry><para><link linkend="Boolean"><code>Type::Boolean</code></link></para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>BYTEA</code></para></entry>
            <entry><para><link linkend="Binary"><code>Type::Binary</code></link></para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>CHAR</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>trailing whitespace is removed</para></entry>
          </row>
          <row>
            <entry><para><code>BPCHAR</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>trailing whitespace is removed</para></entry>
          </row>
          <row>
            <entry><para><code>INT8</code></para></entry>
            <entry><para><link linkend="Integer"><code>Type::Int</code></link></para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>INTEGER</code></para></entry>
            <entry><para><link linkend="Integer"><code>Type::Int</code></link></para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>OID</code></para></entry>
            <entry><para><link linkend="Integer"><code>Type::Int</code></link></para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>XID</code></para></entry>
            <entry><para><link linkend="Integer"><code>Type::Int</code></link></para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>CID</code></para></entry>
            <entry><para><link linkend="Integer"><code>Type::Int</code></link></para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>INT2</code></para></entry>
            <entry><para><link linkend="Integer"><code>Type::Int</code></link></para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>TEXT</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>CHAR VARYING</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>trailing whitespace is removed</para></entry>
          </row>
          <row>
            <entry><para><code>NAME</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>FLOAT4</code></para></entry>
            <entry><para><link linkend="Float"><code>Type::Float</code></link></para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>FLOAT8</code></para></entry>
            <entry><para><link linkend="Float"><code>Type::Float</code></link></para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>ABSTIME</code></para></entry>
            <entry><para><link linkend="Date"><code>Type::Date</code></link> (absolute)</para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>RELTIME</code></para></entry>
            <entry><para><link linkend="Date"><code>Type::Date</code></link> (relative)</para></entry>
            <entry><para>direct conversion to relative seconds</para></entry>
          </row>
          <row>
            <entry><para><code>TIMESTAMP</code></para></entry>
            <entry><para><link linkend="Date"><code>Type::Date</code></link> (absolute)</para></entry>
            <entry><para>Microseconds are discarded; time is preseved to the millisecond only.</para></entry>
          </row>
          <row>
            <entry><para><code>TIMESTAMP WITH TIMEZONE</code></para></entry>
            <entry><para><link linkend="Date"><code>Type::Date</code></link> (absolute)</para></entry>
            <entry><para>Time zone information is ignored; microseconds are discarded; time is preseved to the millisecond only.</para></entry>
          </row>
          <row>
            <entry><para><code>DATE</code></para></entry>
            <entry><para><link linkend="Date"><code>Type::Date</code></link> (absolute)</para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>INTERVAL</code></para></entry>
            <entry><para><link linkend="Date"><code>Type::Date</code></link> (relative)</para></entry>
            <entry><para>direct conversion to relative months, seconds, milliseconds, and for servers that send a separate day value, to relative days.</para></entry>
          </row>
          <row>
            <entry><para><code>TIME</code></para></entry>
            <entry><para><link linkend="Date"><code>Type::Date</code></link> (absolute)</para></entry>
            <entry><para>Microseconds are discarded; time is preseved to the millisecond only.  Note that the date portion is set to January 1, 1970, the beginning of the 64-bit qore epoch.</para></entry>
          </row>
          <row>
            <entry><para><code>TIME WITH TIMEZONE</code></para></entry>
            <entry><para><link linkend="Date"><code>Type::Date</code></link> (absolute)</para></entry>
            <entry><para>Time zone information is ignored; microseconds are discarded; time is preseved to the millisecond only.  Note that the date portion is set to January 1, 1970, the beginning of the 64-bit qore epoch.</para></entry>
          </row>
          <row>
            <entry><para><code>TINTERVAL</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>string format is given in PostgreSQL tinterval format ([&quot;YYYY-MM-DD hh:mm:ss&quot; &quot;YYYY-MM-DD hh:mm:ss&quot;])</para></entry>
          </row>
          <row>
            <entry><para><code>NUMERIC</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>To avoid loss of precision, the information is converted to a string</para></entry>
          </row>
          <row>
            <entry><para><code>CASH</code></para></entry>
            <entry><para><link linkend="Float"><code>Type::Float</code></link></para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>MACADDR</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>format: xx:xx:xx:xx:xx:xx</para></entry>
          </row>
          <row>
            <entry><para><code>INET</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>ipv4: n.n.n.n/net, ipv6: x:x:x:x:x:x:x:x/net</para></entry>
          </row>
          <row>
            <entry><para><code>CIDR</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>ipv4: n.../net, ipv6: x:...::/net</para></entry>
          </row>
          <row>
            <entry><para><code>TID</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>format: (n,n)</para></entry>
          </row>
          <row>
            <entry><para><code>BIT</code></para></entry>
            <entry><para><link linkend="Binary"><code>Type::Binary</code></link></para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>VARBIT</code></para></entry>
            <entry><para><link linkend="Binary"><code>Type::Binary</code></link></para></entry>
            <entry><para>direct conversion</para></entry>
          </row>
          <row>
            <entry><para><code>POINT</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>format: n,n</para></entry>
          </row>
          <row>
            <entry><para><code>LSEG</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>format: (n,n),(n,n)</para></entry>
          </row>
          <row>
            <entry><para><code>BOX</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>format: (n,n),(n,n)</para></entry>
          </row>
          <row>
            <entry><para><code>PATH</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>in PostgreSQL text format depending on path type</para></entry>
          </row>
          <row>
            <entry><para><code>POLYGON</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>in PostgreSQL text format for polygons ((n,n),...)</para></entry>
          </row>
          <row>
            <entry><para><code>CIRCLE</code></para></entry>
            <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
            <entry><para>format: &lt;(n,n),n&gt;</para></entry>
          </row>
	</tbody>
      </tgroup>
    </table>

    <para>The following table gives data mapping when binding qore types by value.  Be aware that PostgreSQL does only limited implicit type conversions when binding by value; to specify other types, either use a PostgreSQL type cast (i.e. <code>::type</code>) or use the <link linkend="pgsql_bind">pgsql_bind() function</link>.</para>

    <table>
      <title>Qore to PostgreSQL Type Mappings for Binding by Value</title>
      <tgroup cols='3' align='left' colsep='1' rowsep='1'>
	<thead>
	  <row>
	    <entry><para>Qore Type</para></entry>
	    <entry><para>PostgreSQL Type</para></entry>
	    <entry><para>Notes</para></entry>
	  </row>
	</thead>
	<tbody>
	  <row>
	    <entry><para><link linkend="Integer"><code>Type::Int</code></link></para></entry>
	    <entry><para><code>INT2</code>, <code>INTEGER</code>, <code>INT8</code></para></entry>
	    <entry><para>Depending on the size of the integer, the appropriate PostgreSQL type is bound.  This is to avoid errors by using a type larger than that specified for the column or variable, as converting from a smaller type to a larger type is done automatically by the server.</para></entry>
	  </row>
	  <row>
	    <entry><para><link linkend="Float"><code>Type::Float</code></link></para></entry>
	    <entry><para><code>FLOAT88</code></para></entry>
	    <entry><para>Qore float data is converted directly to PostgreSQL float8 data</para></entry>
	  </row>
	  <row>
	    <entry><para><link linkend="String"><code>Type::String</code></link></para></entry>
	    <entry><para><code>TEXT</code></para></entry>
	    <entry><para>The character sencoding is converted to the encoding specified for the connection if necessary.</para></entry>
	  </row>
	  <row>
	    <entry><para><link linkend="Boolean"><code>Type::Boolean</code></link></para></entry>
	    <entry><para><code>BOOLEAN</code></para></entry>
	    <entry><para>Qore boolean values are converted directly to the PostgreSQL boolean format</para></entry>
	  </row>
	  <row>
	    <entry><para><link linkend="Date"><code>Type::Date</code></link></para></entry>
	    <entry><para><code>INTERVAL</code>, <code>TIMESTAMP</code></para></entry>
	    <entry><para>Relative date/time values are bound as interval data, absolute date/time values are bound as timestamp data.</para></entry>
	  </row>
	  <row>
	    <entry><para><link linkend="Binary"><code>Type::Binary</code></link></para></entry>
	    <entry><para><code>BYTEA</code></para></entry>
	    <entry><para>Qore binary data is bound directly as bytea data.</para></entry>
	  </row>
	</tbody>
      </tgroup>
    </table>

    <table id="pgsql_type_constants">
      <title>PostgreSQL Type Constants for pgsql_bind()</title>
      <tgroup cols='2' align='left' colsep='1' rowsep='1'>
	<thead>
	  <row>
	    <entry><para>Constant</para></entry>
	    <entry><para>Description</para></entry>
	  </row>
	</thead>
	<tbody>
          <row>
            <entry><para><code>PG_TYPE_BOOL</code></para></entry>
            <entry><para><code>boolean</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_BYTEA</code></para></entry>
            <entry><para><code>bytea</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_CHAR</code></para></entry>
            <entry><para><code>char</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_NAME</code></para></entry>
            <entry><para><code>name</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_INT8</code></para></entry>
            <entry><para><code>int8</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_INT2</code></para></entry>
            <entry><para><code>int2</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_INT2VECTOR</code></para></entry>
            <entry><para><code>int2vector</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_INT4</code></para></entry>
            <entry><para><code>integer</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_REGPROC</code></para></entry>
            <entry><para><code>regproc</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_TEXT</code></para></entry>
            <entry><para><code>text</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_OID</code></para></entry>
            <entry><para><code>oid</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_TID</code></para></entry>
            <entry><para><code>tid</code> (tuple id)</para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_XID</code></para></entry>
            <entry><para><code>xid</code> (transaction id)</para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_CID</code></para></entry>
            <entry><para><code>cid</code> (command identifier)</para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_VECTOROID</code></para></entry>
            <entry><para><code>vector</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_TYPE_RELTYPE</code></para></entry>
            <entry><para><code>type_reltype</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_ATTRIBUTE_RELTYPE</code></para></entry>
            <entry><para><code>attribute_reltype</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_PROC_RELTYPE</code></para></entry>
            <entry><para><code>proc_reltype</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_CLASS_RELTYPE</code></para></entry>
            <entry><para><code>class_reltype</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_POINT</code></para></entry>
            <entry><para><code>point</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_LSEG</code></para></entry>
            <entry><para><code>lseg</code> (line segment)</para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_PATH</code></para></entry>
            <entry><para><code>path</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_BOX</code></para></entry>
            <entry><para><code>box</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_POLYGON</code></para></entry>
            <entry><para><code>polygon</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_LINE</code></para></entry>
            <entry><para><code>line</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_FLOAT4</code></para></entry>
            <entry><para><code>float4</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_FLOAT8</code></para></entry>
            <entry><para><code>float8</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_ABSTIME</code></para></entry>
            <entry><para><code>abstime</code> (absolute time)</para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_RELTIME</code></para></entry>
            <entry><para><code>reltime</code> (relative time)</para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_TINTERVAL</code></para></entry>
            <entry><para><code>tinterval</code> (time interval)</para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_UNKNOWN</code></para></entry>
            <entry><para>unknown</para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_CIRCLE</code></para></entry>
            <entry><para><code>circle</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_CASH</code></para></entry>
            <entry><para><code>cash</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_MACADDR</code></para></entry>
            <entry><para><code>macaddr</code> (MAC address)</para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_INET</code></para></entry>
            <entry><para><code>inet</code> (INET address)</para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_CIDR</code></para></entry>
            <entry><para><code>CIDR</code> (network addresses in Classless Intenet Domain Routing format)</para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_ACLITEM</code></para></entry>
            <entry><para><code>aclitem</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_BPCHAR</code></para></entry>
            <entry><para><code>bpchar</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_VARCHAR</code></para></entry>
            <entry><para><code>character varying</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_DATE</code></para></entry>
            <entry><para><code>date</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_TIME</code></para></entry>
            <entry><para><code>time</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_TIMESTAMP</code></para></entry>
            <entry><para><code>timestamp</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_TIMESTAMPTZ</code></para></entry>
            <entry><para><code>timestamp with time zone</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_INTERVAL</code></para></entry>
            <entry><para><code>interval</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_TIMETZ</code></para></entry>
            <entry><para><code>time with time zone</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_BIT</code></para></entry>
            <entry><para><code>bit</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_VARBIT</code></para></entry>
            <entry><para><code>bit varying</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_NUMERIC</code></para></entry>
            <entry><para><code>numeric</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_REFCURSOR</code></para></entry>
            <entry><para><code>refcursor</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_REGPROCEDURE</code></para></entry>
            <entry><para><code>regprocedure</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_REGOPER</code></para></entry>
            <entry><para><code>regoper</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_REGOPERATOR</code></para></entry>
            <entry><para><code>regoperator</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_REGCLASS</code></para></entry>
            <entry><para><code>regclass</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_REGTYPE</code></para></entry>
            <entry><para><code>regtype</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_RECORD</code></para></entry>
            <entry><para><code>record</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_CSTRING</code></para></entry>
            <entry><para><code>cstring</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_ANY</code></para></entry>
            <entry><para><code>any</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_VOID</code></para></entry>
            <entry><para><code>void</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_TRIGGER</code></para></entry>
            <entry><para><code>trigger</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_LANGUAGE_HANDLER</code></para></entry>
            <entry><para><code>language_handler</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_INTERNAL</code></para></entry>
            <entry><para><code>internal</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_OPAQUE</code></para></entry>
            <entry><para><code>opaque</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_ANYELEMENT</code></para></entry>
            <entry><para><code>anyelement</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_INT4ARRAY</code></para></entry>
            <entry><para><code>int4[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_CIRCLEARRAY</code></para></entry>
            <entry><para><code>circle[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_MONEYARRAY</code></para></entry>
            <entry><para><code>money[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_BOOLARRAY</code></para></entry>
            <entry><para><code>bool[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_BYTEAARRAY</code></para></entry>
            <entry><para><code>bytea[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_NAMEARRAY</code></para></entry>
            <entry><para><code>name[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_INT2ARRAY</code></para></entry>
            <entry><para><code>int2[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_TEXTARRAY</code></para></entry>
            <entry><para><code>text[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_OIDARRAY</code></para></entry>
            <entry><para><code>oid[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_TIDARRAY</code></para></entry>
            <entry><para><code>tid[]</code> (array of tuple IDs)</para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_XIDARRAY</code></para></entry>
            <entry><para><code>xid[]</code> (array of transaction IDs)</para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_CIDARRAY</code></para></entry>
            <entry><para><code>cid[]</code> (array of command IDs)</para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_BPCHARARRAY</code></para></entry>
            <entry><para><code>bpchar[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_VARCHARARRAY</code></para></entry>
            <entry><para><code>char varying[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_INT8ARRAY</code></para></entry>
            <entry><para><code>int8[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_POINTARRAY</code></para></entry>
            <entry><para><code>point[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_LSEGARRAY</code></para></entry>
            <entry><para><code>lseg[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_PATHARRAY</code></para></entry>
            <entry><para><code>path[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_BOXARRAY</code></para></entry>
            <entry><para><code>box[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_FLOAT4ARRAY</code></para></entry>
            <entry><para><code>float4[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_FLOAT8ARRAY</code></para></entry>
            <entry><para><code>float8[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_ABSTIMEARRAY</code></para></entry>
            <entry><para><code>abstime[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_RELTIMEARRAY</code></para></entry>
            <entry><para><code>reltime[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_TINTERVALARRAY</code></para></entry>
            <entry><para><code>tinterval[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_POLYGONARRAY</code></para></entry>
            <entry><para><code>polygon[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_MACADDRARRAY</code></para></entry>
            <entry><para><code>macaddr[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_INETARRAY</code></para></entry>
            <entry><para><code>inet[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_CIDRARRAY</code></para></entry>
            <entry><para><code>cidr[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_TIMESTAMPARRAY</code></para></entry>
            <entry><para><code>timestamp[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_DATEARRAY</code></para></entry>
            <entry><para><code>date[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_TIMEARRAY</code></para></entry>
            <entry><para><code>time[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_TIMESTAMPTZARRAY</code></para></entry>
            <entry><para><code>timestamp with time zone[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_INTERVALARRAY</code></para></entry>
            <entry><para><code>interval[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_NUMERICARRAY</code></para></entry>
            <entry><para><code>numeric[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_TIMETZARRAY</code></para></entry>
            <entry><para><code>time with time zone[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_BITARRAY</code></para></entry>
            <entry><para><code>bit[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_VARBITARRAY</code></para></entry>
            <entry><para><code>bit varying[]</code></para></entry>
          </row>
          <row>
            <entry><para><code>PG_TYPE_ANYARRAY</code></para></entry>
            <entry><para><code>any[]</code></para></entry>
          </row>
	</tbody>
      </tgroup>
    </table>

  <sect2 id="pgsql_bind">
    <title>pgsql_bind()</title>
    <variablelist>
      <varlistentry>
        <term>Synopsis</term>
        <listitem>
          <para>Creates a hash data structure understood by the pgsql DBI driver when biding values in SQL queries that allows programmers to directly specify the PostgreSQL data type for the bind.  Use the <link linkend="pgsql_type_constants">pgsql type constants</link> to specify the PostgreSQL data type for the bind.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Usage</term>
        <listitem>
          <programlisting>pgsql_bind(<replaceable>pgsql_type_code, value</replaceable>)</programlisting>
        </listitem>
      </varlistentry>
    </variablelist>
    <table>
      <title>Arguments and Return Values for pgsql_bind()</title>
      <tgroup cols="3" align="left" colsep="1" rowsep="1">
        <thead>
          <row>
            <entry>
              <para>Argument Type</para>
            </entry>
            <entry>
              <para>Return Type</para>
            </entry>
            <entry>
              <para>Description</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para><replaceable>pgsql_type_code, value</replaceable></para>
            </entry>
            <entry>
              <para>Hash</para>
            </entry>
            <entry>
              <para>The hash encodes the desired PostgreSQL type for the bind and the value for binding in the ^pgtype^ and ^value^ keys.</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <table><title>Exceptions Thrown by pgsql_bind()</title>
    <tgroup cols='2' align='left' colsep='1' rowsep='1'>
      <thead>
        <row>
          <entry><para>err</para></entry>
          <entry><para>desc</para></entry>
        </row>
      </thead>
      <tbody>
        <row>
          <entry><para><code>PGSQL-BIND-ERROR</code></para></entry>
          <entry><para>missing type code as first argument</para></entry>
        </row>
      </tbody>
    </tgroup>
    </table>
  </sect2>
  
  </sect1>
