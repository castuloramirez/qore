2012-09-17 08:39  david_nichols

	* ., configure.ac, doxygen/lang/900_release_notes.dox.tmpl,
	  doxygen/lang/Doxyfile.tmpl, doxygen/lib/Doxyfile, doxygen/pdox,
	  include/qore/intern/LocalVar.h, include/qore/intern/QoreValue.h,
	  lib/Makefile.am, lib/QoreSQLStatement.cpp, lib/Variable.cpp,
	  qlib/MailMessage.qm, qlib/Mime.qm, qore.spec: new bugfix release
	  based on qore 0.8.5 with the following bug fixes from trunk:
	  - fixed a race condition accessing global and closure-bound
	  thread-local variables in multithreaded contexts
	  - fixed a bug in transaction management with the DatasourcePool
	  class when used with the SQLStatement class
	  - fixed an error in the MailMessage.qm user module where mail
	  headers requiring encoding were not encoded and those not
	  requiring encoding were encoded with Q encoding
	  - fixed an error in the Mime.qm user module where "_" characters
	  in q-encoded headers were not encoded correctly

2012-09-02 18:11  david_nichols

	* tagged the 0.8.5 release

2012-08-31 11:51  david_nichols

	* * added <date>::midnight() pseudo-method
	  * fixed regex for post-processing doxygen output to process
	  pseudo-methods with arguments properly
	  * doc updates

2012-08-30 20:47  david_nichols

	* removed THREAD_CONTROL from new thread TZ functions as they only
	  affect the current program

2012-08-30 20:43  david_nichols

	* added the set_thread_tz() and get_thread_tz() functions to allow
	  the time zone to be set per Program / thread

2012-08-30 18:38  david_nichols

	* updated release notes for last bug fix

2012-08-30 17:46  david_nichols

	* fixed a bug where internal code would assume that a pointer was a
	  valid pointer to a type even with a type restrictions of "or
	  nothing" (ex: *hash, *list, etc) however it could be a pointer to
	  the NOTHING object instead of a pointer to the "real" type - the
	  fix was to make sure that all arguments are evaluated such that
	  any NOTHING pointers are substituted with null pointers

2012-08-29 17:06  david_nichols

	* doc updates

2012-08-29 13:15  david_nichols

	* implemented the <value>::lsize() <nothing>::lsize() and
	  <list>::lsize() pseudo-methods to quickly get the length of a
	  list or a single element

2012-08-27 15:43  david_nichols

	* minor updates

2012-08-27 15:18  david_nichols

	* added the symlink() function

2012-08-27 14:33  david_nichols

	* commented out tests that only work when run in the European CET
	  time zone

2012-08-27 13:13  david_nichols

	* mingw compile fix

2012-08-20 08:28  david_nichols

	* module doc updates

2012-08-20 08:23  david_nichols

	* * updated iterator classes to accept NOTHING to give empty
	  iterators
	  * updated the ListHash*Iterator classes to only throw an
	  exception if a hash key is assigned a value and not a list (ie
	  they no longer throw exceptions if assigned NOTHING; this is now
	  treated like an empty list)
	  * updated and corrected iterator documentation
	  * updated the POP3 module to optionally support "STLS" (=
	  STARTTLS); significantly updated module documentation
	  * updated module docs to allow cross-referencing the MailMessage
	  module in the Pop3Client and SmtpClient modules
	  * updated the pop3.q example to support more options

2012-08-20 05:32  david_nichols

	* fixed a typo in the docs

2012-08-18 07:04  david_nichols

	* committed most of rurban's better multiarch support patch

2012-08-18 06:27  david_nichols

	* fixed a bug handling global thread-local variables where only the
	  first such variable had true global scope

2012-08-16 11:32  david_nichols

	* * fixed a parse-time variant matching bug where an argument with
	  parse-time type "object" would be matched as a perfect match to
	  any parameter with any class restriction; this would cause
	  run-time type errors if another valid class was passed that
	  matched another variant of the method or function
	  * updated release notes about this bug

2012-08-12 16:13  david_nichols

	* * added new map constants for type info
	  * release note updates

2012-08-11 07:00  david_nichols

	* added cross-references to the ListHashIterator and
	  HashListIterator classes for iterating query results in
	  appropriate places

2012-08-05 11:02  david_nichols

	* release notes updates

2012-08-05 07:25  david_nichols

	* updated release notes

2012-08-05 07:01  david_nichols

	* added ListHash*Iterator classes and tests for iterating
	  Datasource*::selectRows() results

2012-08-03 07:15  david_nichols

	* * fixed iterator inheritance for efficiency's sake
	  * fixed local variable search alogrithm when out-of-order parsing
	  is used

2012-08-02 20:39  david_nichols

	* fixed reference leaks in new HashList*Iterator classes

2012-08-02 20:28  david_nichols

	* fixed HashListReverseIterator constructor

2012-08-02 20:23  david_nichols

	* added missing file

2012-08-02 20:22  david_nichols

	* * added HashListIterator and HashListReverseIterator classes to
	  iterate query results with an iterator class
	  * fixed broken typeInfo initialization during parsing which could
	  result in a crash
	  * fixed typos in pop3.q

2012-08-02 20:05  david_nichols

	* * fixed setting -pthread on Linux for getting access to all
	  pthread functionality on recent versions of Linux (also works on
	  old versions of Linux) - so stack guard works again
	  * fixed typos in pop3.q

2012-08-02 16:35  david_nichols

	* fixed a bug where the 'require-types' parse option was being
	  inherited by user modules, causing them to fail to load when
	  'require-types' was set in the loading program

2012-07-31 12:38  david_nichols

	* doc/release notes updates

2012-07-30 17:47  david_nichols

	* * added the call_pseudo() function to explicitly call
	  pseudo-methods
	  * updated the release notes for 0.8.5 (partially)

2012-07-27 18:17  david_nichols

	* * added new abstract iterator classes
	  * added AbstractIterator as a base class of SQLStatement
	  * updated qpp to allow for multiple inheritance of builtin
	  classes
	  * updated docs; started drafting release notes for 0.8.5

2012-07-23 16:06  david_nichols

	* more on-demand / out of order parsing fixes

2012-07-23 15:16  david_nichols

	* many minor doc updates + added docs for abstract methods

2012-07-19 15:07  david_nichols

	* added AbstractIterator support for the select operator

2012-07-19 14:58  david_nichols

	* * added AbstractBidirectionalIterator class (for the ...::prev()
	  method)
	  * implemented support in more list operators (map w/ select,
	  foldl, foldr)
	  * fixed more subtle bugs with on-demand, out-of-order parse
	  initialization regarding resolving unscoped objects declared in
	  the same namespace as the object being initialized

2012-07-18 20:02  david_nichols

	* * implemented new iterator classes and support in the map
	  iterator for classes derived from AbstractIterator
	  * fixed a subtle and long-standing bug with out-of-order parsing
	  and resolving global thread-local variables

2012-07-17 11:08  david_nichols

	* * eliminated an unused list in the abstract method structure
	  * fixed merging abstract variants from builtin parent classes

2012-07-17 10:59  david_nichols

	* added a new helper function

2012-07-17 10:44  david_nichols

	* do not try to initialize abstract method variants

2012-07-15 19:08  david_nichols

	* minor build fixes

2012-07-15 18:45  david_nichols

	* * initial abstract method implementation with 2 new abstract
	  classes: AbstractDatasource and AbstractIterator, no
	  documentation yet
	  * doxygen indexing fixes

2012-06-28 11:45  subik

	* fixed: format_date uppercased output for MON/DAY and related

2012-06-25 13:51  david_nichols

	* * minor Pop3Client fixes and updates
	  * implemented -d,--delete for the pop3.q example to remove emails
	  from the server on exit
	  * minor doc updates

2012-06-25 13:00  david_nichols

	* * many bugfixes after practical testing of the Pop3Client
	  (bugfixes in MailMessage) and SmtpClient modules
	  * fixed runtime type error message to not display "any" when no
	  arguments were passed to a function/method/closure/call
	  reference, etc

2012-06-25 11:01  david_nichols

	* added pop3 example, fixed a bug in the MailMessage module

2012-06-25 10:29  david_nichols

	* eliminated some redundant code

2012-06-25 10:26  david_nichols

	* improved QOREADDRINFO-GETINFO-ERROR exception description by
	  adding information about the arguments passed

2012-06-25 08:57  david_nichols

	* updated logic to better deal with symlinks for /lib -> /usr/lib
	  and /lib64 -> /usr/lib64 as with Fedora 17

2012-06-25 07:43  david_nichols

	* mail message parsing improvements, doc updates

2012-06-22 09:31  david_nichols

	* fixed Pop3Client module documentation

2012-06-22 09:16  david_nichols

	* * qdx improvements and fixes - fixed a bug finding the close
	  bracket "}" where text in regular expressions was not ignored
	  * minor doc improvements
	  * fixed a memory leak in the parser related to parse exception
	  handling with namespace members
	  * fixed a typo in the SmtpClient module

2012-06-19 05:41  david_nichols

	* minor updates

2012-06-18 14:04  david_nichols

	* * fixed an invalid assert() in module handling when an error
	  occurs loading the module
	  * minor fixes in the Mime module

2012-06-15 18:29  david_nichols

	* mail msg parsing fixes

2012-06-15 15:34  david_nichols

	* * new MailMessage user module to implement the Message and
	  Attachment class for Pop3Client (formerly in SmtpClient only)
	  * added string argument to chr(int, string) to accept an output
	  encoding
	  * added int(string, int) variant to parse a string as a number
	  and give the base

2012-06-15 10:44  david_nichols

	* * added common digest functions as pseudo-methods to string and
	  binary pseudo-classes
	  * tagged digest and cryptoi functions properly as RET_VALUE_ONLY
	  * fixed APOP authentication in new Pop3Client module

2012-06-14 14:07  david_nichols

	* do not kill TID 1 (the initial / main thread) when calling exit()
	  as a crash can result with some 3rd party libraries that spawn
	  their own threads (under some conditions - for example the TIBCO
	  SDK with some adapters)

2012-06-14 11:24  david_nichols

	* * doc updates
	  * reference fixes
	  * added a new parameter to parse_url() and parseURL() to allow
	  for any [] in the hostname to be included in the "host" output
	  key for indicating that the ipv6 protocol be used

2012-06-13 17:59  david_nichols

	* initial not-totally-functional Pop3Client module

2012-06-12 11:17  david_nichols

	* updated docs for universal reference support

2012-06-12 10:19  david_nichols

	* added code to detect circular references at runtime and throw an
	  appropriate exception

2012-06-11 20:03  david_nichols

	* added support for completely universal references anywhere in
	  qore, including references to local variables in a background
	  expression, etc

2012-06-09 09:50  david_nichols

	* minor non-functional changes

2012-06-09 06:27  david_nichols

	* added the following pseudo-methods:
	  * <string>::split()
	  * <string>::regex()
	  * <string>::regexExtract()
	  * <list>::join

2012-06-08 15:24  david_nichols

	* build fixes

2012-06-08 15:02  david_nichols

	* minor changes

2012-06-08 14:44  david_nichols

	* use the xxhash algorithm instead of std::map - results in nearly
	  2x faster hash lookups for large hashes

2012-06-08 12:59  david_nichols

	* minor updates

2012-06-08 06:14  david_nichols

	* another pseudo-method doc fix

2012-06-07 08:27  subik

	* fix for datasource's (pool) execRaw in some cases

2012-06-07 07:43  david_nichols

	* added the File::isOpen() method

2012-06-05 14:07  david_nichols

	* show "any" instead of "<no type info>" for the type name when no
	  type restriction is present

2012-06-01 13:10  david_nichols

	* do not call pthread_join() on the initial thread on Darwin from a
	  background thread because it crashes for some unexplained reason,
	  but only when debugging is disabled; the error is:
	  Program received signal EXC_BAD_ACCESS, Could not access memory.
	  Reason: KERN_INVALID_ADDRESS at address: 0x0000000000000000
	  [Switching to process 21522 thread 0x1a03]
	  0x00007fff8e4c4800 in pthread_join ()
	  (gdb) where
	  #0 0x00007fff8e4c4800 in pthread_join ()
	  #1 0x000000010013ba9f in qore_exit_process (rc=0) at
	  thread.cpp:1358
	  #2 0x0000000100172f2f in f_exit_vi (args=0x100d27e00,
	  xsink=0x100f80ef0) at ql_lib.qpp:176
	  #3 0x0000000100298b3e in BuiltinFunctionVariant::evalFunction
	  (this=0x100e92280, name=0x100e92368 "exit", ceh=@0x100f80660,
	  xsink=0x100f80ef0) at BuiltinFunction.h:110
	  ...
	  it works on other platforms...

2012-06-01 09:09  david_nichols

	* minor updates

2012-06-01 07:59  david_nichols

	* new pseudo-methods for list and string, HttpServer module updates

2012-06-01 06:13  david_nichols

	* include printf formatting defines in public header files

2012-05-31 18:06  david_nichols

	* made constants public

2012-05-31 16:18  david_nichols

	* * added new Mime functions and a new class: MultiPartMixedMessage
	  * use the new Mime functionality in the SmtpClient class
	  * doc corrections

2012-05-31 11:51  david_nichols

	* updated library version to 5.7.1, updated module api to 0.13

2012-05-31 11:25  david_nichols

	* qpp now tags internal binding functions as DLLLOCAL

2012-05-31 10:48  david_nichols

	* mostly cosmetic changes

2012-05-31 10:48  david_nichols

	* qpp updates fo rthe xml module

2012-05-29 18:55  david_nichols

	* fixed an extraneous error message when building qore not from svn
	  checkout

2012-05-29 09:56  david_nichols

	* qdx fixes and fixed a typo

2012-05-28 11:56  david_nichols

	* add release notes page as a subpage

2012-05-26 06:16  david_nichols

	* release note updates

2012-05-25 16:59  david_nichols

	* * added release notes for qore 0.8.4 to doxygen docs
	  * fixed a harmless warning in qore_program_private.h

2012-05-25 04:22  david_nichols

	* spec file fixes

2012-05-24 11:57  david_nichols

	* updated build to support the html and install-html targets; fixed
	  dependencies for buildin docs without library (in face generating
	  the doxygen sources requires building the library anyway, but
	  this is now supported automatically); updated spec file
	  accordingly; docs are no longer built when making rpms from the
	  spec file

2012-05-24 08:08  david_nichols

	* added qdx to distribution for use with generating documentation
	  in modules

2012-05-23 16:04  david_nichols

	* hopefully fixed the "double build" issue that cropped up recently

2012-05-23 13:38  david_nichols

	* allow 2 versions of qpp values to be given: {text}val where text
	  is the version output for Doxygen only and val is the value used
	  for generating the C++ value

2012-05-23 11:40  david_nichols

	* * removed a debug msg
	  * fixed a memory bug in the new builtin function API used by
	  modules that use qpp

2012-05-23 08:20  david_nichols

	* fixed a typo in an example

2012-05-23 08:19  david_nichols

	* updated to 0.8.5 for next release

2012-05-23 06:30  david_nichols

	* fixed spec bugs

2012-05-22 19:11  david_nichols

	* turn off strict aliasing on g++; we break the rules anyway

2012-05-22 19:08  david_nichols

	* fixed a warning

2012-05-22 17:29  david_nichols

	* windows readme and changelog update

2012-05-22 17:20  david_nichols

	* changes for Windows/mxe (mingw creoss-compiler) builds

2012-05-22 08:52  david_nichols

	* fixed minor grammatical mistake in description

2012-05-22 08:49  david_nichols

	* * packaging fixes for building with automake < 1.12
	  * removed old docbook documentation
	  * updated spec file for new docs, created devel-doc package,
	  other minor spec file fixes

2012-05-21 12:41  david_nichols

	* * "finalize" static class vars in Program destruction at the same
	  time as global variables
	  * make sure and "finalize" program vars before marking the
	  Program as invalid
	  * implemented missing class SignatureHash copy constructor

2012-05-21 08:23  david_nichols

	* * fixed bugs reporting the parse error location for unresolved
	  class lookups in parsing stage 2
	  * minor doc updates

2012-05-18 12:07  david_nichols

	* fixed a race condition deleting thread local data caused by a
	  lack of serialization between thread termination and
	  program-global thread-local data deletion

2012-05-18 10:41  david_nichols

	* windows / mxe / mingw compile/build fixes

2012-05-18 10:35  david_nichols

	* windows / mxe / mingw compile fixes

2012-05-18 09:29  david_nichols

	* do not try to remove signal handlers on platforms that don't
	  support signals

2012-05-18 09:15  david_nichols

	* minor doc fixes, declared some internal methods in modules final

2012-05-17 15:30  david_nichols

	* * implemented support for "final" class methods
	  * minor documentation corrections

2012-05-16 17:12  david_nichols

	* build fixes

2012-05-16 13:39  david_nichols

	* * rewrote constant list initialization to save context for out of
	  order assignment expression initialization
	  * initial implementation of "final" classes (cannot be
	  subclassed)
	  * fixed a bug where static class methods could not access private
	  objects in their class'
	  * added parent class information to class' SHA1 hashes
	  * rewrote class one-time initialization; it was not being
	  executed on some classes in certain cases that were never
	  otherwise referenced; this would cause problems with module
	  classes when exported; also fixed recursive class hierarchy check
	  and integrated with new initialization solution

2012-05-15 09:19  david_nichols

	* minor fixes; started implementing support for the "final" keyword

2012-05-15 08:07  david_nichols

	* build fix

2012-05-14 14:50  david_nichols

	* * HttpServer updates
	  * fixed a bug detecting recursive class hierarchies at parse time

2012-05-14 11:36  david_nichols

	* * implemented an "assigned" bit for optimized lvalues so that
	  they can still hold "NOTHING" when unassigned or after
	  deletion/removal for backwards-compatibility and consistency with
	  all other lvalues in Qore.
	  * updated the Qore HttpServer module to generate RFC
	  2616-compliant Server strings and to send out the msg body with
	  redirect messages
	  * updated the httpserver.q example program to send a small msg
	  body with redirect messages

2012-05-14 09:58  david_nichols

	* added ssl key to context hash to identify secure connections

2012-05-13 20:35  david_nichols

	* * fixed removing/deleting static class variable lvalues
	  * implemented initial QoreValue structure
	  * minor fixes and cleanups

2012-05-13 10:28  david_nichols

	* doc updates

2012-05-12 18:41  david_nichols

	* use tag files to link documentation

2012-05-12 09:34  david_nichols

	* fixed module documentation to not document private / internal
	  definitions

2012-05-11 20:27  david_nichols

	* user module doc updates

2012-05-11 09:18  david_nichols

	* more smtp client fixes

2012-05-11 09:10  david_nichols

	* more SmtpClient fixes

2012-05-11 08:59  david_nichols

	* Smtp body encoding fixes

2012-05-11 08:47  david_nichols

	* module doc updates and SmtpClient locking fixes

2012-05-10 14:19  david_nichols

	* fixed broken HttpServer module

2012-05-10 14:03  david_nichols

	* module doc and typo updates

2012-05-10 12:52  david_nichols

	* more updates

2012-05-10 12:00  david_nichols

	* progress on integrating user module documentation with Qore's
	  documentation

2012-05-10 10:16  david_nichols

	* fixed integer overflow exception text

2012-05-10 08:25  subik

	* qdx fix for fresh qore compilation/install

2012-05-09 19:19  david_nichols

	* added some new method to SmtpClient

2012-05-09 19:19  david_nichols

	* started adding infrastructure for generating doxygen
	  documentation from qore-language sources (currently a bit of a
	  mess and not fully functional)

2012-05-09 14:46  david_nichols

	* fixed 2 memory bugs in the regex subst operator =~ s///
	  * the validity of the source expression number (ie $2, $3, etc)
	  was not checked before trying to copy the source expression -
	  invalid numbers would result in a crash
	  * if a non-UTF-8-encoded string was passed to the regex subst
	  operator, the unconverted string was used when copying data to
	  the target string

2012-05-09 09:48  david_nichols

	* cosmetic updates and to eliminate some warnings on some compilers

2012-05-08 18:06  david_nichols

	* * fixed a (newly-inserted) bug in the GetOpt class
	  * added Program::destructor() to make sure that Program objects
	  are never used after they are deleted
	  * internal implementation changes to ensure that Programs are not
	  deleted when code is running in them and that Programs cannot be
	  accessed after they are deleted even though their object may have
	  pointers to it (and therefore still exists with a positive ref
	  count)

2012-05-08 12:01  david_nichols

	* * many small doc/typo updates
	  * updated class static vars to use optimized lvalue storage and
	  new APIs
	  * updated release notes for upcoming 0.8.4 release
	  * do not set MAX_QORE_THREADS with Darwin 11 (OSX 10.7) as the
	  pthread_create() bug appears to have been fixed
	  * minor getopt.q example fixes

2012-05-08 06:50  david_nichols

	* fixed example telnet port in help text

2012-05-07 20:00  david_nichols

	* fixed typos

2012-05-07 19:57  david_nichols

	* * started writing release notes for 0.8.4
	  * fixed a typo in the <bool> pseudo-class

2012-05-07 17:55  david_nichols

	* fixed a memory error bug managing thread-local resources when
	  Datasource::setAutoCommit() or Datasource::open() is called when
	  the transaction lock is held

2012-05-07 15:22  david_nichols

	* linux compile fixes

2012-05-07 13:39  david_nichols

	* * renamed QoreValue to QoreLValue
	  * make sure the QoreProgram object does not get deleted while
	  clearing thread-local vars
	  * removed incorrect assert() in LocalVarValue::finalize()
	  * doc and example and qlib updates
	  * addded httpserver example program

2012-05-07 12:08  david_nichols

	* minor doc updates

2012-05-07 11:51  david_nichols

	* check foreach var expression in parse init stage, not in parser
	  directly

2012-05-07 10:36  subik

	* compilation fix. I'm not sure if it will work on linux/windows -
	  but it's required on mac. There os no parser.h, just parser.hpp

2012-05-07 09:42  david_nichols

	* renamed the Telnet module -> TelnetClient

2012-05-06 19:47  david_nichols

	* * minor non-functional GetOpt implementation cleanups
	  * updated getopt.q to typed qore + added MIT license text
	  * minor telnet updates

2012-05-06 13:34  david_nichols

	* * added "type" and "typename" keys to the EVENT_HOSTNAME_RESOLVED
	  event
	  * added "type", "typename", and "address" keys to the
	  EVENT_CONNECTING event
	  * updated the C++ q_addr_to_string2 API (used internally to look
	  up text address info from binary address info) to return the UNIX
	  domain socket path as the address if passed an address in family
	  AF_UNIX
	  * minor updates to qget and other example programs; added MIT
	  license text

2012-05-05 05:42  david_nichols

	* updated bug text regarding signal handling

2012-05-04 17:03  david_nichols

	* * make sure objects and call references prolong the scope of
	  their Program objects at runtime
	  * track signals managed by Program objects and remove when the
	  Program object is destroyed
	  * updated the Telnet module and telnet example

2012-05-03 18:04  david_nichols

	* fixed a race condition with Program objects when a signal handler
	  is left active and the Program terminates

2012-05-03 06:59  david_nichols

	* added Telnet module to release

2012-05-02 20:08  david_nichols

	* added initial telnet module and example

2012-05-02 19:17  david_nichols

	* minor fix

2012-05-02 15:17  david_nichols

	* added additional serialization for the SmtpClient class, added
	  help text for the --user and --pass options for email.q

2012-05-02 15:00  david_nichols

	* minor fixes

2012-05-02 14:49  david_nichols

	* * implemented Socket::upgradeClientToSSL() and
	  Socket::upgradeServerToSSL() methods
	  * added STARTTLS and AUTH BASIC support to the SmtpClient module
	  * added an email.q example program

2012-05-02 12:24  david_nichols

	* implemented GetOpt::parse3() that prints an error message on
	  stdout and exits the process if there are any errors

2012-05-02 11:53  david_nichols

	* * if a pseudo-method is run on a typed lvalue that has not been
	  assigned (or has been deleted) and has no value, then use a
	  dynamic dispatch on the <value> base pseudo-class instead of
	  trying to run the typed value's method (which is no longer valid)
	  - otherwise a crash results
	  * do not add dynamically-loaded modules to the static namespace
	  or to the global feature list as this breaks encapsulation and
	  also breaks user module dependencies
	  * updated the Mime module - implemented quoted-pritable support
	  * updated the SmtpClient module - integrated new Mime
	  functionality and implemented logging

2012-05-02 05:00  david_nichols

	* * added pseudo-classes for closures and call references

2012-05-01 08:52  david_nichols

	* updated modules - added Mime module - renamed Smtp.qm ->
	  SmtpClient.qm - put Qore modules under the MIT license

2012-04-30 16:36  david_nichols

	* updated docs

2012-04-30 15:46  david_nichols

	* do not try to execute %= 0 or a runtime exception will occur

2012-04-30 15:39  david_nichols

	* fixed enforcing read-only imported global variables

2012-04-30 15:09  david_nichols

	* implemented the set_thread_init() function to allow for a user
	  function that is run every time a new thread is started in (or
	  accesses) a Program - to initialize thread-local data, for
	  example

2012-04-30 13:16  david_nichols

	* fix for UNIX builds

2012-04-30 13:13  david_nichols

	* more mingw cross-compile build fixes

2012-04-30 12:31  david_nichols

	* mingw cross compile build fixes

2012-04-30 10:26  david_nichols

	* small performance improvement to object += (hash|object) - just
	  check object access once outside the iterator

2012-04-30 09:23  david_nichols

	* * improved socket error messages
	  * use socket connect error messages for socket connection
	  failuers in the FtpClient class

2012-04-30 08:20  david_nichols

	* removed post->pre inc/dec parse init optimization as it's no
	  longer necessary and anyway the information about whether the
	  result of the operation is used is known afterwards

2012-04-30 08:14  david_nichols

	* fixed object member notifications and lvalue access to private
	  members outside the class

2012-04-30 07:07  david_nichols

	* fixed member gate test - the previous implementation was wrong
	  and the test verified the incorrect behavior

2012-04-30 07:02  david_nichols

	* * check that lvalue delete/remove operations are possible before
	  executing
	  * fixed file encoding test

2012-04-30 06:57  david_nichols

	* * fixed a bug in the File class where the encoding given in the
	  constructor was ignored
	  * many small corrections to File class docs
	  * fixed bugs in the post++ and post-- operators
	  * added support for floating-point ++ and -- operators (both pre
	  and post)

2012-04-29 20:27  david_nichols

	* fixed a couple of minor namespace scope lookup issues; added bare
	  ref regression test script

2012-04-29 14:20  david_nichols

	* removed unused parse flag

2012-04-29 14:03  david_nichols

	* * do not allow a reference to a local variable to be passed to a
	  closure at runtime
	  * minor formatting updates
	  * moved some private functions out of public header files (still
	  lots more work to do...)

2012-04-29 12:11  david_nichols

	* * fixed lvalue access to local variable and closure references
	  * removed unused code
	  qore should be stable again now

2012-04-29 07:18  david_nichols

	* * do not create list entries when accessing for removal or
	  deletion
	  * make sure and use pointers after calls to
	  LValueHelper::ensureUnique() (fixed a big bug in the new lvalue
	  implementation)

2012-04-29 07:02  david_nichols

	* more updates (still not stable)

2012-04-29 06:07  david_nichols

	* corrected some errors in temporary storage in LValueHelper

2012-04-29 05:53  david_nichols

	* ensure lvalues are unique before editing when removing
	  hash/object keys

2012-04-29 05:33  david_nichols

	* fixes from yesterday's patch - still not stable

2012-04-28 18:11  david_nichols

	* major lvalue rewrite - corrected several design bugs in lvalue
	  and operator handling - is not totally stable though

2012-04-27 11:19  david_nichols

	* * save and restore parse location when executing parseCommit() -
	  this fixes a bug in %push-parse-options
	  * store parse location in more places for use in error messages
	  in parseCommit() - this fixes some parse location bugs for errors
	  in 2nd stage parsing

2012-04-26 19:14  david_nichols

	* formatting changes

2012-04-26 19:05  david_nichols

	* * doxygen updates/fixes
	  * formatting fixes
	  * implemented ::strp() and ::intp() pseudo-methods in the base
	  class and overrides where they could return True
	  * fixed Queue::getWriteWaiting() method name

2012-04-26 17:42  david_nichols

	* fixed applying type filters to blocks with a return type with a
	  type filter but with no return statement

2012-04-26 16:25  david_nichols

	* http server updates

2012-04-26 14:25  david_nichols

	* fixed exception msg

2012-04-26 12:46  david_nichols

	* * updated the Queue object to accept a maximum size - write
	  operations will block on the Queue if it reaches this size
	  * fixed some reference leaks with exception handling
	  * updated the File, Socket, FtpClient, and HTTPClient objects to
	  only accept Queues without a maximum size limit for I/O event
	  monitoring
	  * updated qpp to include pre-processor-style references to the
	  source file and line for better error reporting in cpp sources
	  generated by qpp

2012-04-25 15:39  david_nichols

	* fixed a bug checking for optimized local and closure variables
	  with references

2012-04-25 15:29  david_nichols

	* fixed a memory leak in the new lvalue handling

2012-04-25 13:49  david_nichols

	* checked in missing file

2012-04-25 13:48  david_nichols

	* * major lvalue infrastructure overhaul, all global, closure, and
	  local vars are stored in an optmized fashion if possible, if
	  declared int, softint, bool, softbool, float, or softfloat
	  * fixed some bugs in the += and *= operators chosing optimized
	  versions of the operator at parse time
	  * reworked optest.q to include more tests and to execute the
	  tests much faster by re-using the same Program object for each
	  type of test

2012-04-24 11:26  david_nichols

	* fixed documentation of split parameters

2012-04-23 11:16  david_nichols

	* use timeout on all read calls

2012-04-23 11:10  david_nichols

	* fixed runtime namespace assimilation and class_handler
	  propagation

2012-04-22 17:31  david_nichols

	* * fixed a crashing bug handling invalid operators on optimized
	  local variables
	  * minor doc update

2012-04-22 13:34  david_nichols

	* * updates to ensure using 64-bit parse options on the command
	  line
	  * many dox updates

2012-04-22 12:36  david_nichols

	* minor doc clarifications

2012-04-22 12:33  david_nichols

	* implemented PO_NO_EMBEDDED_LOGIC to disallow dynamic parsing,
	  applied this to module Programs, made many small doc corrections

2012-04-20 16:16  david_nichols

	* fixed parse error function calls using eliminated function; added
	  Smtp module to Qore library

2012-04-20 15:23  david_nichols

	* parse fix for global variables references in the top-level block

2012-04-20 15:14  david_nichols

	* added support for a deletion closure in modules to free module
	  resources

2012-04-20 14:32  david_nichols

	* more size_t printf fixes

2012-04-20 13:31  david_nichols

	* fixed errors where size_t was assumed to be the same as unsigned
	  long

2012-04-20 13:25  david_nichols

	* fixed memory error with printf formatting on 32 bit platforms
	  with size_t arguments

2012-04-20 12:08  david_nichols

	* report invalid header info in the "arg" key when throwing a
	  SOCKET-HTTP-ERROR

2012-04-19 18:40  david_nichols

	* fixed some packaging and build issues, rpm building works again
	  (on opensuse at least)

2012-04-19 17:17  david_nichols

	* build fixes for user library

2012-04-19 17:14  david_nichols

	* updated and converted the HttpServer class to the first of Qore's
	  runtime library user modules; updated the build to support
	  installing the user modules with qore; added a version-specific
	  directory to the module path that should contain the runtime
	  library (qore-modules/{version} - ex: qore-modules/0.8.4);
	  removed all support for auto-loading modules as it was not used
	  and is a big security risk

2012-04-19 15:40  david_nichols

	* fixed bugs in get_last_word()

2012-04-19 13:54  david_nichols

	* * added module documentation
	  * added docs for declaring public namespace members and public
	  namespaces in modules
	  * added support for marking constants as public (+ docs)
	  * fixed some minor parser issues + 1 memory bug (crash) with the
	  %requires directive

2012-04-19 06:28  david_nichols

	* fixed another memory leak in the new global variable parse
	  handling

2012-04-19 06:25  david_nichols

	* fixed a memory leak in the new global variable parse handling

2012-04-19 06:17  david_nichols

	* fixed setting parse location for errors when resolving global
	  variables

2012-04-18 19:29  david_nichols

	* implemented better global variable resolution; no longer
	  dependent on parse order; implemented the possibility to declare
	  glbar variables directly in a namespace declaration (however
	  global vars declared this way must be initialized elsewhere)

2012-04-18 11:20  david_nichols

	* parse improvements for declaring public (exported) objects in
	  modules

2012-04-18 08:04  david_nichols

	* changed user module declaration to be "module <name> {}" rather
	  than using a name tag inside the definition

2012-04-17 16:43  david_nichols

	* clean up any local variables declared in the module
	  initialization expression

2012-04-17 16:39  david_nichols

	* added parameter names to signature text for user & builtin
	  functions, methods, closures, etc

2012-04-17 16:08  david_nichols

	* implemented initial user module initialization

2012-04-17 14:05  david_nichols

	* initialize finalized member in every constructor

2012-04-17 12:57  david_nichols

	* improved error handling in module loading; added additional
	  checks; dox fixes

2012-04-16 20:27  david_nichols

	* fixed debugging stmt

2012-04-16 20:14  david_nichols

	* initial support for user modules

2012-04-16 18:33  david_nichols

	* added support for detecting hext integers

2012-04-16 07:07  david_nichols

	* fix for last patch

2012-04-16 07:05  david_nichols

	* patch to ensure that enclosing a function call in parentheses
	  after a '.' will ensure that the function call is not converted
	  to a method or pseudo-method call

2012-04-16 06:21  david_nichols

	* minor doc correction

2012-04-14 05:28  david_nichols

	* module searching fixes

2012-04-14 04:17  david_nichols

	* more progress on user module support - merged PO_NO_USER_MODULES
	  and PO_NO_BINARY_MODULES as it will be possible to load binary
	  modules from user modules anyway

2012-04-14 04:15  david_nichols

	* fixed class signature generation with untyped members and vars

2012-04-13 15:42  david_nichols

	* make sure all local variables are destroyed before ending the
	  thread

2012-04-13 15:26  david_nichols

	* make sure and initialize output variables before passing to
	  internal functions

2012-04-13 10:04  david_nichols

	* * implemented Queue::clear() method
	  * fixed a bug in usleep() with relative date/time values (added a
	  new variant to support this)
	  * more progress toward user modules

2012-04-12 20:04  david_nichols

	* * more module manager improvements and work toward supporting
	  user modules
	  * implemented PO_NO_USER_MODULES parse option + docs & constants,
	  etc
	  * fixed a typo in the command-line help for the qore binary with
	  unknown parse options

2012-04-12 18:07  david_nichols

	* build fix and namespace resolution fix

2012-04-12 12:54  david_nichols

	* minor doc update

2012-04-12 12:51  david_nichols

	* updated internal module handling to prepare for user modules;
	  removed more private APIs from public header files

2012-04-11 17:29  david_nichols

	* * many various minor doc fixes
	  * fixed Option::HAVE_SIGNAL_HANDLING to be False if signal
	  handling is disabled on platforms where signal handling is
	  otherwise available
	  * fixed a crash when declaring a global variable in a nonexistant
	  namespace
	  * allow global variable references from the root namespace

2012-04-11 08:23  david_nichols

	* * allow empty namespace declarations like "namespace X {}"
	  * fixed a scanner bug parsing out of line class definitions with
	  a root-justified namespace path (ie: "class ::X::ClassName ...")
	  * improved memory management with temporary namespace and class
	  names saved by the scanner during parsing

2012-04-10 18:56  david_nichols

	* implemented support for referencing global variables with
	  explicit namespace paths

2012-04-10 17:21  david_nichols

	* initial support for declaring global variables in namespaces
	  (only with %new-style or %allow-bare-refs for now)

2012-04-10 12:53  david_nichols

	* added pseudo-method <*>::val() to give perl-like boolean
	  evaluation (if an expression has a value or not) - added new
	  pseudo classes for int, bool, and float types with custom
	  implementations of this method

2012-04-10 08:24  david_nichols

	* initial support for storing global variables in namespaces;
	  removed some private QoreProgram functions from the public header
	  file

2012-04-08 20:45  david_nichols

	* minor doc updates

2012-04-08 16:14  david_nichols

	* completely removed the builtin function list, old exported
	  functions regarding the builtin function list are now deprecated;
	  backwards-compatible functionality was implemented to try to work
	  with the current QoreProgram object or use the
	  staticSystemNamespace; adding functions in modules is now
	  transaction-safe regarding the current Program object (ie adding
	  a duplicate function will cause the module to fail to be loaded
	  at either parse time or runtime)

2012-04-08 06:09  david_nichols

	* track functional domains used in each program; always use
	  QoreProgram::getParseOptions64()

2012-04-07 14:38  david_nichols

	* ensure that function variants are always executed in their soure
	  program (regardless of the object being executed on them in case
	  of class methods). other internal changes

2012-04-05 18:37  david_nichols

	* minor doc additions

2012-04-05 14:43  david_nichols

	* fixed function importing when namespaces are merged at parse
	  time; fixed a memory leak in safe_dslist<>::pop_front() (was not
	  used until now), added cross-Program class compatibility tests to
	  the regression test script

2012-04-05 12:47  david_nichols

	* fixed a typo affecting runtime class matching algorithm when
	  matching subclasses

2012-04-05 10:24  david_nichols

	* implemented a better internal API for checking for class
	  compatibility using the signature hash

2012-04-04 13:57  david_nichols

	* missing files from last commit - for user class matching between
	  heterogenous Programs by using a hashed signature of the class

2012-04-04 13:56  david_nichols

	* implemented support for matching user-created classes that were
	  created in separate Program objects from the same source code by
	  building a class signature and maintaining an SHA1 hash for the
	  class signature and using the signature to match classes with the
	  same name. SHA1 was supported as it must be available on all
	  openssh builds for qore, and represents a balance between safety
	  and performance.

2012-04-03 12:43  david_nichols

	* fixed a typo initializing static methods, fixed resolution order
	  when resolving static methods

2012-04-02 15:03  david_nichols

	* applied transactional consistency to module loading

2012-04-01 19:39  david_nichols

	* ensure that all internal class method APIs can use the new more
	  efficient calling convention; added parameter names to all
	  methods as well as functions; doc updates; qpp output
	  enhancements and fixes

2012-03-30 17:35  david_nichols

	* fixed doxygen generation with doxygen 1.8.0 (have to disable
	  MARKDOWN_SUPPORT)

2012-03-30 17:25  david_nichols

	* doc fixes

2012-03-30 16:48  david_nichols

	* added a TimeZone::date(string) method to be able to create
	  arbitrary dates in a given TimeZone

2012-03-30 06:48  david_nichols

	* further fixes in qpp to ensure that comment text is "space
	  justified" to work around some strange formatting quirks in
	  doxygen

2012-03-30 05:58  david_nichols

	* generalized qpp's support for namespaces; make sure dbi functions
	  are documented as being in the Qore::SQL namespace

2012-03-29 20:50  david_nichols

	* fixes to qpp doxygen generation to work around some quirky
	  doxygen behavior

2012-03-29 19:19  david_nichols

	* added the ability to specify source and target namespaces when
	  importing functions with Program::importFunction()

2012-03-29 11:46  david_nichols

	* migrated all builtin functions to namespaces

2012-03-29 07:24  david_nichols

	* minor changes for merging user & builtin functions

2012-03-27 16:15  david_nichols

	* more progress on unifying user & builtin function variants

2012-03-25 14:25  david_nichols

	* ensure that imported functions are imported into the same
	  namespace as they reside in the parent; fixed a bug in
	  maintaining the internal namespace depth attribute with parsed
	  namespaces

2012-03-23 09:33  david_nichols

	* removed 2 private functions from the QoreProgram api; more
	  progress towards eliminating the difference between user &
	  builtin functions

2012-03-23 09:01  david_nichols

	* more progress towards unifying builtin & user functions -
	  eliminated separate entries for imported functions; program
	  context references are now managed generically in user function
	  variants

2012-03-22 19:53  david_nichols

	* minor doc updates

2012-03-21 20:22  david_nichols

	* fixed non single compilation unit builds

2012-03-21 19:10  subik

	* non-single-compilation-unit fixes

2012-03-21 18:27  david_nichols

	* fixed constant, class, function, and namespace resolution at
	  parse time within a namespace to check the current namespace
	  first

2012-03-21 12:42  david_nichols

	* fixed a bug adding constants to a namespace with a
	  namespace-qualified name in the constant definition (ie const
	  A::x = 1;)

2012-03-21 12:14  david_nichols

	* ensure that the parse location is set if constants need
	  evaluation and an exception is thrown; removed 2 private
	  functions from QoreProgram and moved to the private
	  implementation

2012-03-21 11:36  david_nichols

	* fixed an error where the parse location was not always set
	  correctly for parse errors or warnings when processing constant
	  definitions

2012-03-21 09:25  david_nichols

	* fixed a memory error with QoreHashNode::swapKeyValue()

2012-03-21 09:23  david_nichols

	* fixed a crashing bug in QoreHashNode::setKeyValue() when the
	  value is 0 and an exception occurs or is already active before
	  the call is made

2012-03-19 15:18  david_nichols

	* fixed a bug in date parsing with a format string - off by one
	  with integer months - added a regression test for this case

2012-03-16 18:17  david_nichols

	* to fix warnings with some versions of g++

2012-03-16 11:26  david_nichols

	* fixed setting Program context when calling imported functions
	  with call_function() and call_function_args()

2012-03-14 12:07  david_nichols

	* improved error message when an unknown method/pseudo-method is
	  called on an object

2012-03-13 18:00  david_nichols

	* removed 2 internal functions from the QoreHashNode class,
	  implemented <hash>::firstValue() and <hash>::lastValue()
	  pseudo-methods

2012-03-12 20:03  david_nichols

	* fix for last patch for closures with a bound object context

2012-03-12 15:40  david_nichols

	* reworked internal function class hierarchy, eliminated several
	  virtual function, eliminated the BuiltinFunction class - now all
	  function classes are derived from QoreFunction

2012-03-11 20:25  david_nichols

	* renamed UserFunction -> QoreFunction in preparation to eliminate
	  the BuiltinFunction class

2012-03-10 18:40  david_nichols

	* started simplifying function hierarchy - working towards unifying
	  user & builtin function (and all derived classes including method
	  function) classes

2012-03-09 21:40  david_nichols

	* fixed 2 typos in docs

2012-03-08 21:32  david_nichols

	* fixed TermIOS::getWindowSize() to be static again

2012-03-08 21:22  david_nichols

	* fixed a long-standing bug where namespace and class names were
	  not available for parse errors raised before the namespace or
	  class was added to the root namespace - now namespace and class
	  names are always available and reported when errors are raised at
	  any time

2012-03-08 11:08  david_nichols

	* implemented support for references to functions with namespace
	  paths, started unifying user & builtin function infratsructure

2012-03-07 16:18  david_nichols

	* implemented support for adding functions to namespaces

2012-03-07 12:03  david_nichols

	* namespace optimizations and cleanup

2012-03-07 10:30  david_nichols

	* namespace cleanups and search optimizations

2012-03-07 06:53  david_nichols

	* added a namespace map to the root namespace; more namespace
	  cleanups and optimizations

2012-03-06 16:59  david_nichols

	* added fast class lookups to root namespace, more namespace
	  cleanups

2012-03-06 13:32  david_nichols

	* fixed a memory error with the rethrow statement in enclsoing but
	  nested try-catch blocks

2012-03-01 12:26  david_nichols

	* namespace and parsing fixes from the last patch

2012-02-29 23:32  david_nichols

	* massive namespace cleanups; improved average qore program startup
	  time by 200%

2012-02-29 06:46  david_nichols

	* removed reference to removed file

2012-02-28 18:08  david_nichols

	* namespace cleanups; user & imported function lists merged

2012-02-28 07:39  david_nichols

	* fixed a crashing bug where qore would try to instantiate a class
	  for a type that did not represent a class (ex: 'my int $i();')

2012-02-27 13:28  david_nichols

	* implemented no-binary-modules for %requires and load_module (and
	  associated parse option constant)

2012-02-27 11:34  david_nichols

	* various fixes and cleanups

2012-02-27 09:05  david_nichols

	* additional minor namespace cleanups

2012-02-26 19:51  david_nichols

	* subclass qore_root_ns_private from qore_ns_private for more
	  convenience and to eliminate additional dynamic allocations in
	  RootQoreNamespace

2012-02-25 12:52  david_nichols

	* more namespace cleanups/rewrites; fixed a new memory leak in the
	  new RootQoreNamespace implementation

2012-02-25 10:22  david_nichols

	* fixed typo

2012-02-25 07:57  david_nichols

	* implemented fast root-level depth-first lookups for functions as
	  a model for all other root-level lookups that will replace the
	  full namespace tree searches for all namespace objects

2012-02-24 08:32  subik

	* TODO/FIXME: temp fix for universal builds. Needs to be solved
	  correctly

2012-02-23 21:40  david_nichols

	* migrated function storage location to namespaces (no change in
	  external Qore functionality yet)

2012-02-23 07:06  david_nichols

	* minor updates

2012-02-22 17:00  david_nichols

	* fixed load_module() code flags

2012-02-22 16:44  david_nichols

	* internal namespace optimization; eliminated 6 dynamic allocations
	  per QoreNamespace object

2012-02-22 15:37  david_nichols

	* major namespace API cleanups to preapre for adding builtin and
	  user functions to namespaces

2012-02-22 07:45  david_nichols

	* doc corrections

2012-02-22 07:20  david_nichols

	* minor fixes

2012-02-21 21:47  david_nichols

	* implemented and documented new parse defines:
	  * %assume-global
	  * %old-style
	  * %require-dollar
	  * %push-parse-options

2012-02-21 16:49  david_nichols

	* if exception occur when evaluating immediate constants arguments
	  to an operator at parse time, then ignore the exception

2012-02-21 13:29  david_nichols

	* implemented <value>::size() that always returns 0

2012-02-21 13:23  david_nichols

	* <value>::empty() always returns True

2012-02-21 13:22  david_nichols

	* added <value>::empty() pseudo-method

2012-02-21 13:16  david_nichols

	* fixed example in doc

2012-02-21 06:52  david_nichols

	* fixed building qore docs when cross compiling (at least with
	  mingw)

2012-02-21 06:03  david_nichols

	* removed excess param doc

2012-02-20 14:58  david_nichols

	* minor doc corrections

2012-02-19 16:19  david_nichols

	* major doc updates

2012-02-18 21:30  david_nichols

	* fixed a memory leak in the softlist and *softlist type
	  implementation

2012-02-17 20:43  david_nichols

	* doc updates

2012-02-17 20:28  david_nichols

	* major documentation updates and fixes

2012-02-17 17:36  david_nichols

	* fixed last commit

2012-02-17 16:21  david_nichols

	* dox updates

2012-02-17 15:26  david_nichols

	* doc updates and corrections

2012-02-17 12:16  david_nichols

	* doc updates

2012-02-15 18:22  david_nichols

	* starting adding skeletons for new documentation sections

2012-02-15 18:21  david_nichols

	* added missing file

2012-02-15 14:42  david_nichols

	* added mnew context functions for convenience/efficiency

2012-02-14 09:55  david_nichols

	* added <hash>::values() pseudo-method

2012-02-13 20:02  david_nichols

	* updated param type for GetOpt::parse2()

2012-02-13 19:57  david_nichols

	* added missing qpp documentation and examples

2012-02-13 16:06  david_nichols

	* ported remaining constants to qpp; doc updates

2012-02-13 10:13  david_nichols

	* solaris build fixes and removed debugging lines from dot

2012-02-13 10:03  david_nichols

	* fixed parameter types for the milliseconds() and microseconds()
	  functions

2012-02-12 14:33  david_nichols

	* ported <binary> and <list> pseudo-classes to qpp; updated docs,
	  fixed dot graph generation for pseudo-class hierarchies by
	  filtering dot files before graphic generation

2012-02-12 13:22  david_nichols

	* added qpp docs to newly-ported pseudo-classes, ported <string> to
	  qpp

2012-02-12 07:41  david_nichols

	* ported <hash> pseudo-class to qpp; eliminated <>::elements()
	  pseudo-methods as they are redundant with <>::size() (or
	  <>::length() in case of strings)

2012-02-12 07:27  david_nichols

	* ported the pseudo-object <object> class to qpp

2012-02-12 07:26  david_nichols

	* minor fixes for warnings

2012-02-11 17:19  david_nichols

	* make sure and raise a SOCKET-CLOSED error when reading a HTTP
	  header if no data is received

2012-02-11 16:46  david_nichols

	* updated internal QoreSocket implementation to allow for better
	  error reporting with SSL errors and other errors

2012-02-11 15:15  david_nichols

	* fixed <date>::isDst() and <date>::currentZoneName()

2012-02-09 17:02  david_nichols

	* readded missing SQL constants; updated TODO

2012-02-08 08:11  subik

	* INCLUDES included

2012-02-08 08:04  david_nichols

	* ported date pseudo-methods to qpp, added new pseudo-methods

2012-02-08 07:15  david_nichols

	* added missing file

2012-02-05 20:51  david_nichols

	* minor doc updates

2012-02-05 20:45  david_nichols

	* fixed over-zealous pseudo-method matching code in doxygen
	  comments

2012-02-05 20:04  david_nichols

	* ported <value> pseudo-class to qpp; updated qpp to work with
	  pseudo-classes; added post-processing to work with mangling used
	  for pseudo-classes in doxygen output; ported type code constants
	  to qpp; doc updates

2012-02-04 15:47  david_nichols

	* ported DBI functions/SQL namespace to qpp

2012-02-04 06:44  david_nichols

	* ported environment functions to qpp

2012-02-03 19:45  david_nichols

	* qpp fix and minor doc updates

2012-02-03 19:34  david_nichols

	* migrated object functions to qpp

2012-02-03 19:08  david_nichols

	* migrated io functions to qpp and merged with string functions

2012-02-02 21:08  david_nichols

	* updated copyright statements to reflect 2012

2012-02-02 20:36  david_nichols

	* ported pwd functions to qpp; fixed a minor qpp bug in
	  automatically inserting restriction documentation

2012-02-01 12:49  david_nichols

	* added info for new functions

2012-02-01 12:02  david_nichols

	* solaris 8 build fixes

2012-01-31 18:22  david_nichols

	* added docs to new thread resource functions

2012-01-31 18:18  david_nichols

	* added thread resource marking test

2012-01-31 17:49  david_nichols

	* allow thread resources to be marked and purged to the mark as
	  well as purged wholesale

2012-01-23 22:14  david_nichols

	* minor build fixes

2012-01-23 22:02  david_nichols

	* added explicit copy constructors

2012-01-22 09:04  david_nichols

	* doc and qpp updates

2012-01-21 22:10  david_nichols

	* updated qpp to generate separate init functions for constants;
	  migrated type functions to qpp; migrated option constants to qpp

2012-01-21 12:23  david_nichols

	* removed the name_suffix qpp attribute; instead use name-mangling
	  based on qore parameter types to ensure unique C++ function names

2012-01-21 08:25  david_nichols

	* removed reverse(string) from list function file

2012-01-21 08:24  david_nichols

	* finished documenting list functions; moved reverse(string) to
	  string functions, implement new qpp function attribute
	  "name_suffix" to allow functions with the same name to be defined
	  in separate qpp files

2012-01-20 20:03  david_nichols

	* ported list functions to qpp, not all documentation added yet

2012-01-20 18:05  david_nichols

	* finished documenting math functions, moved format_number() to
	  string functions

2012-01-20 10:38  david_nichols

	* minor non-functional changes

2012-01-20 10:37  david_nichols

	* added some docs

2012-01-20 08:56  david_nichols

	* cosmetic change

2012-01-19 18:07  david_nichols

	* initial port of math functions to qpp (mostly without docs),
	  corrected option constant references in qpp

2012-01-19 09:43  david_nichols

	* minor doc update

2012-01-19 09:33  david_nichols

	* added docs to qpp date function definitions; moved date()
	  functions from ql_type to ql_time, added the possibility to
	  specify microseconds when parsing dates against a mask with the
	  date() function

2012-01-18 20:33  david_nichols

	* initial port of time functions to qpp (missing most docs)

2012-01-18 19:30  david_nichols

	* added todo

2012-01-18 17:20  david_nichols

	* added missing file; updated doxygen/qpp docs

2012-01-18 07:53  david_nichols

	* doc corrections

2012-01-18 07:43  david_nichols

	* doc updated; make sure an convert encodings with index() and
	  rindex() functions if necessary

2012-01-17 17:06  david_nichols

	* ported string functions to qpp

2012-01-17 12:30  david_nichols

	* ported filesystem functions to qpp; moved filesystem functions
	  from ql_lib.qpp -> ql_file.qpp

2012-01-17 11:56  david_nichols

	* mingw/windows cross-compilation updates

2012-01-16 18:10  david_nichols

	* qpp updates; automatically generated restrictions and code flags
	  sections in long comments

2012-01-16 13:07  david_nichols

	* updated configure scripts to only set LIBSUFFIX=64 on 64-bit
	  platfiorms if /usr/lib64 exists

2012-01-16 10:36  david_nichols

	* added new file

2012-01-16 10:32  david_nichols

	* qpp updates + corrections

2012-01-10 19:51  david_nichols

	* ported ql_lib to qpp (without docs) other minor changes

2012-01-07 08:51  david_nichols

	* minor doc edit

2012-01-07 08:44  david_nichols

	* ported the crypto functions to qpp - added all docs

2012-01-06 09:17  david_nichols

	* updated qpp code for crypto functions

2012-01-05 21:42  david_nichols

	* started porting crypto functions to qpp

2012-01-05 17:00  david_nichols

	* ported ql_thread to qpp, minor doc updates

2012-01-05 13:49  david_nichols

	* finished documenting the ql_misc.qpp file; improved some existing
	  C++ APIs and added new argument to the Qore functions using them

2012-01-04 19:47  david_nichols

	* corrected minor typos

2012-01-04 19:43  david_nichols

	* qpp updates; put all compression functions in 1 file and migrated
	  to qpp; added signal constants to qpp; updated qpp to create
	  hashes with symbolid key names

2012-01-04 12:35  david_nichols

	* added functions tagged with QC_RUNTIME_NOOP for
	  backwards-compatibility

2012-01-03 16:24  david_nichols

	* ported ql_misc to qpp - implemented initial support for functions

2012-01-02 18:34  david_nichols

	* compile fix for linux

2012-01-02 12:50  david_nichols

	* backed out last commit to allow literal negative values to be
	  parsed as it breaks things

2012-01-02 12:43  david_nichols

	* allow parsing literal negative floating-point values and also
	  literal negative relative date values

2012-01-02 12:37  david_nichols

	* raise a parse exception if a numberic overflow occurs in literal
	  integer values

2012-01-01 15:18  david_nichols

	* ported the SSLPrivateKey class to qpp; many small doc fixes

2012-01-01 14:41  david_nichols

	* fixed files from last commit

2012-01-01 14:38  david_nichols

	* ported the SSLCertificate class to qpp

2012-01-01 11:54  david_nichols

	* fixed files from last commit

2012-01-01 11:54  david_nichols

	* ported the TimeZone class + docs to qpp

2012-01-01 10:54  david_nichols

	* fixed exception error string

2012-01-01 10:05  david_nichols

	* added documentation to the TermIOS qpp class implementation and
	  implemented constants in qpp

2011-12-31 15:54  david_nichols

	* ported the TermIOS class to qpp (without docs and constants),
	  fixed a bug in qpp generating c++ code for object parameters

2011-12-31 08:48  david_nichols

	* ported the GetOpt class to qpp; minor doc corrections

2011-12-30 16:39  david_nichols

	* more Program class documentation and migrated constants to qpp

2011-12-30 10:27  david_nichols

	* ported the Program class to qpp (w/o constants and docs)

2011-12-29 15:01  david_nichols

	* finished documentation for the Dir class

2011-12-29 10:22  david_nichols

	* doc updates

2011-12-29 09:39  david_nichols

	* updated Dir docs (not finished yet) and updated exceptions

2011-12-28 08:46  david_nichols

	* checked in missing file

2011-12-27 21:34  david_nichols

	* ported the Dir class to qpp (partially - docs not there yet)

2011-12-26 21:21  david_nichols

	* minor doc updates

2011-12-26 21:16  david_nichols

	* fixed a bug in qpp generating c++ code for acquiring "or nothing"
	  parameters

2011-12-26 20:29  david_nichols

	* doc updates; ported the SQLStatement class to qpp

2011-12-26 15:50  david_nichols

	* moved more constant definitions to qpp

2011-12-26 12:03  david_nichols

	* doc and http initialization updates

2011-12-26 11:01  david_nichols

	* fixed Datasource bindings, initial DatasourcePool bindings with
	  qpp (docs not yet ported entirely)

2011-12-26 08:48  david_nichols

	* finished porting the Datasource class to qpp (added missing docs)

2011-12-25 21:07  david_nichols

	* doc updates; initial port of the Datasource class to qpp (without
	  most of the docs)

2011-12-25 13:06  david_nichols

	* finished prting FtpClient docs to qoo

2011-12-25 08:46  david_nichols

	* partially ported FtpClient class to qpp

2011-12-24 22:05  david_nichols

	* minor doc update

2011-12-24 21:55  david_nichols

	* fixed sf bug 3430244

2011-12-24 21:48  david_nichols

	* doc updates; finished adding docs to the HTTPClient qpp class

2011-12-24 15:56  david_nichols

	* mostly ported the HTTPClient to qpp; Christmas Eve has blocked
	  the rest of my efforts for today

2011-12-23 17:40  david_nichols

	* fixed a typo in a link name

2011-12-23 17:39  david_nichols

	* ported the Counter, Sequence, AutoReadLock, and AutoWriteLock
	  classes to qpp

2011-12-23 16:29  david_nichols

	* ported RWLock to qpp

2011-12-23 15:50  david_nichols

	* ported the Gate and AutoGate classes to qpp

2011-12-23 15:09  david_nichols

	* ported AutoLock to qpp

2011-12-23 14:44  david_nichols

	* ported the Mutex class to qpp

2011-12-23 12:24  david_nichols

	* ported AbstractSmartLock class to qpp; fixed a bug in
	  AbstractSmartLock::lockTID()

2011-12-23 11:40  david_nichols

	* doc updates

2011-12-22 17:43  david_nichols

	* more doc updates

2011-12-22 16:27  david_nichols

	* doc updates

2011-12-22 07:24  david_nichols

	* doc formatting and readability updates

2011-12-22 07:08  david_nichols

	* doc updates

2011-12-21 17:16  david_nichols

	* doc updates

2011-12-21 08:29  david_nichols

	* fixed a major crashing error in
	  QoreStringNode::createAndConvertEncoding() -
	  this function is used by the xml module when parsing XML-RPC sent
	  in a
	  non-UTF-8 character encoding

2011-12-21 08:28  david_nichols

	* doc updates

2011-12-20 19:35  david_nichols

	* doc updates

2011-12-19 16:09  david_nichols

	* removed generated file

2011-12-19 16:07  david_nichols

	* major doxygen doc updates

2011-12-19 10:13  david_nichols

	* added references to stat constants

2011-12-19 10:02  david_nichols

	* added more constants to qpp; removed duplicates from QC_file.h

2011-12-19 07:38  david_nichols

	* implemented qpp support for adding constants to the Qore
	  namespace

2011-12-18 10:26  david_nichols

	* added missing doxygen doc

2011-12-18 10:17  david_nichols

	* fixed typo

2011-12-17 20:05  david_nichols

	* implemented table generation in doxygen output

2011-12-17 16:01  david_nichols

	* doxygen fixes

2011-12-17 15:38  david_nichols

	* added missing script for post-processing doxygen files

2011-12-17 15:35  david_nichols

	* qpp fixes, doxygen fixes/improvements/progress for lang docs

2011-12-17 06:00  david_nichols

	* minor doc fixes

2011-12-16 22:24  david_nichols

	* initial change to allow building qore docs from doxygen and
	  qpp-generated sources

2011-12-16 21:21  david_nichols

	* readded RUNTIM_NOOP File method variants for
	  backwards-compatibility

2011-12-16 21:19  david_nichols

	* qpp and File fixes

2011-12-16 19:13  david_nichols

	* qpp updates

2011-12-16 10:32  david_nichols

	* more qpp and File fixes

2011-12-16 10:18  david_nichols

	* fixed File class - integrated with qpp build

2011-12-15 17:02  david_nichols

	* fixed File::getchar() to always retrieve 1 character (even for
	  multi-byte character encodings), ported the File class to qpp
	  (untested)

2011-12-12 19:39  david_nichols

	* finished migrating the Socket class to qpp

2011-12-12 16:56  david_nichols

	* qpp updates

2011-12-11 21:28  david_nichols

	* more socket methods ported to qpp

2011-12-11 14:25  david_nichols

	* more socket methods ported to qpp

2011-12-11 08:35  david_nichols

	* porting more socket methods to qpp

2011-12-10 08:59  david_nichols

	* build fixes for platforms without getop_long (for example Solaris
	  8)

2011-12-10 08:25  david_nichols

	* build fix for solaris 10

2011-12-10 08:11  david_nichols

	* remove outdated flag for sun studip compilers

2011-12-09 21:18  david_nichols

	* starting to integrate qpp into the qore build - ported Queue
	  class bindings to qpp

2011-12-05 19:06  david_nichols

	* fixed lvalue checking at parse time with new operators

2011-12-05 10:51  david_nichols

	* added NT_CLOSURE type code

2011-12-04 15:23  david_nichols

	* updated test to new qore syntax (partially)

2011-12-04 15:22  david_nichols

	* fixed a bug where the pre-decrement operator would actually
	  increment the lvalue

2011-12-03 19:57  david_nichols

	* working qore pre-processor (at least with the Queue class) -
	  support for
	  overloading not yet implemented

2011-12-02 12:48  david_nichols

	* pre-processor updates

2011-11-30 20:17  david_nichols

	* committed initial qore pre-processor for easier, safer, & more
	  concise qore
	  language c++ bindings

2011-11-30 20:17  david_nichols

	* fixed a typo in a comment

2011-11-24 12:27  david_nichols

	* corrected docs for chdir

2011-11-24 12:10  david_nichols

	* added test for string boolean evaluation with fp #s between -1.0
	  and 1.0 exclusive

2011-11-24 12:08  david_nichols

	* fixed string evaluation in a boolean context to return True with
	  floating-point numbers between -1.0 and 1.0 exclusive

2011-11-23 08:04  david_nichols

	* output YAML x"null" for NOTHING with %y

2011-11-22 12:04  david_nichols

	* fixed issues setting the containing program context when
	  operating on
	  references to local variables

2011-11-21 10:03  david_nichols

	* accept \r as whitespace to allow better parsing of sources with
	  Windows EOL markers

2011-11-18 19:58  david_nichols

	* parse-time type detection fixes and some cosmetic formatting
	  changes

2011-11-18 09:00  david_nichols

	* fixed parse-time type detection for the keys, + and * operators

2011-11-16 14:17  david_nichols

	* fixed HTTPClient::post() with info

2011-11-15 09:39  david_nichols

	* added missing QoreTypeSafeReferenceHelper functions

2011-11-14 23:21  david_nichols

	* minor fixes

2011-11-14 23:02  david_nichols

	* fixed a typo in the /= operator

2011-11-14 22:27  david_nichols

	* added missing cast

2011-11-14 22:23  david_nichols

	* unconditionally evaluate the hash when iterating as otherwise it
	  could change
	  during iteration which could cause a crash

2011-11-14 22:16  david_nichols

	* minor fixes

2011-11-14 22:02  david_nichols

	* filled in some more holes in the new optimized lvalue solution

2011-11-14 18:14  david_nichols

	* internal fixes for new internal optimizations

2011-11-14 12:28  david_nichols

	* massive overhaul of qore's operators, local variable handling,
	  and lvalue handling with major performance benefits for integer
	  operations

2011-11-11 17:11  david_nichols

	* test update

2011-11-11 13:54  david_nichols

	* fixed another parse-time variant matching bug where the
	  variant-matching
	  algorithm was too aggressive and excluded possible matches at
	  parse time which
	  could result in a parse-time definitive match even though a
	  better match is
	  available at runtime

2011-11-10 18:37  david_nichols

	* fixed parse error messaging resolving unknown constants

2011-11-10 18:29  david_nichols

	* to differentiate exception from another similar exception

2011-11-10 10:05  david_nichols

	* set program context when calling functions externally

2011-11-08 16:21  david_nichols

	* fixed static memory leak when signal handlers are left registered
	  when the qore library terminates

2011-11-08 14:40  david_nichols

	* make sure "all" is a pseudo base class for all pseudo classes,
	  fixed a typo in an exception string

2011-11-08 13:17  david_nichols

	* fixed static memory leaks and 1 dynamic memory leak in strmul

2011-11-02 15:18  david_nichols

	* fixed a crashing bug in handling recursive constant references;
	  fixed a bug in HashIterator::deleteKey() when the node's value is
	  NULL

2011-11-02 10:07  david_nichols

	* fixed time zone/DST calculations for time zone regions with DST
	  with dates before the epoch but after the last DST transition
	  before the epoch

2011-10-27 12:50  david_nichols

	* fixed the HAVE_STATVFS option and constant finally

2011-10-27 12:48  david_nichols

	* removed bogus reference-counting "optimization"

2011-10-27 12:11  david_nichols

	* fixed parse-time resolution of constant expressions with the !=
	  operator

2011-10-27 06:21  david_nichols

	* fixed the new == operator optimization (again)- do not apply the
	  optimization if types are not known for either operand at parse
	  time, also do not apply if either side could possibly return a
	  string

2011-10-26 21:04  david_nichols

	* do not apply type optimization for == or != operators if either
	  side could be a string at parse time (the highest priority type
	  for these operators)

2011-10-26 19:46  david_nichols

	* implemented optimzed != operator

2011-10-26 19:09  david_nichols

	* fixed a bug in the new == operator implementation

2011-10-26 19:00  david_nichols

	* added missing file

2011-10-26 19:00  david_nichols

	* implemented more int64, int, float, and bool pure execution
	  pathways to
	  improve performance and memory usage; implemented method variant
	  support for
	  variants that return these types natively, implemented type
	  optimizations for
	  the == operator and ported it to the new operator framework

2011-10-26 10:52  david_nichols

	* added new pseudo classes, algorithm and data structure
	  improvements based on
	  performance analyses; new performance analysis structure in
	  ptest.q

2011-10-26 08:30  david_nichols

	* minor fix in test

2011-10-25 19:04  david_nichols

	* added new tests

2011-10-25 18:02  david_nichols

	* removed a warning in non-debugging mode

2011-10-25 17:40  david_nichols

	* added scratch test script

2011-10-25 17:39  david_nichols

	* added NT_* constants for use with <any>.typeCode(), implemented
	  an experimental reference-counting optimization, fixed the
	  foreach "keys" specialization with an empty statement

2011-10-25 16:12  david_nichols

	* added initial pseudo-methods for list & string types, added parse
	  & run-time optimizations for pseudo-methods, fixed foreach
	  specialization with keys <object>, added tests for hash
	  pseudo-methods, added new C++ reverse iterators for QoreHashNode,
	  added <obj>.firstKey() and <obj>.lastKey() pseudo-methods (and
	  internal API support for them), renamed pseudo classes to
	  <typename> (ex: pseudo string class name = <string>), updated
	  library version to reflect new public APIs added
	  (ReverseHashIterator and ReverseConstHashIterator)

2011-10-24 19:00  david_nichols

	* improved pseudo-method support for objects

2011-10-24 16:26  david_nichols

	* initial support for pseudo-methods

2011-10-24 09:04  david_nichols

	* fixed type propogation during parse time for variable references;
	  added a warning when dereferencing a hash with a non-string and
	  non-list argument

2011-10-24 07:45  david_nichols

	* fixed library version info

2011-10-24 07:42  david_nichols

	* implemented a specialization for the foreach statement when
	  iterating hash keys (ie forach ... in (keys <hash>))
	  updated release notes to reflect 0.8.4 in progress

2011-10-20 09:47  david_nichols

	* updated version number to 0.8.4, added docs for is_writable()
	  (correctly-spelled variant of is_writeable())

2011-10-19 11:31  subik

	* php with comments generator fix

2011-10-17 14:39  david_nichols

	* added misc files for windows release

2011-10-17 14:06  david_nichols

	* fixes for windows build with debugging disabled

2011-10-16 14:01  david_nichols

	* doc updates

2011-10-16 13:04  david_nichols

	* fixed the HAVE_STATVFS option & option constant

2011-10-15 10:57  david_nichols

	* do not need to link the qore binary with pthread libs because the
	  qore lib is already linked with them

2011-10-12 17:50  david_nichols

	* fixed a crashing bug where a hash passed to the context statement
	  will cause a crash if one of the keys after the first is not
	  assigned to a list

2011-10-10 07:47  david_nichols

	* fixed rpm buildong in redhat/fedora/mandriva

2011-10-07 15:43  subik

	* fix for pkg-config

2011-10-05 14:34  subik

	* initial support for pkg-config

2011-09-29 11:44  david_nichols

	* make sure pthread libs are included in the library link flags

2011-09-27 21:28  david_nichols

	* fixed solaris builds

2011-09-26 10:25  david_nichols

	* create & delete thread stack lock explicitly on windows to avoid
	  a problem with static destruction in the mingw pthreads lib

2011-09-22 11:27  david_nichols

	* fixed parseDatasource() on Windows

2011-09-19 13:54  david_nichols

	* fixed a subtle bug in parse-time variant matching

2011-09-16 05:50  david_nichols

	* use AC_SEARCH_LIBS instead of AC_CHECK_LIB, include libraries
	  found in QORE_LIB_LDFLAGS

2011-09-13 14:28  david_nichols

	* doc updates

2011-09-13 06:33  david_nichols

	* minor fomatting changes

2011-09-12 15:59  david_nichols

	* add -mt to compile and link lines on solaris

2011-09-12 10:09  david_nichols

	* added code to execute type filters if necessary on default
	  argument values; before this it was possible to assign a value to
	  a variable that did not fit the declared type if the default
	  argument was accepted by the type, but the type would normally
	  transform the value into another value; the transformation is now
	  run, fixing the bug

2011-09-08 19:18  david_nichols

	* make sure to switch to the user program when executing user
	  methods that may have been created in a parent program

2011-09-08 15:32  david_nichols

	* fixed a bug initializing an exception location when the file name
	  is 0

2011-09-05 14:38  subik

	* fix for standard build

2011-09-05 14:30  david_nichols

	* fixed a bug initializing exceptions with a NULL file name; fixed
	  runtime
	  variant matching to stop looking for a match if a match is found
	  in a class
	  (do not search parent classes) - the best match in the current
	  class is taken
	  if any is available

2011-09-05 07:30  david_nichols

	* fixed memory error in last patch re exception cleanup
	  (QoreException must keep
	  a copy of the file name)

2011-09-05 05:09  david_nichols

	* cosmetic changes

2011-09-04 13:38  david_nichols

	* updated docs and release notes with new Program methods

2011-09-04 13:36  david_nichols

	* added Program::define(), Program::getDefine(),
	  Program::isDefined(), and Program::undefine() methods

2011-09-04 12:37  david_nichols

	* cleaned up internal exception code; prearing to add runtime
	  methods for setting defines in the Qore-language Program class

2011-09-02 12:16  david_nichols

	* added softlist and *softlist types, added docs for softdate,
	  *softdate, softlist, and *softlist types, updated release notes
	  re softlist

2011-08-30 17:58  david_nichols

	* fixed a race condition accessing program thread data

2011-08-23 16:06  david_nichols

	* update for mingw

2011-08-23 14:51  david_nichols

	* register File::getTerminalAttributes() and
	  File::setTerminalAttributes() on Windows so that the HAVE_TERMIOS
	  constant can be used properly at runtime if needed (these methods
	  will throw exceptions at runtime on Windows)

2011-08-23 08:24  david_nichols

	* updated release docs preparing for release

2011-08-22 13:31  david_nichols

	* added QDOM_FILESYSTEM to all static File class methods, added
	  QDOM_TERMINAL_IO to TermIOS::getWindowSize(), added runtime
	  checks for method calls to system File class constants while
	  "no-terminal-io" is in force; doc additions and corrections

2011-08-21 19:37  david_nichols

	* added docs about parse defines and conditional parsing

2011-08-21 15:14  david_nichols

	* remove useless and meaningless HAVE_PWD option and constant added
	  in a recent patch, updated docs with windows info

2011-08-21 10:06  david_nichols

	* added a Windows README and updated missing function
	  implementation exceptions for the File class

2011-08-21 08:40  david_nichols

	* fixed daylight saving time transition logic on windows

2011-08-21 07:41  david_nichols

	* working windows daylight savings time offset (from dst rules in
	  the registry, dynamic dst registry rule parsing not yet
	  implemented)

2011-08-20 17:15  david_nichols

	* initial changes to use the windows registry for time zone
	  information on windows

2011-08-20 14:56  david_nichols

	* removed "returns" from documented prototypes

2011-08-19 08:35  david_nichols

	* implemented %else for conditional parsing

2011-08-18 09:17  david_nichols

	* set a define if qore-library debugging is enabled

2011-08-18 09:09  david_nichols

	* added option constants as program defines (unless the option's
	  value is False); fixed nested defines when the outer define is
	  skipped

2011-08-18 08:16  david_nichols

	* implemented %ifndef

2011-08-18 08:14  david_nichols

	* fixed the case when a nested %ifdef block is missing the %endif

2011-08-18 07:55  david_nichols

	* fixed bugs generating parse exceptions from command-line define
	  processing; fixed a bug parsing a define on the command-line when
	  assigned to a value

2011-08-17 15:58  david_nichols

	* initial support for parse-time options (defines) and conditional
	  parsing

2011-08-17 10:04  david_nichols

	* fixed typo in qore_nanosleep()

2011-08-17 10:03  david_nichols

	* improve usleep() argument handling

2011-08-17 09:48  david_nichols

	* do not block/manage SIGALRM on any platform that supports signals
	  due to it being needed for sleep() and usleep() implementations

2011-08-17 09:20  david_nichols

	* use nanosleep() (when available - everything but native windows)
	  or usleep() (native windows) for sleep() and usleep() as those
	  may be implemented with SIGALRM on some platforms

2011-08-17 09:13  david_nichols

	* use nanosleep where available for usleep (except on windows)

2011-08-17 09:08  david_nichols

	* require nanosleep for all builds - use instead of usleep

2011-08-17 08:58  david_nichols

	* use nanosleep() instead of usleep() on solaris in all cases

2011-08-16 14:55  david_nichols

	* fix bug in configure on redhat 5

2011-08-16 14:44  david_nichols

	* fixed Bug 379 - SIGALRM cannot be blocked on solaris 8 or 9 or
	  *sleep() will not work reliably

2011-08-16 08:09  david_nichols

	* fixed typo in code for windows

2011-08-15 16:45  david_nichols

	* added constants and qore options for features not available on
	  windows + docs

2011-08-09 07:52  david_nichols

	* minor windows fixes

2011-07-31 15:51  david_nichols

	* windows path handling fixes

2011-07-28 16:41  david_nichols

	* fix for non mingw32 builds

2011-07-28 08:58  david_nichols

	* hack libtool to allow linking static libraries with the qore dll
	  on mingw32 - remove even worse hack to include system libraries
	  in LDFLAGS and to include -Wl,<path to static lib> in LDFLAGS

2011-07-27 14:44  david_nichols

	* added defines for platform-specific path separator; use in
	  ModuleManager and
	  QoreLib functions

2011-07-27 13:47  david_nichols

	* socket code ported to winsock2

2011-07-27 09:50  subik

	* fix for non-singlecompilationunit

2011-07-27 09:29  david_nichols

	* set LIB_PREFIX automatically when cross-compiling with mingw32

2011-07-26 20:06  david_nichols

	* implemented glob() for windows by using glob patterns translated
	  to regex expressions

2011-07-26 17:19  david_nichols

	* fixed typo in error msg when windows libraries are not found

2011-07-26 17:02  david_nichols

	* qore compiling under mingw as DLL

2011-07-26 15:46  david_nichols

	* unix compile fixes

2011-07-26 15:41  david_nichols

	* removed debugging text

2011-07-26 15:08  david_nichols

	* mingw32 build and compile fixes; changes to allow a qore dll to
	  be built
	  (still not working :( )

2011-07-26 11:48  david_nichols

	* compile in non-functional TermIOS Qore class on platforms that do
	  not support
	  it so that programs can possibly still parse and execute; the
	  option constant
	  can be used to print out a user-friendly message

2011-07-25 14:43  david_nichols

	* more mingw fixes

2011-07-25 13:47  david_nichols

	* compiling (but not linking) on mingw32

2011-07-22 11:27  david_nichols

	* fixed typo

2011-07-22 11:22  david_nichols

	* more mingw32 patches

2011-07-22 11:10  david_nichols

	* more mingw32 patches, still not working

2011-07-21 20:20  david_nichols

	* added extern

2011-07-21 20:16  david_nichols

	* added inet_ntop() and inet_pton() implementations for platforms
	  that don't have them (ie mingw)

2011-07-21 19:58  david_nichols

	* compile for windows xp or greater with mingw

2011-07-21 19:56  david_nichols

	* many mingw compatibility updates (still not working)

2011-07-21 17:21  david_nichols

	* added a flag for conditional builtin glob() api compilation

2011-07-20 17:59  david_nichols

	* implemented variable finalization - to ensure that variables are
	  not assigned
	  after they are destroyed during program and thread termination
	  and destruction

2011-07-20 16:39  david_nichols

	* fixed 2 extremely tricky bugs where deleting a
	  global-thread-local and
	  closure-bound variable that causes an object to go out of scope
	  that in turn
	  references the variable int its destructor caused a crash due to
	  improper thread-local variable stack deletion and additionally
	  (once that was
	  fixed) a deadlock due to deleting the old value of the
	  closure-bound
	  global-thread-local variable while holding the variable's lock

2011-07-20 11:18  david_nichols

	* compile fixes for unix

2011-07-20 10:44  david_nichols

	* starting mingw support (not yet functional)

2011-07-19 13:32  david_nichols

	* fixed typo

2011-07-18 15:28  david_nichols

	* implemented and documented the has_key() function; to check if a
	  hash or object key exists (irrespective of it's value, which may
	  be NOTHING)

2011-07-18 13:33  david_nichols

	* migrated "exp . string(...)" expressions to new operator
	  infrastructure for preparation for virtual method implementation

2011-07-18 11:04  david_nichols

	* cosmetic changes and added new QoreHashNode api function

2011-07-18 10:34  david_nichols

	* corrected remove and delete operator docs

2011-07-18 10:20  david_nichols

	* added documentation on removing and deleting slices from a hash

2011-07-18 08:56  subik

	* strmul() tests in main test script

2011-07-14 14:31  david_nichols

	* allow parameters to be declared with type "nothing"

2011-07-14 13:29  david_nichols

	* added remove <hash>.(list) and delete <hash>.(list) support

2011-07-12 19:52  david_nichols

	* fixed variant matching to ensure that variants are matched at run
	  time if there is a variant with fewer parameters than arguments
	  in the call, but the arguments could be NOTHING (count these as
	  ambiguous matches)

2011-07-12 18:39  david_nichols

	* fixed a crash when referencing closure-bound local variables in
	  expressions executed by the background operator

2011-06-28 14:05  subik

	* docs for strmul()

2011-06-28 10:46  david_nichols

	* removed unneeded code

2011-06-28 10:46  david_nichols

	* implemented parser error recovery for syntax errros in argument
	  list declarations

2011-06-27 07:44  david_nichols

	* minor cosmetic changes

2011-06-26 11:17  david_nichols

	* make sure and set program context in the signal thread before
	  executing the handler

2011-06-24 13:48  subik

	* strmul(string, int, *int) implemented

2011-06-24 10:14  subik

	* compile fix

2011-06-13 19:06  david_nichols

	* checked in header changes corresponding to lib changes a couple
	  of commits ago

2011-06-13 19:05  david_nichols

	* allow SQLStatments to go from state 'defined' (retrieving select
	  after exec)
	  to 'executed' automatically without forcing the user to call
	  SQLStatement::close()

2011-06-13 15:25  david_nichols

	* first attempt at standardizing program location; eliminated some
	  internal QoreProgram APIs from the public interface

2011-06-10 06:55  david_nichols

	* trying to remove support for perls "q" operator or whatever that
	  is :)

2011-06-08 15:44  david_nichols

	* fixed a crash due to a memory error in managing reference cycles
	  with closures assigned to constant containers

2011-06-08 13:47  david_nichols

	* make only 1 allocation per program per thread instead of 3

2011-06-08 13:11  david_nichols

	* updated ThreadLocalProgramData map implementation

2011-06-08 08:26  david_nichols

	* cleanups from last patch

2011-06-08 08:21  david_nichols

	* * fixed a race condition in the new n:m thread:program stack
	  management
	  * added some missing doxygen documentation

2011-06-07 13:49  david_nichols

	* added stack check in QoreClass::execConstructor() call to catch
	  the case when a class instantiation is recursively defined

2011-06-07 11:40  david_nichols

	* moved some cleanup code to a more optimal position when
	  destroying/dereferencing QoreProgram objects

2011-06-07 09:56  david_nichols

	* fixed a bug where type errors in function calls were not found at
	  parse time,
	  but rather only at bug time - now these errors are found at parse
	  time

2011-06-07 07:25  david_nichols

	* fixed issues with passing a reference through different program
	  stacks

2011-06-06 14:03  david_nichols

	* fixed memory errors with new thread-local variable stack
	  handling; fixed a
	  memory leak in the Socket class static initialization

2011-06-06 09:52  david_nichols

	* initial thread-local variable stack changes to make top-level
	  thread-local
	  variables persistent in a Program object; now each QoreProgram
	  object contains
	  a map of thread data structures to local variable stacks

2011-06-03 11:34  david_nichols

	* fixed a crash when parsing a class with an unknown base class

2011-06-02 12:19  david_nichols

	* fixed a bug in the c++ function QoreString::replaceAll(); fixed a
	  bug in the
	  Qore function system() where quotes and backslashes were not
	  being properly quoted

2011-06-01 08:26  david_nichols

	* removed unnecessary code

2011-05-31 13:30  david_nichols

	* fixed a crash adding an undefined base class as an ancestor of a
	  derived class

2011-05-31 12:46  david_nichols

	* updated docs and copyright notices to reflect 2011

2011-05-31 10:16  david_nichols

	* fixed File::write() return type documentation
	  added %set-time-zone parse directive and documentation
	  added --time-zone,-z command-line options
	  fixed date string output to not duplicate UTC offset information
	  in case a time has no region name associated

2011-05-30 16:41  david_nichols

	* corrected patch for last fix for the return value ignored warning

2011-05-30 16:32  david_nichols

	* do not issue a "return value ignored" if the function/method
	  could throw an
	  exception - the usage without using the return value could be to
	  test if an
	  exception is raised (ie an exception would be considered a side
	  effect)

2011-05-30 16:19  david_nichols

	* eliminate a warning with the oracle sun studio compilers

2011-05-11 13:38  david_nichols

	* fixed a memory erro looking up scoped constant values at parse
	  time

2011-04-28 15:37  david_nichols

	* SQLStatement::commit() and SQLStatement::rollback() no longer
	  throw an exception when called without an active statement;
	  instead, the statement is closed and the operation is executed on
	  the underlying database connection object (Datasource or
	  DatasourcePool object)

2011-04-28 10:53  david_nichols

	* minor exception and warning output fixes for warnings/errors
	  generated in init code (or stack traces that refer to
	  initialization where the start_line = 0)

2011-04-19 14:02  david_nichols

	* finally implemented recognizing c-style block comments for qore
	  in emacs' qore-mode

2011-04-14 12:00  david_nichols

	* fixed detected duplicate variables in the same block when
	  %assume-local is set; added WARN_DEFAULT constant, added
	  documentation for missing warnings

2011-04-12 18:05  david_nichols

	* whitespace only edit

2011-04-12 12:10  david_nichols

	* turn off debugging statement by default

2011-04-12 12:07  david_nichols

	* do not issue "duplicate-local-vars" warning when the other var is
	  a top-level (thread-) local var; include "deprecated" in the
	  default warning mask

2011-04-10 07:58  david_nichols

	* some emacs qore-mode fixes

2011-04-09 08:58  david_nichols

	* fixed a typo in the docs

2011-04-08 18:41  david_nichols

	* added a new argument to the split(string, string) variant; now
	  it's
	  split(string, string, bool = False) - if the 3rd arg is True then
	  the
	  separator pattern string will be included in each element of the
	  output list

2011-04-06 10:12  david_nichols

	* fixed typeinfo handling with imported variables in many places -
	  particulary subprograms with imported variables could fail to
	  parse if %require-types is set in the subprogram (now fixed)

2011-04-06 10:03  david_nichols

	* fixed Var::hasTypeInfo() for imported variables

2011-04-06 09:18  david_nichols

	* fixed assert in Condition for use with recursive mutexes

2011-04-05 20:33  david_nichols

	* fixed an error in system() recognizing "$=" as shell
	  meta-characters; fixed another bug in system() where system()
	  caused a deadlock in both child and parent processes if launching
	  the child process launch fails

2011-04-05 20:32  david_nichols

	* fixed 2 memory errors handling parse exceptions with regular
	  expressions

2011-04-04 14:36  david_nichols

	* removed the unused c++ "RMutex" class, added a new constructor to
	  QoreThreadLock to give optional mutex attributes, make
	  QoreProgram parse lock recursive so that functions that grab the
	  parse lock can be executed when initializing constants while
	  parsing...

2011-04-01 13:35  david_nichols

	* fixed minor typos

2011-03-31 14:13  david_nichols

	* fixed a bug in handling parse errors in switch statements that
	  causes a never-ending loop

2011-03-29 17:16  david_nichols

	* fixed typo in code flag

2011-03-29 14:48  david_nichols

	* removed an invalid abort() statement

2011-03-25 16:19  david_nichols

	* fixed a crash in debugging mode when a datasourcepool transaction
	  is left open/uncommitted and the object is deleted

2011-03-24 07:08  david_nichols

	* fixed split with quote flag

2011-03-21 21:37  david_nichols

	* slightly more efficient get_number() routine supporting
	  qsprintf()

2011-03-21 17:24  david_nichols

	* fixed some crashing memory bugs in socket handling (particularly
	  related to the internal getPort() call) and in the FTP client
	  (related to new functionality)

2011-03-21 16:45  david_nichols

	* added qore-language glue for new C++ FtpClient methods

2011-03-21 16:36  david_nichols

	* fixed a file descriptor leak in the FtpClient class related to
	  exception handling; implemented FtpClient::mkdir(),
	  FtpClient::rmdir(), and FtpClient::putData(), and implemented
	  implicit connection handling for the FtpClient class; updated
	  documentation

2011-03-16 14:54  david_nichols

	* implemented Program::replaceParseOptions(), also expanded the
	  parse option checking logic to allow parse options to be set even
	  when options are locked, if the options make the Program's option
	  environment more restrictive

2011-03-16 11:51  david_nichols

	* fixed a bug in is_readable() - was already returning True for all
	  arguments

2011-03-11 16:49  david_nichols

	* mostly non-functional changes to debugging mode while debugging
	  stability issues with pthread primitives after fork() on darwin

2011-03-09 18:09  david_nichols

	* improved error messages with execvp() failures

2011-03-09 15:06  david_nichols

	* fixed a bug in parse_url() (parseURL()) parsing urls with IPv6
	  addresses
	  without ":" - this will only work if a port number is included;
	  otherwise raw
	  IPv6 addresses must be enclosed in square brackets ([])

2011-03-06 20:53  david_nichols

	* updated release to 0.8.3 after 0.8.2 release

2011-03-06 20:04  david_nichols

	* doc update

2011-03-06 12:19  david_nichols

	* corrected typo

2011-03-06 08:28  david_nichols

	* updated docs and release notes

2011-03-04 13:47  david_nichols

	* removed unnecessary arguments from 2 network functions; fixed a
	  bug setting the port number after calling bind(0)

2011-03-04 10:23  david_nichols

	* fixed a bug setting parse options on new Program objects when the
	  parent has
	  PO_NO_CHILD_PO_RESTRICTIONS set; updated Program::constructor()
	  docs

2011-03-01 11:36  subik

	* fixes for non-single-compilation-unit

2011-03-01 09:50  david_nichols

	* unlock thread lock before deregistering signall thread

2011-03-01 09:36  david_nichols

	* removed inadvertent include

2011-03-01 08:56  david_nichols

	* set dereference flag in eval with deref flag, otherwise a memory
	  leak can result

2011-02-28 13:34  david_nichols

	* removed DLLLOCAL from static function declaration

2011-02-26 08:39  david_nichols

	* fixed typo, only define qore_machine_backtrace() if debugging
	  enabled

2011-02-26 07:55  david_nichols

	* minor doc corrections; fixed split() function tag, added the
	  capability to print out a machine backtrace (currently without
	  name-demangling) if execinfo.h and backtrace() are available
	  (Linux + OSX at least) when debugging; added additional debugging
	  code to QoreCondition::wait() to try and debug strange situation
	  with Darwin pthread primitive in the child process after a fork()

2011-02-25 18:24  david_nichols

	* make QoreSignalManager a normal class to fix problems in static
	  initialization order; make sure and stop signal handling thread
	  before calling exit()

2011-02-24 15:22  david_nichols

	* fixed output of empty list and hash with %y to be [] and {},
	  respectively

2011-02-23 14:16  david_nichols

	* corrected assert in VarRefNode::makeGlobal()

2011-02-23 14:11  david_nichols

	* fixed incorrect assert()s with %new-style when declaring variable
	  lists

2011-02-15 15:49  david_nichols

	* fixed typos in statvfs hash output

2011-02-14 12:21  david_nichols

	* fixed constant resolution from class constants that refer to
	  other class constants

2011-02-12 08:24  david_nichols

	* fixed setting backwards-compatible Socket members on accept

2011-02-11 14:08  david_nichols

	* try to bind to ipv6 addresses first

2011-02-11 14:05  david_nichols

	* fix to allow catch block paramters to work when 'allow-bare-refs'
	  and
	  'new-style' parse options are set

2011-02-10 16:54  david_nichols

	* Socket updates, fixes, and documentation, all new features and
	  changes now documented

2011-02-09 16:57  david_nichols

	* updated return type for getaddrinfo(), added docs

2011-02-09 15:41  david_nichols

	* added Socket::accept*() variants taking a timeout - it a timeout
	  occurs, then NOTHING is returned

2011-02-09 14:06  david_nichols

	* removed the Socket::connectINET2() and Socket::connectINET2SSL()
	  methods and made Socket::connectINET() and
	  Socket::connectINETSSL() methods take over the new signatures
	  because they are backwards-compatible anyway

2011-02-09 13:08  david_nichols

	* added Socket::getPeerInfo() and Socket::getSocketInfo() methods
	  to get verbose information about local and remote sockets

2011-02-09 11:21  david_nichols

	* when trying multiple addresses, only exit prematurely if there is
	  a timeout on one of the attempts

2011-02-09 10:38  david_nichols

	* check if AI_NUMERICSERV is defined before adding constant

2011-02-09 10:14  david_nichols

	* moved common code to QoreAddrInfo class, added "address_desc" key
	  to getaddrinfo hash output

2011-02-09 10:02  david_nichols

	* added new members to the socket class filled on Socket::accept*()
	  - source_desc and source_host_desc

2011-02-08 21:04  david_nichols

	* fixed ipv6 address lookup after Socket::accept()

2011-02-08 20:01  david_nichols

	* added commented-out debugging line

2011-02-08 19:56  david_nichols

	* fixed memory error due to copy-and-paste mistake

2011-02-08 18:03  david_nichols

	* ipv6 support fixes and enhancements

2011-02-08 14:36  david_nichols

	* remove redundant functions and use the new implementations

2011-02-08 14:21  david_nichols

	* ipv6 and Socket::connect() fixes: Socket::connect() will now try
	  to connect to all addresses in the address resolution list and
	  ignore "connection refused" errors unless there are only
	  "connection refused" errors with all resolved addresses. Also
	  addresses for Socket::bind() and Socket::connect() that are
	  enclosed in square brackets (ie "[localhost]:9001" will be
	  treated as ipv6 addresses

2011-02-07 21:24  david_nichols

	* fixed parseURL() to recognize an ipv6 address in square brackets
	  (ie
	  "https://user:1:pass@[2001:db8:85a3:8d3:1319:8a2e:370:7348]:123/path")

2011-02-07 21:04  david_nichols

	* added source_port, source_family, and source_familystr to socket
	  source keys when accepting a connection

2011-02-07 20:20  david_nichols

	* fixed Socket::accept() with ipv6 sockets

2011-02-07 19:50  david_nichols

	* ipv6 socket fixes; added Socket::bindINET(), Socket::bindAll(),
	  and Socket::bindUNIX() methods

2011-02-03 07:43  david_nichols

	* further socket code modularization for better ipv6 support,
	  logical fix in
	  socket-test.q script related to type error

2011-02-02 17:37  david_nichols

	* more ipv6 updates, new socket methods:
	  * nothing Socket::connectINET2(string $host, softstring $service,
	  timeout $timeout_ms = -1, softint $family = AF_UNSPEC, softint
	  $socktype = SOCK_STREAM)
	  * nothing Socket::connectINET2SSL(string $host, softstring
	  $service, timeout $timeout_ms = -1, softint $family = AF_UNSPEC,
	  softint $socktype = SOCK_STREAM)

2011-02-02 17:08  david_nichols

	* initial ipv6 support for internal QoreSocket class; added
	  getaddrinfo() function

2011-02-02 14:07  david_nichols

	* removed nonsensical assert; fixed return type for Dir::openFile()

2011-02-02 12:48  david_nichols

	* fixed typo in last commit

2011-02-01 12:50  david_nichols

	* added statvfs() and normal methods:
	  Dir::hstat()
	  Dir::stat()
	  Dir::statvfs()
	  and docs for all new functions

2011-02-01 09:38  david_nichols

	* added normal methods: File::stat(), File::hstat(),
	  File::statvfs(); added static methods: File::stat(),
	  File::lstat(), File::hstat(), File::hlstat(), File::statvfs()

2011-01-31 11:02  david_nichols

	* fixed memory errors merging in exception thrown when executing
	  code at parse time to the run-time exception sink
	  fixed initializing case expressions requiring parse-time
	  evaluation

2011-01-31 10:15  david_nichols

	* fixed the SQLStatement class to perform an auto-commit if
	  necessary when the statement is closed when used with a
	  Datasource with auto-commit enabled

2011-01-29 08:50  david_nichols

	* overrode RWLock::lockOwner() to return True if the read lock is
	  held; added
	  RWLock::writeLockOwner() and RWLock::readLockOwner() methods

2011-01-29 08:15  david_nichols

	* added "dow" (day of week number) and "doy" (day of year number)
	  to date_info()
	  return hash for absolute date/time values, added timestamp to
	  default
	  exception handler output

2011-01-28 13:21  david_nichols

	* added date_info() function witn 2 variants to get broken-down
	  date/time information

2011-01-25 12:23  david_nichols

	* added missing file

2011-01-25 07:05  david_nichols

	* fixed 2 bugs:
	  1) the SQLStatement class did not set the "in transaction" flag
	  when executing SQL; this could cause the transaction state to be
	  silently lost when a driver does a reconnect with a lost
	  connection
	  2) the internal c++ Datasource class did not set the "active
	  transaction" flag properly with the first exec
	  
	  added the "%y" flag to give YAML-like output for containers
	  (list, hash, object) in printf statements

2011-01-24 09:39  david_nichols

	* added missing param docs

2011-01-21 15:19  david_nichols

	* DBI select row fixes - fixed a bug automatically setting DBI
	  capabilities in
	  the qore library, implemented selectRow support in the Oracle
	  driver, updated
	  oracle driver version to 2.1

2011-01-21 13:56  david_nichols

	* added support for the selectRow DBI method; add
	  backwards-compatible support
	  in DBI for drivers without the method

2011-01-20 12:29  david_nichols

	* added trunc_str() function for more efficient trimming a
	  multi-byte string to
	  a certain maximum byte length

2011-01-18 17:19  david_nichols

	* added FtpClient::rename() function + docs, updated qore library
	  version

2010-12-28 17:48  david_nichols

	* added -lthread to sparc8 builds

2010-12-28 14:26  david_nichols

	* added implicit index ref ($#) docs, removed restriction assigning
	  function references to constants

2010-12-27 18:20  david_nichols

	* updates to ensure that parse expressions are only initialized
	  once

2010-12-26 10:20  david_nichols

	* updated release to 0.8.2, fixed an assert in debugging mode when
	  calling parseInit the second time on a local variable used in a
	  closure

2010-12-24 09:26  david_nichols

	* added file

2010-12-24 09:23  david_nichols

	* updated changelog

2010-12-24 08:46  david_nichols

	* more doc updates

2010-12-24 07:58  david_nichols

	* doc updates

2010-12-23 21:27  david_nichols

	* updated with new HttpServer class file name

2010-12-23 21:16  david_nichols

	* updated release notes and docs, implemented an optimization to
	  statement-level
	  parse option and warning mask caching

2010-12-23 20:36  david_nichols

	* updated http server, do not produce old gz dist file, move test
	  scripts into
	  examples directory

2010-12-23 20:20  david_nichols

	* spec file fixes

2010-12-23 20:16  david_nichols

	* fixed --new-style and --assume-local command-line options, spec
	  file fixes,
	  use bz2 format by default for distribution

2010-12-23 15:58  david_nichols

	* fixed single-compilation-unit problems

2010-12-23 15:50  david_nichols

	* added missing file

2010-12-23 14:54  david_nichols

	* doc upadtes, patches to allow the warning mask and parse option
	  state to be
	  stored for each statement, so that parse options and the warning
	  mask are
	  applied identically during both phases of parsing to all
	  statements

2010-12-23 07:33  david_nichols

	* updated release notes

2010-12-22 21:14  david_nichols

	* removed references to xml and json functionality from language
	  documentation, added references to the new xml and json modules

2010-12-22 20:12  david_nichols

	* minor updates

2010-12-22 18:17  david_nichols

	* xml module updates, separated json functionality out to json
	  module

2010-12-17 17:00  david_nichols

	* separated xml functionality from qore and moved into separate
	  module ("xml") -
	  docs not yet moved

2010-12-17 12:34  david_nichols

	* fixed errors in comments caused by bug in regex for last commit

2010-12-17 12:26  david_nichols

	* updated examples to use new return type declaration syntax, minor
	  release
	  notes updates

2010-12-17 12:09  david_nichols

	* added
	  * HTTPClient::setUserPassword()
	  * HTTPClient::clearUserPassword()
	  * HTTPClient::setProxyUserPassword()
	  * HTTPClient::clearProxyUserPassword()
	  and updated docs

2010-12-16 18:05  david_nichols

	* set parse location when resolving user function signatures in
	  case of exceptions

2010-12-15 19:59  david_nichols

	* doc updates for new return type syntax

2010-12-15 11:53  subik

	* compilation fix

2010-12-14 00:14  david_nichols

	* partially fixed slow parsing problem created with recent patches,
	  implemented syntax that allows return type to be declared before
	  function/method like c/c++/java/etc

2010-12-11 13:31  david_nichols

	* do not search classes for constants and static class vars when
	  not parsing in the class

2010-12-10 17:31  david_nichols

	* major fixes to "allow-bare-refs"; implemented "assume-local"
	  parse option to assume local scope for all variables if not
	  otherwise declared; implemented "new-style" parse option to give
	  both "allow-bare-refs" and "assume-local"; made references with
	  "$" and "$." illegal when "allow-bare-refs" set

2010-12-10 07:05  david_nichols

	* disabled debugging output line

2010-12-09 19:02  david_nichols

	* fixed a memory leak with circular references and closures
	  assigned to constants

2010-12-09 18:33  david_nichols

	* fix reference error with closures

2010-12-09 17:21  david_nichols

	* more bare ref support

2010-12-08 16:22  david_nichols

	* added bare-ref test/scratch script

2010-12-08 16:02  david_nichols

	* try to resolve method calls with namespace/class prefix using
	  barewords if in
	  class parse context and allow-bare-refs enabled

2010-12-08 15:25  david_nichols

	* initial implementation of "$"-less declaration and call support
	  with enabled
	  parse option "allow-bare-refs"

2010-12-08 10:15  david_nichols

	* started adding support for optionally allowing variables and
	  class members to be referenced without '$' and '$.'

2010-12-08 10:05  david_nichols

	* added to code to detect and fix memory leaks related to circular
	  references when objects are assigned to constants
	  (pgm->const->pgm ...)

2010-12-08 09:52  subik

	* fixed non-single-compilation build

2010-12-07 18:53  david_nichols

	* fixed namespace deletion to allow constants and class static vars
	  to be
	  cleared before namespace is deleted; clear thread data before
	  deleting modules
	  in case a module has thread data still assigned

2010-12-07 13:36  david_nichols

	* warning fixes for oracle sun studio compilers

2010-12-07 13:05  david_nichols

	* minor doc change

2010-12-07 13:01  david_nichols

	* updated docs; updated release notes for upcoming 0.8.1 release

2010-12-06 14:16  david_nichols

	* fixed constant and static var looks with namespace/class path to
	  look in class
	  hierarchy when searching classes as the last component of the
	  path

2010-12-06 13:28  david_nichols

	* made interface public to delete all class static variables in a
	  namespace tree
	  before deleting namespaces - required by modules that add static
	  class vars to
	  the class

2010-12-06 12:32  david_nichols

	* fixed %module-cmd parse directive error reporting

2010-12-06 10:49  david_nichols

	* minor fixes to class destruction

2010-12-05 20:56  david_nichols

	* added public/exported APIs for adding static vars and constants
	  to builtin classes from modules

2010-12-03 16:47  david_nichols

	* fixed recursive constant reference detection and error reporting

2010-12-03 11:29  david_nichols

	* fixed sign errors

2010-12-02 13:43  david_nichols

	* initial support for class static variables working

2010-12-02 11:36  david_nichols

	* initial functioning static class variables - can only be
	  referenced without
	  namespace path with this commit

2010-12-02 11:07  david_nichols

	* fixed reference error in last commit

2010-12-02 10:13  david_nichols

	* more progress on stastic class variable support - unstable

2010-12-02 09:22  david_nichols

	* more progress on static class variable support

2010-11-30 21:02  david_nichols

	* moved lvalue checking to parse stage 2 to allow for more a much
	  flexible definition of an lvalue (ex: class static variables)

2010-11-29 20:46  david_nichols

	* fixed parser configuration regarding class static vars

2010-11-29 13:37  david_nichols

	* more static class variable implemenation; compiling

2010-11-29 10:51  david_nichols

	* started implemented static class vars - non functional - does not
	  compile yet

2010-11-28 17:06  david_nichols

	* added initial SQLStatement API docs

2010-11-26 15:39  david_nichols

	* more progress on detecting recursive object references - seems to
	  be working (without locking, without enforcement, only in the
	  case where nodes are added to the graph), disabled by default as
	  it's still a work in progress

2010-11-25 14:26  david_nichols

	* fixed memory error

2010-11-24 15:35  david_nichols

	* removed unnecessary and unused private functions

2010-11-23 09:43  subik

	* fixed non0single compilation unit build

2010-11-18 17:32  david_nichols

	* fixed reading off end of strings when we run out of data

2010-11-18 17:20  david_nichols

	* added more date mask parsing tests

2010-11-18 17:20  david_nichols

	* improved date parsing with mask to be much more efficient

2010-11-18 16:10  david_nichols

	* fix for memory errors in date() function with mask

2010-11-17 17:35  david_nichols

	* minor recursive reference check updates

2010-11-17 13:12  david_nichols

	* added missing file

2010-11-16 16:10  david_nichols

	* more progress on recursive reference handling; need to solve
	  locking issues with multiple objects in a recursive reference
	  chain

2010-11-16 12:15  subik

	* fix compilation

2010-11-16 12:11  david_nichols

	* work towards solving recursive reference bug

2010-11-15 21:15  david_nichols

	* aborted attempt at circular reference fix with generic container
	  assignment API; however the API is still useful and can be
	  applied when containers (other than objects) have typed members

2010-11-15 17:57  david_nichols

	* updated docs

2010-11-12 18:10  david_nichols

	* added new file constants and added "perm" key to stat hash output

2010-11-09 10:04  david_nichols

	* added additional assertions to detect incorrect driver usage of
	  Datasource::transactionAborted()

2010-11-09 09:26  david_nichols

	* fixed DatasourcePool handling of Datasources closed due to
	  connection errors

2010-11-08 16:27  david_nichols

	* added new function to qore: Datasource::activeTransaction() so
	  DBI drivers can see if they need to throw an exception or not
	  when automatically reconnecting to a dataource - if
	  Datasource::beginTransaction() is called and then the driver
	  finds out the connection is down, it is safe to reconnect
	  silently if no DB commands have been issued since the
	  beginTransaction() call - Datasource::activeTransaction() will
	  only return true if DB commands have been issued since the
	  transaction started

2010-11-03 17:05  david_nichols

	* minor fixes to variant matching and complex type compatibility
	  check algorithms

2010-11-02 21:11  david_nichols

	* fixed class hierarchy copy when classes are copied

2010-11-02 17:01  david_nichols

	* added class constant script

2010-11-02 17:01  david_nichols

	* fixed bug deleting temporary object used in parsing

2010-11-02 13:01  david_nichols

	* added the possibility to declare public class constants directly
	  in the class
	  definition (as opposed to being in a member declaration list)

2010-11-01 15:56  david_nichols

	* identified another memory leak due to circular references: when
	  objects are assigned to constants; QoreProgram -> ConstantEntry
	  -> Object -> QoreProgram; made it possible to declare constants
	  in classes (no longer just in namespaces)

2010-10-30 20:31  david_nichols

	* added "data" and "*data" types

2010-10-29 15:36  david_nichols

	* fixed bugs in FtpClient class handling invalid responses from
	  buggy FTP servers; fixed socket read when socket is closed during
	  a read(-1) or readBinary(-1) operation - an exception was thrown
	  instead of returning the data that was already read

2010-10-29 07:46  david_nichols

	* doc updates

2010-10-18 15:40  david_nichols

	* really fixed HTTP CONNECT with proxy to HTTPS connection; fixed
	  proxy authentication with HTTP CONNECT

2010-10-18 13:40  david_nichols

	* send host:port instead of path when connecting with HTTP CONNECT

2010-10-16 18:11  david_nichols

	* fixed constant initialization, parse intiialization order, and
	  global thread-local variable access from code parsed and
	  committed to the Program object after the first commit; fixed
	  connecting to a HTTPS server through a proxy by using the HTTP
	  CONNECT method with the proxy

2010-10-13 13:27  david_nichols

	* improve implicit execution of SQLStatement::exec() and ::define()
	  methods

2010-10-13 08:55  david_nichols

	* improved all Datasource and DatasourcePool exceptions to report
	  the driver, user, and db name in the exception text, otherwise
	  just cosmetic changes

2010-10-09 12:27  david_nichols

	* added SQLStatement::active() method

2010-10-07 19:35  david_nichols

	* syntax highlighting fixes

2010-10-07 17:25  david_nichols

	* added new SQLStatement methods

2010-10-05 15:30  david_nichols

	* fixed "or nothing" type info for user classes; implemented
	  binding in SQLStatement::exec() method, other misc additions and
	  minor changes

2010-10-04 16:46  david_nichols

	* commented-out debugging statement

2010-10-04 16:39  david_nichols

	* bug fix for Socket class to enable the descriptor to be 0 (a
	  valid socket descriptor); before this would fail

2010-09-24 15:42  david_nichols

	* fixed a bug checking the validity of the return type at runtime

2010-09-24 08:24  david_nichols

	* greatly simplfied kate syntax highlighting by removing tons of
	  perl-specific rules and enabled multi-line comment
	  folding - katepart does not freeze anymore on complex qore code

2010-09-23 12:41  david_nichols

	* fixed reference/memory leak in cached prepare arguments (was not
	  freed with object)

2010-09-23 11:28  david_nichols

	* fixed memory leak in object += hash operator and memory
	  error/race condition
	  in handling references to object members by fixinf reversed logic
	  in
	  AbstractQoreNode::isReferenceCounted()

2010-09-23 10:34  david_nichols

	* very minor performance/valgrind warning fix

2010-09-23 09:24  david_nichols

	* typeinfo fixes

2010-09-23 08:40  david_nichols

	* fixed more warnings for the sun studio compiler and fixed parse
	  time type checking for the + and - operators

2010-09-23 08:24  david_nichols

	* fixes for warnings with the sun studio compiler

2010-09-23 07:31  david_nichols

	* parse-time variant matching fix/improvement: detect if a type
	  match could possibly fail and exclude from matches at parse time,
	  but also track all possible matches and if there is only one
	  possible match then use that variant anyway - it could still fail
	  at runtime but at least the variant search is only performed once

2010-09-22 20:10  david_nichols

	* fixed typo in last commit

2010-09-22 20:08  david_nichols

	* Dir fix for stat'ing symbolic links

2010-09-21 20:03  david_nichols

	* added the new "softdate" and "*softdate" types

2010-09-20 19:41  david_nichols

	* fixed variant matching and unsetting the "argument ignored" flag
	  when parsing the splice and extract operators

2010-09-19 16:02  david_nichols

	* minor spec update and added an assert statement

2010-09-19 12:32  david_nichols

	* fixed syntax error

2010-09-19 10:54  david_nichols

	* implemented a compromise for associating prepared statements with
	  connections in a DatasourcePool; SQLStatement::prepare() will
	  only set the SQL and initial arguments (if any); all subsequent
	  calls will then set the DatasourcePool connection/thread
	  association and the actual statemet prepare() will be executed
	  implicitly with the next action. Then the connection will be
	  released when the statement is closed or the transaction is
	  committed or rolled back

2010-09-19 06:26  david_nichols

	* fixed DatasourcePool destruction with a transaction open in
	  current thread

2010-09-18 16:39  david_nichols

	* added rollback, commit, and beginTransaction methods to
	  SQLStatement class

2010-09-18 12:02  david_nichols

	* datasource and prepared statement lock management enhancements
	  and fixes; Datasource class will no longer allow read-only access
	  to the Datasource from other threads when a thread holds the
	  transaction lock because access to uncommitted data would be
	  possible

2010-09-17 19:25  david_nichols

	* fixes to datasource allocation logic in the prepared statement
	  api

2010-09-17 16:10  david_nichols

	* prepared statement updates and atomicity bug fixes for
	  ManagedDatasource class when releasing the transaction lock

2010-09-16 13:53  david_nichols

	* added QoreString::reserve() convenience function

2010-09-15 20:14  david_nichols

	* added new convenience functions

2010-09-15 06:07  david_nichols

	* implemented fetchRows() and fetchColumns() statement API methods

2010-09-14 20:25  david_nichols

	* prepared statement API fixes

2010-09-14 12:32  david_nichols

	* added new convenience APIs to QoreHashNode

2010-09-12 10:25  david_nichols

	* fixed module API in spec file

2010-09-10 11:53  david_nichols

	* removed temporary cruft in ManagedDatasource class

2010-09-10 11:51  david_nichols

	* fixed reference/memory leak in thread resource tracking with the
	  Datasource class, fixed transaction lock enforcement in the
	  Datasource class

2010-09-10 10:54  david_nichols

	* fixed a memory/reference leak with therad resource tracking with
	  the ManagedDatasource class

2010-09-09 11:20  david_nichols

	* fixed race condition in ManagedDatasource without connection lock
	  when grabbing transaction lock - previously (without the
	  connection lock, which was recently removed) the startDBAction
	  function did not guarantee exclusive access to the datasource

2010-09-09 11:01  david_nichols

	* corrected typo in header file name

2010-09-08 16:42  david_nichols

	* fixed a memory leak/error when a namespace is added to a
	  namespace list and a committed namespace of the same name already
	  exists, the committed namespace is leaked and replaced with the
	  parsed namespace (happened in the parseCommit stage)

2010-09-08 13:24  david_nichols

	* DBI statement progress

2010-09-07 15:22  david_nichols

	* simplified SQLStatement implementation, still non-functional

2010-09-07 09:09  david_nichols

	* checked in initial changes for SQLStatement infrastructure (still
	  non-functional)

2010-09-03 17:58  david_nichols

	* fixed %require-types checking with local variable declarations;
	  implemented splice(string, string, string) to split with an
	  optional quote character

2010-09-03 11:05  david_nichols

	* updated library version to 5.5.0; updated module API to 0.10

2010-09-02 15:31  david_nichols

	* implemented new types: *softint, *softbool, *softfloat,
	  *softstring, *timeout

2010-09-02 13:29  david_nichols

	* do not use localtime() in qore - is not thread-safe, use Qore
	  internal date/time APIs (also the time region is a Program
	  attribute)

2010-09-02 13:07  david_nichols

	* minor fixes in exception text

2010-09-01 18:26  david_nichols

	* minor doc updates; fixed runtime "int" type compatibility

2010-09-01 12:18  david_nichols

	* updated type initialization to not depend on static
	  initialization order

2010-09-01 10:55  david_nichols

	* added SQL "null" type so soft* type compatibility lists

2010-09-01 10:33  david_nichols

	* fixed invalid memory access after delete error

2010-08-31 17:35  subik

	* docs for date()

2010-08-31 17:09  subik

	* docs for date()

2010-08-31 17:07  david_nichols

	* fixed a bug in checking type compatibility

2010-08-31 15:01  david_nichols

	* fixed incompatibility with string "splice" and "extract"
	  operators; they were ignoring the 4th argument if it was not a
	  string

2010-08-31 09:11  david_nichols

	* minor doc corrections

2010-08-31 08:57  david_nichols

	* added type info for "or nothing" types in function and class
	  library parameters and return types

2010-08-31 08:57  subik

	* corporate colors for docs

2010-08-31 07:32  subik

	* memory fixes, non-single-compilation-unit fixes

2010-08-31 06:55  subik

	* initial draft of string to date with mask

2010-08-30 19:30  david_nichols

	* applied "or nothing" types to function and class library, not yet
	  complete, updated docs

2010-08-30 16:40  david_nichols

	* implemented "or nothing" types for the rest of the basic types

2010-08-30 14:59  subik

	* doxygen branding and version bump

2010-08-30 13:45  david_nichols

	* implemented "deprecated" method and function tag; implemented "*"
	  prefix for type declarations, meaning the given type "or NOTHING"
	  (ex: my *hash $h = NOTHING;)

2010-08-29 13:23  david_nichols

	* implemented the "timeout" type and applied to all class methods
	  (not yet applied to funcitons), documentation updated

2010-08-22 17:42  david_nichols

	* added a commented-out debugging statement

2010-08-22 17:26  david_nichols

	* fixed parent pointer setting order

2010-08-22 17:12  david_nichols

	* new APIs to support automatic class loading from modules based on
	  wildcards (i.e. gnu-java module import statements)

2010-08-22 06:47  david_nichols

	* fixed QoreProgram::checkFeature(), added new APIs for gnu-java
	  module support

2010-08-20 08:48  david_nichols

	* added some new interfaces for use with the gnu-java module

2010-08-18 13:46  david_nichols

	* updated exceptions thrown with QoreHTTPClient::setOptions() to
	  have HTTP-CLIENT-OPTION-ERROR as the error text instead of
	  HTTP-CLIENT-CONSTRUCTOR-ERROR (this function is also called when
	  executing the Qore constructor)

2010-08-18 13:42  david_nichols

	* updated release notes, last patch also fixed a deadlock when
	  calling HTTPClient::setProxyURL("") (with an empty string
	  argument)

2010-08-18 13:40  david_nichols

	* removed private functions from QoreHTTPClient class that were
	  tagged DLLLOCAL; moved them to the private class implementation

2010-08-18 12:46  david_nichols

	* updated HTTPClient to accept URLs specifying UNIX domain sockets

2010-08-17 16:20  david_nichols

	* fixed type info for call reference calls; removed dead clode for
	  hash_values()

2010-08-14 05:23  david_nichols

	* added getModuleHash() function and function docs; resynced
	  ChangeLog

2010-08-14 05:22  david_nichols

	* removed prototype for missing function

2010-08-12 16:35  david_nichols

	* updated todo

2010-08-11 12:31  david_nichols

	* added QoreString == operators for convenience

2010-08-10 10:49  david_nichols

	* missed file from last checkin

2010-08-10 09:28  david_nichols

	* fixed memory errors in NamedScope (internal class) changes by
	  using std::string instead of manually allocated char* array

2010-08-10 09:11  david_nichols

	* fixed bugs related to patches from yesterday for runtime method
	  resolution of $.method() calls

2010-08-09 14:37  david_nichols

	* improved error message when methods cannot be resolved with
	  in-object calls

2010-08-09 14:26  david_nichols

	* fixed in-object calls (ex: $.call()) to dynamically look up the
	  method if the run-time class is not the same as the parse class

2010-08-09 13:11  david_nichols

	* fixed a deadlock where if a global variable contains an object
	  which is deleted when the global var is reassigned and the
	  object's destructor references the containing global variable, a
	  deadlock could result due to incorrectly running the object's
	  destructor while the global variable's lock is held

2010-08-09 12:38  david_nichols

	* added the ability to receive and decode xml-rpc extension types
	  ex:nil, ex:i1, ex:i2, ex:i8, ex:float, and ex:dateTime (cannot
	  send yet)

2010-08-08 19:41  david_nichols

	* implemented support for module parse commands, for example to
	  support import statements during parsing for the gnu-java module

2010-08-08 12:02  david_nichols

	* implmented thread resource ID types and handling; updated thread
	  resource tracking to use more efficent STL data structures

2010-08-08 10:29  david_nichols

	* updated internal namespace list to use a map for quicker lookups

2010-08-07 16:21  david_nichols

	* allow modules to take ownership of signals, for example, to allow
	  signals required by the boehm garbage collection library to be
	  caught and handled (ex: gcj for the gnu-java module)

2010-08-06 13:31  david_nichols

	* ignore more signals used by boehm GC, make sure internal method
	  name is a copy of the name

2010-08-06 11:34  david_nichols

	* updated internal member strings to use std::string instead of
	  const char* in case member names are temporary

2010-08-06 11:03  david_nichols

	* fixed for const correct compilers

2010-08-06 11:01  david_nichols

	* updated docs, added QoreNamespace function, cleaned up internal
	  NamedScope class somewhat, applied const to functions taking
	  NamedScope arguments, other minor changes

2010-08-05 17:59  david_nichols

	* fixed Socket::setNoDelay() and HTTPClient::setNoDelay() docs

2010-08-05 05:32  david_nichols

	* added parse type info to ContextRowNode (returns hash); added
	  AbstractSmartLock::lockOwner() and AbstractSmartLock::lockTID()
	  methods and documentation

2010-08-04 17:03  david_nichols

	* fix for last patch

2010-08-04 16:54  david_nichols

	* fixed a bug where too-lax type checking when executing variants
	  resolved at parse time can lead to a crash when a call is made
	  with a runtime type error

2010-08-03 14:20  david_nichols

	* do not throw a runtime return type exception if there is already
	  an active exception

2010-08-02 10:10  david_nichols

	* do not ignore SIGSEGV, also allows modules linked with BOEHM GC
	  to work

2010-07-31 13:12  david_nichols

	* added TempEncodingHelper constructor

2010-07-29 13:16  david_nichols

	* added class name to method description when a type error is found
	  for a method call at parse time

2010-07-29 11:23  david_nichols

	* fixed a bug with object += hash; member types were not checked
	  which could allow for members to be assigned types in violation
	  of their declared types

2010-07-29 11:22  david_nichols

	* corrected typos and examples with QoreProgramHelper

2010-07-29 11:21  david_nichols

	* added QoreString::setEncoding() function

2010-07-28 06:55  david_nichols

	* doc updates

2010-07-27 13:06  david_nichols

	* fixed signed error with not found strings with index() and
	  rindex() functions, added tests

2010-07-26 14:20  david_nichols

	* updated todo

2010-07-26 04:37  david_nichols

	* use openssl API function for retrieving private key bit length
	  instead of trying to read internal private data (that is no
	  longer exposed in newer versions of openssl anyway); return 1 for
	  SSLPrivateKey::getVersion() unconditionally, as older versions of
	  openssl never put usable information in the internal fields that
	  were previously read for this method and newer versions of
	  openssl do not expose this information at all

2010-07-26 04:04  david_nichols

	* fixed warning on g++ 4.5

2010-07-13 11:23  david_nichols

	* fixes for running qore with trace flag set in debugging mode

2010-07-13 10:55  david_nichols

	* fixed a bug in Dir::mkdir()

2010-07-12 16:27  david_nichols

	* fixed (at last vasly improved) parse time "missing return
	  statement" checking; implemented run-time checking when NOTHING
	  is returned

2010-07-12 15:28  david_nichols

	* fixed parse-time variant matching; fixed a bug where it was
	  possible to declare a function/method/closure with a return type
	  and then not have a return statement as the last statement in the
	  block thereby exiting with return value NOTHING, which could
	  cause a crash

2010-07-12 13:11  david_nichols

	* fixed setegid(), was non functional before; fixed more warnings
	  with Sun Studio compilers

2010-07-12 12:29  david_nichols

	* fixed 2-byte bitop swap on MSB platforms (ex sparc); fixed
	  DatasourcePool::constructor(hash), was ignoring "max" option and
	  setting to default (20); fixed some warnings with the SunStudio
	  compiler and +w

2010-07-12 12:00  david_nichols

	* corrected some warnings; first attempt to correct 2-byte bitop
	  swap error

2010-07-12 11:43  david_nichols

	* cosmetic fix in script

2010-07-11 17:52  david_nichols

	* commented-out another debugging message

2010-07-11 14:54  david_nichols

	* commented-out debugging output

2010-07-11 14:33  david_nichols

	* made all socket read methods taking a timeout throw a
	  SOCKET-TIMEOUT exception instead of returning NOTHING; fixed SSL
	  read timeouts with recv*(); updated documentation

2010-07-09 08:51  david_nichols

	* implemented #$ giving the implicit offset when implicitly
	  iterating a list (foreach, map, foldl, foldr, select)

2010-07-07 17:05  david_nichols

	* moved all *index() functions to QoreString member functions

2010-07-07 15:57  david_nichols

	* added new functions to QoreString class index() and bindex()

2010-07-07 08:59  david_nichols

	* fixed a typo in QoreFile::readLine()

2010-07-07 08:42  david_nichols

	* fixed QoreFile::readLine() and also Solaris zoneinfo from
	  /etc/TIMEZONE initialization

2010-07-07 08:38  david_nichols

	* updated time zone initialization to parse /etc/TIMEZONE on
	  solaris if the TZ variable is not set to set the time zone

2010-07-07 04:47  david_nichols

	* fixed a bug in QoreClass initialization from modules that would
	  cause a crash

2010-07-06 20:05  david_nichols

	* updated todo

2010-07-06 20:02  david_nichols

	* fixed command-line to take modules loaded on the command-line and
	  apply them immediately to the program class; made "abstract"
	  usable as an unquoted hash key or object member

2010-07-02 11:12  david_nichols

	* fixed typo

2010-07-01 16:23  david_nichols

	* cosmetic updates

2010-07-01 06:56  david_nichols

	* cosmetic updates

2010-06-30 16:14  david_nichols

	* removed unused member of QoreTreeNode, updated TODO

2010-06-29 14:29  david_nichols

	* fixed a crashing bug when on_exit, on_success, or on_error
	  statement bodies are empty ({})

2010-06-25 08:50  david_nichols

	* added timestamp to debugging output messages

2010-06-23 09:59  david_nichols

	* removed hash_map.h file and made declarations local to their
	  scope

2010-06-22 15:32  david_nichols

	* updated todo

2010-06-22 15:06  david_nichols

	* minor cosmetic changes; updated lib to 5.4.1; fixed a bug in the
	  return statement to not check return type if an exception is
	  active

2010-06-21 09:12  david_nichols

	* updated spec files to generically determine *suse versions for
	  distribution tagging in rpm file names

2010-06-18 13:45  subik

	* new CSS for qore docs

2010-06-18 09:29  david_nichols

	* fixed spec files

2010-06-18 08:50  david_nichols

	* fixed spec file for module api

2010-06-16 11:26  david_nichols

	* minor fixes for some warnings with SunStudio CC; use new
	  date/time APIs for atime and mtime in stat data structures

2010-06-15 14:48  subik

	* fixed date in spec file

2010-06-15 10:38  subik

	* php generator 'production' fixes

2010-06-15 09:29  david_nichols

	* solaris CC compile fixes

2010-06-15 08:22  david_nichols

	* updated version to 0.8.1 for next release

2010-06-14 13:51  david_nichols

	* minor doc updates

2010-06-14 11:22  david_nichols

	* readded html documentation to make package building easier, fixed
	  cast operator no longer to check for class compatibility and do
	  all checking at run-time; this allows the cast operator to work
	  with complex class hierarchies in a more flexible way at runtime

2010-06-14 08:10  david_nichols

	* minor formatting updates

2010-06-11 16:14  david_nichols

	* doc updated, minor miscellaneous variant updates, fixed 2
	  crashing bugs

2010-06-11 13:37  subik

	* fixed non-single compilation unit + tons of gcc warnings

2010-06-11 08:44  david_nichols

	* fixed hash(list, list) docs

2010-06-10 21:17  david_nichols

	* added another dummy inlist_hard() NOOP function for better error
	  reporting

2010-06-10 21:12  david_nichols

	* added an explicit variant for list(any, nothing) returns bool

2010-06-10 20:27  david_nichols

	* updated docs - added Program::importFunction(string $func, string
	  $new_name) returns nothing variant

2010-06-10 19:14  subik

	* PHP online commentable docs generator

2010-06-10 17:02  david_nichols

	* documented hash(list, list) returns hash variant

2010-06-10 16:40  david_nichols

	* implemented hash(list, list) returns hash

2010-06-10 14:26  david_nichols

	* added docs for setsid(), fixed umask() and srand() domain to be
	  QDOM_PROCESS (instead of QDOM_FILESYSTEM), implemented a module
	  blacklist for the qt-core, qt-gui, qt-svn, and qt-opengl modules,
	  because they use faulty namespace management and do not work with
	  qore 0.8.0+; updated RELEASE-NOTES

2010-06-09 10:59  david_nichols

	* allow static linking of libbz2, fixed constructor arg order in
	  QoreTypeInfo.h

2010-06-08 08:21  david_nichols

	* simplified external type info API

2010-06-07 14:16  david_nichols

	* external type info API updates

2010-06-07 10:10  david_nichols

	* updated type info API and fixed a bug in replace()

2010-06-07 09:02  david_nichols

	* fixed runtime argument matching with privately-inherited classes

2010-06-07 08:12  david_nichols

	* updated external type info API to new internal API

2010-06-04 16:51  david_nichols

	* updated type info API (external API not yet reimplemented)

2010-06-02 13:21  david_nichols

	* updates to new type info API, stripped out unused cruft from
	  QoreParseTypeInfo to make it a very simple independent class

2010-06-02 11:56  david_nichols

	* more new type info implementation updates

2010-06-01 15:14  david_nichols

	* removed incorrect comments

2010-06-01 15:08  david_nichols

	* first part of new more flexbile/extensible internal type info api
	  implementation

2010-06-01 15:07  david_nichols

	* minor class matching fix

2010-06-01 08:28  david_nichols

	* added command-line options for new parse options

2010-05-31 14:35  david_nichols

	* fix for last patch

2010-05-31 14:28  david_nichols

	* fixed compilation with older versions of openssl; fixed SHA_512
	  algorithm check with older versions of openssl

2010-05-31 13:42  david_nichols

	* doc updates, added "returns" documentation and corrected
	  documentation for prototypes, etc

2010-05-30 17:10  david_nichols

	* missing changes from last commit

2010-05-30 14:19  david_nichols

	* implemented strict-args (PO_STRICT_ARGS) and require-prototypes
	  (PO_REQUIRE_PROTOTYPES) parse options; additionally, if excess
	  args are given to a function or method with either strict-args or
	  require-types set, then an error will be raised

2010-05-28 18:48  david_nichols

	* minor doc updates

2010-05-28 12:00  subik

	* qthelp docs fixes for fresh svn checkout

2010-05-28 09:21  david_nichols

	* do not use round() function because it's not available on Solaris
	  8

2010-05-27 13:59  david_nichols

	* update to supress unreachable-code warning

2010-05-27 13:47  david_nichols

	* updated test to retrieve file

2010-05-27 13:45  david_nichols

	* minor fixes to ftp-test script, updated exception text output
	  when exceptions raised by raiseErrnoException()

2010-05-27 13:21  david_nichols

	* added links for regular expression operators

2010-05-27 13:10  david_nichols

	* minor updates

2010-05-27 13:08  david_nichols

	* added new Program methods related to time zone information, other
	  doc updates

2010-05-27 12:34  david_nichols

	* corrected date_us() to make a date/time value in the local time
	  zone from an offset from 1970-01-01 relative to the local time
	  zone as documented

2010-05-27 12:17  david_nichols

	* added docs about xml-rpc serialization, fixed xml-rpc and
	  json-rpc float serialization to use greater precision

2010-05-27 12:11  david_nichols

	* fixed xml-rpc date/time serialization to use the current time
	  zone; fixed DateTime::getInfo() to respect the time zone argument
	  passed; fixed XML-RPC serialization to throw an exception if an
	  unsupported type is passed for serialization rather than creating
	  invalid XML-RPC output

2010-05-26 15:43  subik

	* tables with empty columns fix

2010-05-26 15:11  david_nichols

	* fixed XmlRpcClient::call*() method return value type info (should
	  be hash instead of any)

2010-05-26 14:56  subik

	* qthelp generator for docbook

2010-05-26 14:39  david_nichols

	* implemented new parse directives and command-line options for new
	  parse options (no-thread-info, no-locale-control, and
	  no-external-info), updated docs, fixed regex_extract() return
	  type info (should be any instead of list)

2010-05-26 13:31  david_nichols

	* updated docs for new release

2010-05-26 12:28  subik

	* tables spacing in the docs

2010-05-26 10:18  subik

	* code is wrapped in tables, terms are highlighted

2010-05-26 09:04  david_nichols

	* updated class docs

2010-05-25 17:03  david_nichols

	* updated class docs

2010-05-25 17:02  david_nichols

	* fixed SSLPrivateKey::constructor(binary) type info

2010-05-25 12:24  david_nichols

	* cosmetic update

2010-05-25 12:24  david_nichols

	* updated class docs

2010-05-25 11:05  david_nichols

	* class doc updates; typeinfo update: Socket::shutdownSSL() returns
	  nothing (not int)

2010-05-25 08:47  david_nichols

	* fixed Socket::sendi1() return value (was returning -1 when no
	  error occurred); updated Socket::shutdownSSL() to return NOTHING
	  (return value was meaningless because it always throws an
	  exception if there's an error), added send return value checks to
	  socket-test.q

2010-05-24 16:21  david_nichols

	* updated docs and corrected typinfo

2010-05-24 09:13  david_nichols

	* fixed parse-time matching like the last runtime fix

2010-05-24 09:05  david_nichols

	* doc updates and fixed variant matching from last fix

2010-05-24 08:14  david_nichols

	* doc updates - File class and fixed Datasource links

2010-05-24 07:24  david_nichols

	* updated Dir class docs

2010-05-22 10:51  david_nichols

	* removed empty sections for methods taking no arguments

2010-05-22 09:52  david_nichols

	* updated default argument for first parameter of File::lock() and
	  File::lockBlocking() to be F_RDLCK instead of 0 (which is
	  invalid)

2010-05-22 06:32  david_nichols

	* updates to File class docs

2010-05-21 19:37  subik

	* docs typographics changes

2010-05-21 17:32  david_nichols

	* doc updates and fixed variant resolution (again) - matches based
	  on missing arguments and default parameters do not count towards
	  match count

2010-05-21 14:21  david_nichols

	* doc updated and type info fixes

2010-05-21 05:49  david_nichols

	* fixed variant ordering for TimeZone::date(date)

2010-05-20 16:28  david_nichols

	* doc updates and type info fixes

2010-05-19 15:45  david_nichols

	* minor doc updates

2010-05-19 15:43  david_nichols

	* doc updates

2010-05-19 15:41  david_nichols

	* updated FtpClient::setPort() to not allow a negative port number
	  to be set; corrected type info in GetOpt class

2010-05-19 14:32  david_nichols

	* fixed type info for Dir::path()

2010-05-19 14:10  david_nichols

	* started updating class library documentation; fixed type info
	  errors in File class

2010-05-19 12:33  david_nichols

	* updated documentation; removed some new xml function variants
	  that are essentially duplicates of older functions, added
	  Z_DEFAULT_COMPRESSION and MACHINE_MSB constants

2010-05-19 06:40  david_nichols

	* correct return types for a few functions

2010-05-18 16:50  david_nichols

	* fixes for compiling on linux

2010-05-18 16:16  david_nichols

	* implemented new code flag: QC_RUNTIME_NOOP; variants with this
	  tag act like QC_NOOP unless the code accessing them has
	  PO_REQUIRE_TYPES set, in which case they do not just generate a
	  warning, they generate a parse error if resolved at parse time
	  and a run-time CALL-WITH-TYPE-ERRORS exception. This way
	  backwards-compatible function variants that perform no useful
	  purpose (except ignoring type errors) can be made inaccessible
	  from programs where types are required - and as well any
	  inadvertent access to them is visible with an appropriate
	  exception - at the same time as maintaining
	  backwards-compatibility with older typeless code. Additionally
	  the internal implementation was updated so that the return type
	  will be reported on a function level when the variant cannot been
	  resolved correctly as the unique type of only variants without
	  QC_RUNTIME_NOOP if requested from code with PO_REQUIRE_TYPES set.

2010-05-18 12:51  david_nichols

	* made get_word_*() functions always assume MSB, implemented
	  get_word_*_lsb() functions and documented, cleaned up some
	  function documentation to explain parameters better, tagged
	  function documentation with QDOM_EXTERNAL_INFO and
	  QDOM_THREAD_INFO

2010-05-18 10:36  david_nichols

	* completed documenting function library (except missing new
	  functions)

2010-05-18 09:35  david_nichols

	* updated XML function documentation

2010-05-18 08:04  david_nichols

	* implemented q_strerror() functions and
	  ExceptionSink::raiseErrnoException() and applied to qore to avoid
	  using strerror() directly; respect HAVE_STRERROR_R and use it,
	  otherwise use a lock when calling strerror() in non-debugging
	  code (call is not thread-safe when called with an error code that
	  has no description string - however error codes set by
	  system/library function should always have a code, so leaving
	  strerror() in debugging code should be safe)

2010-05-17 20:19  david_nichols

	* doc updates to function library (still not complete), type info
	  fixes, fixed usleep() argument processing with microsecond
	  relative date/time arguments

2010-05-17 16:15  david_nichols

	* doc and compatibility updates

2010-05-17 12:10  david_nichols

	* fixed flags

2010-05-17 09:24  david_nichols

	* minor updates

2010-05-17 09:13  david_nichols

	* doc updates - implemented a script to try and automatically
	  determine the location of the docbook stylesheets

2010-05-17 09:11  david_nichols

	* added "json" as a builtin feature as in future releases it will
	  be separated from the qore library (along with xml) released as
	  an independent module

2010-05-17 08:19  david_nichols

	* added missing functions

2010-05-16 14:21  david_nichols

	* removed reference to deprecated function "typename()" in test.q;
	  replaced atof() with strtod() because atof() is not thread-safe

2010-05-15 16:51  david_nichols

	* dox updates, cleanups, new links, etc

2010-05-15 13:14  david_nichols

	* code flag corrections and doc updates

2010-05-14 14:29  david_nichols

	* doc and type info updates

2010-05-14 13:47  david_nichols

	* doc updates, type info and function variants fixes (bugs
	  discovered while updating docs)

2010-05-14 05:14  david_nichols

	* fixed date conversions from float to convert fractions to
	  microseconds; fixed date(date) not to discard microseconds, added
	  a DateTime::setLocalDate() function; added date(float) variant so
	  microseconds would be preserved

2010-05-13 15:47  david_nichols

	* initial doc updates + some function type info corrections

2010-05-13 08:19  david_nichols

	* fixed variant matching (again) to not favor matches based on
	  default arguments over real exact type matches

2010-05-12 14:25  david_nichols

	* updated for openssl without MD2

2010-05-12 13:08  david_nichols

	* updates to suppress some warnings with sun studio CC +w and to
	  compile properly with openssl 1.0.0

2010-05-12 11:49  david_nichols

	* solaris and sun studio compile and warning fixes/enhancements

2010-05-12 10:56  david_nichols

	* updated not to use deprecated compiler flags with the oracle sun
	  studio CC compiler, updated to set 64-bit mode when compiling on
	  a 64-bit machine with solaris, updated to turn on all warnings
	  with the oracle sun studio CC compiler

2010-05-12 09:01  david_nichols

	* ensure proper partial overloading of base class functions by
	  including "using" declarations

2010-05-12 08:44  david_nichols

	* changed the visibility of parseInit() functions for the qt4
	  module

2010-05-12 07:35  david_nichols

	* cosmetic updates

2010-05-12 07:33  david_nichols

	* adding "signed" to the qore_type_t typedef seems to fix the value
	  promotion rules with the Oracle Sun Studio C++ Compiler when used
	  in a bitfield

2010-05-11 15:55  david_nichols

	* starting doc updated for 0.8.0 release

2010-05-11 14:10  david_nichols

	* compile fix for Solaris SunPro CC

2010-05-10 15:29  david_nichols

	* added a hash(hash) returns hash function for the sanity's sake

2010-05-10 11:28  david_nichols

	* updated string -> date conversions to allow for much more
	  flexibility in date parsing, also to allow for parsing relative
	  date/time values directly from strings, including ISO-8601
	  duration specifications like the following:
	  P<n>Y<n>M<n>DT<n>H<n>M<n>S<n>u. Support for parsing these
	  relative date/time values was also added to the parser. This code
	  implements a subset of the ISO-8601 duration specification with
	  an extension for microseconds.

2010-05-08 11:10  david_nichols

	* updated algorithms for DateTime::getMicrosecond(),
	  DateTime::getSecond(), DateTime::getMillisecond(),
	  DateTime::getMinute(), DateTime::getHour() with absolute
	  date/time values to make them much faster and avoid calculating
	  all broken-down components for each call - also updated the API
	  documentation

2010-05-07 15:40  david_nichols

	* added request-uri and response-uri info to info hash in HTTP
	  requests if the info hash is present

2010-05-07 14:52  david_nichols

	* updated release notes

2010-05-07 11:56  david_nichols

	* updated HTTP-CLIENT-RECEIVE-ERROR when an error code is received
	  to return a hash in the exception argument "arg" with the message
	  body and the http code

2010-05-07 11:17  david_nichols

	* fixed a bug in HTTPClient::post() and in immediate operator
	  evaluation during parse time

2010-05-07 09:05  david_nichols

	* fixes to allow constants assigned by builtin code (not at parse
	  time) to not require any initialization (or type checking)

2010-05-07 08:42  david_nichols

	* fixed bugs initializing constants defined with expressions using
	  other constants

2010-05-06 14:08  david_nichols

	* added new noop functions for is_date_relative(any) and
	  is_date_absolute(any) to allow for easier run-time type
	  identification

2010-05-06 12:06  david_nichols

	* fixed epoch offset calcuation when year < 1

2010-05-06 11:10  david_nichols

	* fixed symbol visibility when building the library; fixed return
	  type info for parseXMLRPCValue(), made
	  ModuleManager::parseLoadModule() public, implemented support for
	  parsing any number of digits for fractional seconds up to 6
	  (previously only supported 3 or 6; any other number of digits
	  after the decimal would have caused a scanner error); implement
	  <x>us relative time specification in the scanner for microseconds

2010-05-06 08:21  david_nichols

	* fixed variant order for better type matching with strlen(),
	  length(), and chr()

2010-05-05 17:47  david_nichols

	* minor api updates for YAML module and API doc updates

2010-05-04 13:49  subik

	* doxyfile updated - it can generate qt assistant files for offline
	  browsing too.

2010-05-04 11:25  david_nichols

	* fixed design issues with static method calls using non-static
	  method call syntax

2010-05-04 11:12  david_nichols

	* fixed EOF in line comment; fixed memory leak in EOF handling in
	  block comments

2010-05-03 13:43  subik

	* new docs build system (xsltproc/xsl based). Single file docs and
	  chunks are created together. Fixes for docbook's elements.

2010-05-03 08:10  david_nichols

	* updated the DatasourcePool(hash) constructor to accept the output
	  from parseDatasource() exactly as it comes (using the "options"
	  key for the "min" and "max" values)

2010-05-02 15:29  david_nichols

	* doc updates for the DateTime class

2010-04-30 14:59  david_nichols

	* fixed a bug checking duplicate signatures in uncommitted user
	  variants

2010-04-30 13:56  david_nichols

	* updated release notes a bit

2010-04-30 13:49  david_nichols

	* added the following functions:
	  get_duration_seconds(date) returns int
	  get_duration_milliseconds(date) returns int
	  get_duration_microseconds(date) returns int

2010-04-30 12:15  david_nichols

	* added is_date_relative() and is_date_absolute() functions

2010-04-29 14:41  david_nichols

	* added public/exported q_epoch() function, implemented
	  compatibility between "soft" types

2010-04-29 09:02  david_nichols

	* code cleanups from the last patch and some minor doc and release
	  updates

2010-04-29 08:13  david_nichols

	* added more information to ParseNode to allow for more
	  optimizations in the common base class for parse expressions;
	  reimplemented constant expression parsing to check for
	  expressions with side effects and disallow them; check in each
	  operator's parseInit call if the operation can be evaluated at
	  parse time and the result put in the tree instead of doing this
	  right after scan time, as doing it later allows for constants to
	  be resolved

2010-04-28 10:14  david_nichols

	* make sure class comparisons are done on IDs; remove assert from
	  QoreThreadLock destructor, allow more flexibility with constant
	  expressions

2010-04-26 16:22  david_nichols

	* implemented the ability to check if calls to user functions have
	  too many arguments, fixed stack size detection due to a typo,
	  fixed internal API usage for date/time values

2010-04-23 15:17  david_nichols

	* changes QDOM_LOCALE to QDOM_LOCALE_CONTROL, fixed type info in
	  save_thread_data(string, any), implemented
	  "unreferenced-variable" warning to warn when a declared variable
	  is not referenced, some minor example and test script updates

2010-04-23 13:24  david_nichols

	* added TimeZone methods: date(softint) date(date) dateMs(softint)
	  dateUs(softint), updated new APIs to use UTC instead of GMT in
	  the API names

2010-04-23 13:05  david_nichols

	* implemented Qore TimeZone class for time zone information, added
	  new functions: microseconds(), get_microseconds(), date_us(),
	  localtime(date), gmtime(date), added new Program methods:
	  Program::setTimeZoneRegion(), Program::setTimeZoneUTCOffset(),
	  Program::setTimeZone(), Program::getTimeZone()

2010-04-22 15:38  david_nichols

	* fixed datasource parsing when hostname is missing, added
	  datasource option parsing at the end of the definition in
	  curly-brackets (i.e.
	  "oracle:user/pass@db(al32utf8)%localhost:1532{min=1,max=2}") -
	  currently options are free-form

2010-04-22 10:54  david_nichols

	* improved run-time error message when accessing a private
	  constructor outside the class context

2010-04-22 10:52  david_nichols

	* updated TODO, improved error message when accessing a private
	  constructor

2010-04-22 10:42  david_nichols

	* improved type handling for Dir::list*() methods

2010-04-22 09:21  david_nichols

	* implemented duplicate-hash-key warning

2010-04-21 11:36  subik

	* compile fix for non-single-compilation-unit

2010-04-21 10:40  david_nichols

	* supressed debugging output, plugged memory leak created a few
	  patches ago

2010-04-21 09:12  david_nichols

	* compatibility fixes for date/time values, make sure that old APIs
	  return the equivalent values as offset in the local time zone;
	  added common UTC offset zones for unlocked lookups in
	  QoreTimeZoneManager

2010-04-20 16:26  david_nichols

	* do not restrict the variable argument in the catch declaration to
	  hash type because it breaks backwards-compatibility

2010-04-20 15:27  david_nichols

	* fixed parse-time variant matching in cases where types are not
	  available for arguments that are given in the call

2010-04-20 14:15  david_nichols

	* updated remaining copyright notices to reflect 2010

2010-04-20 13:37  david_nichols

	* implemented the HAVE_MD2 constant and the QORE_OPT_MD2 option for
	  openssl versions without the MD2 algorithm

2010-04-20 12:53  david_nichols

	* added check if SSL_CTX_new() requires a const argument or not

2010-04-20 12:33  david_nichols

	* minor bugfixes for older versions of bash

2010-04-20 10:59  david_nichols

	* implemented excess-args warning, corrected type information

2010-04-20 09:02  david_nichols

	* implemented "deprecated" warning and improved warning message for
	  return-value-ignored

2010-04-20 08:45  david_nichols

	* implemented return-value-ignored warning, optimized some call
	  references by saving resolved methods at parse time and using at
	  runtime to avoid a second run-time search

2010-04-19 14:08  david_nichols

	* updated last remaining functions to new API

2010-04-19 13:47  david_nichols

	* updates to new APIs, updated code flags for FtpClient methods
	  that do perform some action but were tagged with
	  QC_RET_VALUE_ONLY

2010-04-19 13:08  david_nichols

	* added type info to XmlRpcClient class, fixed response_headers
	  reporting in info reference in JsonRpcClient and XmlRpcClient
	  methods taking info reference arguments

2010-04-19 12:45  david_nichols

	* added type info to XmlReader class

2010-04-19 11:57  david_nichols

	* updated for non-debugging builds

2010-04-19 11:56  david_nichols

	* added type info to XmlNode class

2010-04-19 11:56  david_nichols

	* updated bitops swap algorithms to remove strict-aliasing
	  violations

2010-04-18 19:13  david_nichols

	* add type info to XmlDoc class

2010-04-18 17:12  david_nichols

	* applied type info to TermIOS class

2010-04-18 16:29  david_nichols

	* added type info to Socket

2010-04-17 18:01  david_nichols

	* code flag fixes, started applying type info to Socket class

2010-04-17 17:41  david_nichols

	* applied type info to RWLock class

2010-04-17 17:19  david_nichols

	* applied type info to Queue class

2010-04-17 15:52  david_nichols

	* applied type info to Program class

2010-04-16 16:52  david_nichols

	* removed new ambiguous DateTime and DateTimeNode constructors

2010-04-16 16:35  subik

	* temporary(?) fix for compilation on osx leopard

2010-04-16 09:32  subik

	* sql drivers versions bump to spot execRaw. execRaw feature
	  promoted to all drivers' feature lists. execRaw constant naming
	  unified.

2010-04-15 16:34  david_nichols

	* fixed code flags

2010-04-15 10:59  david_nichols

	* added new DBI constants to qore

2010-04-15 10:55  david_nichols

	* added new DateTime functions to get the broken-down time
	  information in one call, added new DBI capability flags:
	  DBI_CAP_HAS_EXEC_RAW, DBI_CAP_TIME_ZONE_SUPPORT

2010-04-14 14:59  david_nichols

	* added APIs to load in time zone regions on demand

2010-04-14 14:04  david_nichols

	* fixed ambiguous date/time parsing (i.e. 2010-04-19-06:00:00)

2010-04-14 11:24  david_nichols

	* removed debugging output

2010-04-14 11:23  david_nichols

	* fixed string->date conversion

2010-04-14 09:11  david_nichols

	* updated date/time parsing to be more flexbile

2010-04-14 08:52  david_nichols

	* updated date/time headers, updated relative date parsing

2010-04-14 06:34  david_nichols

	* updated date/time parseing to make seconds optional, accepts
	  time-zone offset 'Z' for UTC, updated DateTime and DateTimeNode
	  constructors, made currentTZ() a globally-exported symbol

2010-04-13 16:16  david_nichols

	* added support for time zone parsing; added new q_epoch_us() and
	  q_epoch_ns() library functions, fixed gmtime(), etc to return
	  times in UTC

2010-04-13 14:33  david_nichols

	* compile fixes and millisecond parse fixes

2010-04-13 12:18  david_nichols

	* started implementing support for defining UTC offsets in
	  date/time values in the parser and internally

2010-04-13 10:36  david_nichols

	* updated epoch->date conversion to use a mathematical algorithm
	  instead of an iterative algorithm

2010-04-13 10:35  david_nichols

	* fixed a bug in BinaryNode::append() when the same value is
	  appended to itself

2010-04-13 10:34  david_nichols

	* cleaned up context code

2010-04-12 08:17  subik

	* fix for "multiple definition of normalize_dm" etc. -
	  non-single-compilation-unit

2010-04-09 17:18  david_nichols

	* fixed negative GMT offset display: TZ=America/Chicago qore -X
	  'now()' gives: 2010-04-09 12:17:16 Fri -05:00 (CDT)

2010-04-09 14:53  david_nichols

	* fixed epoch -> broken down date -> epoch calculations, all
	  date/time tests in test/test.q passing

2010-04-09 05:29  david_nichols

	* fixed time zone transition logic

2010-04-08 18:59  david_nichols

	* fixed date arithmetic to first do math with year, month, and date
	  with the broken down date, and then add hours, minutes, seconds,
	  and microseconds with the GMT offset

2010-04-08 15:35  david_nichols

	* new date/time implementation, internal format changed; absolute
	  times have resolution to the microsecond and time zone support;
	  absolute times are stored as microsecond offset from the UNIX
	  epoch in GMT, plus a time zone region pointer based on data read
	  in from the zoneinfo DB. relative date/time values are now only
	  normalized to the day, as days now can have different lengths due
	  to daylight savings time; the unary operator was re-written to
	  also apply to time values; date math with relative negative units
	  has been fixed. there are still some minor issues with dates far
	  in the future and in the past, but it seems to be mostly working.
	  note that currently all times are assumed to be local time, also
	  the time returned by gmtime() is given in the local time zone,
	  this will be fixed in a later patch

2010-04-08 08:16  david_nichols

	* updated method call optimization

2010-04-07 11:33  subik

	* fixed limited XML node size

2010-04-06 20:01  david_nichols

	* added type info to JsonRpcClient class
	  added JsonRpcClient::constructor(bool $b = False)
	  fixed JsonRpcClient::callArgsWithInfo() and
	  JsonRpcClient::callArgs() to return the info hash even if a
	  communication error occurs
	  fixed parsing negative numbers in json strings
	  made type info corrections in HTTPClient class

2010-04-06 13:54  david_nichols

	* added new virtual TimeZoneInfo API: AbstractQoreTZInfo; moved
	  most DateTime functionality to qore_date_private to prepare for
	  adding time zone support

2010-04-05 20:06  david_nichols

	* fixed minor typo

2010-04-05 16:43  david_nichols

	* added type info to HTTPClient class; changed the functionality of
	  the following methods:
	  HTTPClient::setSecure(bool $b = True)
	  HTTPClient::setProxySecure(bool $b = True)
	  HTTPClient::setNoDelay(bool $b = True)
	  these methods used to have the opposite functionality when no
	  argument was given, but this is counter-intuitive and contrary to
	  qore conventions (i.e. before $httpclient.setSecure() would
	  actually turn off secure connections

2010-04-04 16:50  david_nichols

	* corrected type information in the GetOpt class

2010-04-04 16:45  david_nichols

	* added hard typing to Gate class

2010-04-04 16:04  david_nichols

	* fixed Socket::recv() and Socket::recvBinary() when reading all
	  data available on the socket when the remote ends closes the
	  connection in an orderly way; updated the ftp-test.q script

2010-04-04 14:22  david_nichols

	* finished adding hard typing to FtpClient class, corrected
	  FtpClient::getURL() to return ftps:// if a secure connection is
	  set

2010-04-03 07:41  david_nichols

	* updated File::getCharset() code flags

2010-04-03 07:16  david_nichols

	* updated hard typing in File class to new API usage

2010-04-03 06:22  david_nichols

	* use class pointer to create new Dir object from openDir() instead
	  of searching in program's namespace

2010-04-02 20:48  david_nichols

	* applied hard typing to Dir class

2010-04-02 20:09  david_nichols

	* minor fixes and hard typing application to the DatasourcePool
	  class

2010-04-02 14:30  david_nichols

	* solaris compile fixes

2010-04-02 13:00  david_nichols

	* fixed compilation on SunPro (and on compilers that do not allow
	  arrays to be declared on the stack with non-constant size)

2010-04-01 14:29  david_nichols

	* missing file

2010-04-01 12:45  david_nichols

	* compile fixes, initial zoneinfo infrastruture for time zone
	  support, API enhancements, added "readlink()" function

2010-03-29 15:17  david_nichols

	* added more helper functions to BiunaryNode, QoreString, and
	  QoreFile; fixed header formatting; added function to load SSL
	  error messages in qore library initialization

2010-03-29 11:24  david_nichols

	* added now_gmt_ms(), disabled the hack-y timezone offset
	  calculation in now_ms() - did not work on linux and was not
	  implemented correctly on other platforms that actually returned
	  data in the timezone structure in the gettimeofday() call

2010-03-27 10:42  david_nichols

	* fixed 'new' operator parsing; expressions like "new
	  MyClass().something" and "new MyClass().doSomething()" now work
	  properly without requring quotes

2010-03-27 09:53  david_nichols

	* corrected method call optimization to save the class resolved at
	  parse time and use it compare to the runtime class; using the
	  method's class would only work if a base class method was not
	  resolved at parse time

2010-03-27 08:39  david_nichols

	* implemented cast<object>(expr) to allow force method and member
	  resolution at runtime even with declared types; useful when you
	  have a complicated class hierarchy with a certain method
	  implemented in all child classes and you actually have an
	  instance of the child class, but there is no common parent class
	  with the method (can happen when extending third-party classes,
	  for example)

2010-03-26 16:16  david_nichols

	* fixed adding virtual private data to classes with multiple
	  virtual base classes
	  tag class methods added with old APIs with QC_USES_EXTRA_ARGS
	  fixed Mutex::lock() typing
	  applied hard typing to the Datasource class
	  implemented Datasource::constructor(<hash>)

2010-03-26 13:39  david_nichols

	* corrected and renamed HARD_QORE_OBJ_PARAM() macro to
	  HARD_QORE_OBJ_DATA() as it did not cover the race condition when
	  the object is deleted after call setup and before the call; fixed
	  incorrect classes in QC_Condition.cpp, applied hard typing to
	  QC_Counter.cpp

2010-03-26 13:03  david_nichols

	* missing file

2010-03-26 13:03  david_nichols

	* implemented new abstract class AbstractSmartLock for Qore classes
	  that can wait on Condition variables, moved the cond map to
	  AbstractSmartLock C++ class, applied ahrd typing to
	  QC_Condition.cpp

2010-03-26 09:58  david_nichols

	* implemented performance optimization to save the method ptr
	  resolved at parse time for method calls (if any), and use at
	  runtime; if the runtime class is identical, use it and thereby
	  avoid a class hierarchy search, additionally any variant
	  identified at parse time will also be used, avoiding the runtime
	  variant matching

2010-03-26 09:58  david_nichols

	* added missing noop variants for mktime() and gmtime(), corrected
	  a typo in getEpochSeconds() name

2010-03-26 09:21  david_nichols

	* applied hard typing

2010-03-26 09:19  david_nichols

	* applied hard typing

2010-03-26 09:16  david_nichols

	* use HARD_QORE_OBJ_PARAM instead of old-style argument checking

2010-03-26 09:11  david_nichols

	* fixed runtime type error reporting for builtin code; fixed
	  runtime type checking when instantiating arguments to a function
	  or method call; applied hard typing to the AutoGate class

2010-03-26 08:26  subik

	* compile fix for non-single compilation unit

2010-03-26 08:12  david_nichols

	* added missing variants for functions with optional encoding
	  arguments

2010-03-25 21:27  david_nichols

	* fixed returning typeinfo for static method calls, fixed checking
	  the return type with the return statement, added a warning if a
	  return statement includes an expression whose type cannot be
	  resolved and the block does not allow any value to be returned;
	  finished adding hard typing to ql_type.cpp

2010-03-25 20:18  david_nichols

	* do not flag string(), boolean(), etc with QC_NOOP, because they
	  are often used as initializers

2010-03-25 20:17  david_nichols

	* updated tests to work better on Darwin - catch exceptions in new
	  methods that throw an exception on error so that the tests can
	  proceed even if they fail

2010-03-25 16:33  david_nichols

	* made date types compatible with soft* types, partially applied
	  hard typing to ql_type.cpp

2010-03-25 15:56  david_nichols

	* implemented hard typing for ql_time.cpp

2010-03-25 14:47  david_nichols

	* implemented PO_NO_THREAD_INFO ('no-thread-info') parse option and
	  QDOM_THREAD_INFO, added ahrd typing to thread functions in
	  ql_thread.cpp, added QDOM_THREAD_INFO to gettid(), num_threads(),
	  thread_list(), get_thread_data(), get_all_thread_data(),
	  getAllThreadCallStacks()

2010-03-25 14:13  david_nichols

	* use safe_dslist for variant list because it's written at parse
	  time and read at runtime, and never randomly accessed

2010-03-25 13:52  david_nichols

	* fixed non-thread-safe usage of getpwnam() in QC_Dir.cpp, added
	  new library functions: q_getpwuid(), q_getpwnam(), q_getgrgid(),
	  q_getgrnam(), q_uname2uid(), and q_gname2gid() for thread-safe
	  access to passwd and group information, added new Qore functions:
	  getpwuid2(), getpwnam(), getpwnam2(), getgrgid(), getgrgid2(),
	  getgrnam(), getgrname2()

2010-03-25 11:59  david_nichols

	* added compress2() as an alias for compress() for
	  backwards-compatibility

2010-03-25 10:18  david_nichols

	* fixed bugs checking types in the return statement; removed list
	  type info from $argv variable for backwards compatibility; aplied
	  hard typing to ql_object.cpp

2010-03-25 09:17  david_nichols

	* use automatically-generated ChangeLog instead of hand-edited
	  CHANGELOG, updated TODO

2010-03-24 17:10  david_nichols

	* added QC_RET_VALUE_ONLY to allow for later warnings when a
	  function that only returns a value has its return value ignored;
	  TODO updates

2010-03-24 16:48  david_nichols

	* save parse code; issue an invalid-operation warning if a
	  constructor, destructor, or copy method returns a value if
	  require-types is not set in order to maintain backwards
	  compatibility with older code

2010-03-24 16:05  david_nichols

	* finished applying types to lib/ql_misc.cpp, tag noop functions
	  with QC_NOOP in ql_list.cpp, added new QC_DEPRECATED code flag,
	  other minor fixes

2010-03-24 13:34  david_nichols

	* param type fix for exit() for backwards-compatibility

2010-03-24 13:19  david_nichols

	* fixed type reporting at parse time for taking a slice of a hash
	  or object

2010-03-24 13:09  david_nichols

	* fixed a bug resolving types in $.<name> expressions

2010-03-24 09:54  david_nichols

	* updated warning text for non-existent-method-call warning

2010-03-24 09:40  david_nichols

	* added warning constant WARN_CALL_WITH_TYPE_ERRORS

2010-03-24 09:35  david_nichols

	* added type info to lib/ql_bzip.cpp, lib/ql_crypto.cpp,
	  lib/ql_debug.cpp, lib/ql_env.cpp, lib/ql_file.cpp,
	  lib/ql_json.cpp, lib/ql_lib.cpp, lib/ql_list.cpp, lib_ql_math.cpp
	  added new function getcwd2() that throws an exception if an error
	  occurs
	  added new QDOM_EXTERNAL_INFO and PO_NO_EXTERNAL_INFO
	  flagged the following functions with QDOM_EXTERNAL_INFO:
	  getuid(), geteuid(), getgid(), getegid(), getpid(), getppid(),
	  gethostname(), gethostbyname(), gethostbyaddr(),
	  gethostbyname_long(), gethostbyaddr_long(), getcwd(), getcwd2()
	  added a QoreSocket::recvBinary() function to receive all data
	  available on the socket (with an optional initial timeout value)
	  and return it as a binary object; if Socket::recvBinary() is
	  called with buffer-size <= 0, then this variant is used
	  added new warning: QP_WARN_CALL_WITH_TYPE_ERRORS,
	  "call-with-type-errors"
	  added a warning at parse time if a function or method flagged
	  with QC_NOOP is resolved

2010-03-21 15:49  david_nichols

	* some more hard typing fixes for the internal function library
	  added new API support for declaring that a type is compatible
	  with another type

2010-03-21 10:52  david_nichols

	* fixed type compatibility with the new soft types: softint,
	  softfloat, softstring, softbool

2010-03-20 11:37  david_nichols

	* fixed a bug in the runtime logic in the new soft type
	  implementation

2010-03-20 11:33  david_nichols

	* implemented new "soft" type variants for int, bool, float, and
	  string that perform automatic conversions from those types to the
	  target type (user types are: softint, softfloat, softbool,
	  softstring)
	  applied hard typing and code flags to all functions in
	  lib/ql_math.cpp
	  updated legacy API BuiltinFunctionList::add() to tag functions
	  with QC_USES_EXTRA_ARGS internally

2010-03-19 17:33  david_nichols

	* missing files from last commit

2010-03-19 16:56  david_nichols

	* fixed some bugs in hard typing support
	  made class parse initialization nested and more efficient
	  implemented "closure" and "callref" types (both alias to "code"
	  internally) and fixed parse type reporting for those types
	  implemented cast<> operator

2010-03-19 09:11  david_nichols

	* fixed parse warning for unknown method calls when a static method
	  is called with normal method call syntax

2010-03-18 15:45  david_nichols

	* fixed static reference namespace initialization to be done only
	  once, all top-level QoreProgram objects created contain copies of
	  that namespace, similar to how namespace initialization works
	  with modules
	  fixed that all parse options are respected in the initial
	  program, including "no-system-classes", etc

2010-03-18 13:47  david_nichols

	* implemented code to ensure that there is only one variant for
	  methodGate(), memberGate(), and memberNotification() methods,
	  check signatures

2010-03-18 12:52  david_nichols

	* fixed parse type checking to return lsit type if we are taking a
	  slice of a hash or object

2010-03-18 12:41  david_nichols

	* fixed typo

2010-03-18 12:22  david_nichols

	* fixed a bug copying some special class methods with builtin code

2010-03-18 11:52  david_nichols

	* fixed a problem resolving method variants in derived classes at
	  parse time

2010-03-18 09:39  david_nichols

	* updated program creation to copy all classes in all namespaces so
	  that changes to classes in child programs do not affect the
	  parent program; the previous solution with copy-on-write for
	  classes did not work correctly as class hierarchy pointers were
	  not updated when the classes were copied

2010-03-17 14:32  subik

	* improvements for highlighting; some kate crashes removed

2010-03-16 16:15  david_nichols

	* cosmetic update

2010-03-16 16:04  david_nichols

	* fixed another bug in delete blocker handling for the qt4 module

2010-03-15 20:03  david_nichols

	* added a couple of TODO points

2010-03-15 16:48  david_nichols

	* updated changelog

2010-03-15 16:48  david_nichols

	* fixed a bug in delete blocker handling for the qt4 module

2010-03-15 11:44  david_nichols

	* added an additional parameter when adding builtin code to new
	  APIs - code flags
	  extended the current parse option field to 64 bits and deprecated
	  old APIs using a 32-bit value

2010-03-15 08:56  subik

	* compile fix for non-single-compilation-unit

2010-03-12 13:39  david_nichols

	* fixed CANNOT-PROVIDE-FEATURE exception text

2010-03-12 13:26  david_nichols

	* added missing files

2010-03-12 13:22  david_nichols

	* todo edit and cosmetic edits in parser.ypp

2010-03-12 13:19  david_nichols

	* fixed 'delete' and 'remove' operator precedence
	  implemented extract operator, like splice except returns list
	  elements or characters extracted

2010-03-12 11:05  david_nichols

	* implemented QoreListNode::extract(), QoreString::extract(), and
	  QoreStringNode::extract() functions in preparation for the new
	  extract operator
	  reimplemented the splice operator with the new operator framework
	  and added more parse type checks

2010-03-12 08:20  david_nichols

	* removed deleted file from list

2010-03-12 08:19  david_nichols

	* minor compile fixes

2010-03-11 17:21  david_nichols

	* made delete an operator instead of a statement; corrected
	  inconsistent behavior of the delete operator; no longer shortens
	  the list when deleting the last element; implemented the "remove"
	  operator, which is like delete but does not run object
	  destructors and returns the value removed from the lvalue
	  expression

2010-03-11 11:17  david_nichols

	* fixed incorrect type information for some XML functions that can
	  return NOTHING, fixed a bug in checking for access to private
	  classes at runtime

2010-03-11 10:37  david_nichols

	* applied hard typing to FtpClient::get() and FtpClient::put() and
	  tagged these methods with QDOM_FILESYSTEM

2010-03-10 16:14  david_nichols

	* use emacs qore mode, not perl mode

2010-03-10 15:51  david_nichols

	* applied hard typing to the SSLCertificate class
	  fixed a bug in SSLCertificate::getInfo()
	  fixed a bug in SSLCertificate::getSignature()
	  applied hard typing to the SSLPrivateKey class
	  added tests for SSLCertificate and SSLPrivateKey classes to
	  test.q
	  updated SSLPrivateKey::constructor() to accept string data
	  (private key in PEM format) and binary data (private key in DER
	  format)

2010-03-10 13:51  david_nichols

	* fixed calling builtin method variants when a user variant
	  overloads the method in a subclass

2010-03-10 11:50  david_nichols

	* implemented new APIs for executing user method variants from
	  external modules, particularly when re-implementing pure virtual
	  c++ functions in Qore (as with the qt4 module)

2010-03-09 16:37  david_nichols

	* added QoreClass::recheckBuiltinMethodHierarchy() function

2010-03-09 16:18  david_nichols

	* bug fixes with variant matching in base classes

2010-03-09 12:18  david_nichols

	* updated variant matching to check class hierarchy when matching
	  method variants --This line, and those below, will be ignored--
	  
	  M trunk/CHANGELOG
	  M trunk/lib/Function.cpp
	  M trunk/lib/VarRefNode.cpp
	  M trunk/lib/QoreClass.cpp
	  M trunk/lib/FunctionCallNode.cpp
	  M trunk/include/qore/intern/QoreClassIntern.h
	  M trunk/include/qore/intern/BuiltinFunction.h
	  M trunk/include/qore/intern/FunctionCallNode.h
	  M trunk/include/qore/intern/Function.h
	  M trunk/TODO

2010-03-09 09:29  david_nichols

	* fixed transactional participation in setting the empty public
	  member list flag

2010-03-09 09:19  david_nichols

	* updated getWord32() for hard typing, added the following
	  functions supporting only hard types (with string and binary
	  arguments for the data pointer): get_byte(), get_word_16(),
	  get_word_32(), get_word_64()

2010-03-08 16:30  david_nichols

	* added new API for checking type compatibility with classes in
	  externally-implemented types

2010-03-08 15:43  david_nichols

	* added gedit syntax highlighting file for qore by malatesa

2010-03-08 15:38  david_nichols

	* implemented support for empty public member declarations in a
	  class (i.e.: public {}) to mean all members are private

2010-03-05 17:18  david_nichols

	* fixed a bug with the new overloaded abs() function

2010-03-05 12:37  david_nichols

	* added perl-based qore-mode for emacs

2010-03-04 16:31  david_nichols

	* added typeInfoHasType() function

2010-03-04 14:12  david_nichols

	* fixed references in user code so that any type can be
	  instantiated

2010-03-04 13:57  david_nichols

	* removed debugging output

2010-03-04 13:55  david_nichols

	* fixed a crash in parsing if a base class cannot be found

2010-03-04 10:30  david_nichols

	* fixed a bug saving type information for class members when the
	  types could be resolved immediately at parse time
	  fixed a bug where type info was not being passed back internally
	  at runtime for object members
	  fixed a bug where type info was not respected when converting an
	  lvalue to a hash as part of an lvalue expression

2010-03-04 09:27  david_nichols

	* removed support for assigning default values to operators that
	  modify lvalues when it would have no effect anyway

2010-03-04 09:23  david_nichols

	* implemented support for calling operators that modify lvalues on
	  lvalues with declared types that have not been assigned yet to be
	  automatically assigned with the default empty value and then
	  apply the operator

2010-03-03 14:07  david_nichols

	* implemented support for initializing untyped members in class
	  declarations

2010-03-03 14:05  david_nichols

	* implemented support for initializing untyped members in class
	  declarations

2010-03-03 09:05  david_nichols

	* eliminated string parsing in block comments, fixed a bug where
	  the parser was not terminated at EOF in a block comment

2010-03-02 20:22  david_nichols

	* fixed value conversion for typed parameters in builtin variants
	  (now shares common solution with user variants)

2010-03-02 07:19  david_nichols

	* added new API for qt4 module

2010-03-01 21:22  david_nichols

	* minor API updates to new APIs

2010-03-01 19:25  david_nichols

	* new APIs for modules with a new calling convention

2010-03-01 13:41  subik

	* new option --only-first-exception to suppress long parse time
	  exceptions output

2010-03-01 13:16  david_nichols

	* hard typing fixes and applications, added
	  QoreClass:add(Public|Private)Method() functions

2010-03-01 09:54  david_nichols

	* fixed another bug matching variants at parse time

2010-03-01 09:30  david_nichols

	* mostly cosmetic changes with one temporary fix to tolower()
	  variant matching

2010-03-01 05:43  david_nichols

	* fixed compatibility for some string functions with hard typing

2010-02-28 17:56  david_nichols

	* updated todo

2010-02-28 15:47  david_nichols

	* implemented ReferenceTypeInfo so that any value can be assigned
	  to a reference

2010-02-27 17:50  david_nichols

	* fixed a bug in inlist_hard() when an argument is 0; made a few
	  more hard typing applications

2010-02-26 14:59  david_nichols

	* fixed ambiguous variant signature matching with default arguments
	  against already committed variants; minor DBI fixes for older
	  drivers without the execRawSQL method

2010-02-26 14:30  david_nichols

	* applied a fix matching ambiguous signatures with default
	  arguments

2010-02-26 14:02  david_nichols

	* applied hard typing to lib/ql_string.cpp

2010-02-26 13:55  subik

	* last fixes for execRaw (shared code with exec)

2010-02-26 13:54  subik

	* docs for execRaw; massive fixes for valid XML

2010-02-26 12:26  david_nichols

	* implemented generic default argument handling for builtin and
	  user variants; partially applied hard typing to lib/ql_string.cpp

2010-02-26 11:20  david_nichols

	* implemented changes that allow QoreBigIntNode to be subclassed;
	  implemented BigIntTypeInfo to allow compatibility with types that
	  inherit QoreBigIntNode

2010-02-26 09:35  david_nichols

	* fixed typing in File methods that can also return NOTHING

2010-02-26 09:19  david_nichols

	* fixed name retrieval for external types and removed extraneous
	  invalid assert

2010-02-26 08:31  david_nichols

	* fixed bugs in checking default arguments

2010-02-25 17:07  david_nichols

	* implemented default argument values in user signatures
	  changed precedence of comma (',') operator to be more sane (long
	  overdue); applied workarounds to parser to maintain some
	  backwards-compatibility with the old broken precedence at the
	  statement level

2010-02-25 11:54  david_nichols

	* moved makeArgs() to QoreLib.cpp

2010-02-25 11:49  david_nichols

	* applied support for C++-like constructor syntax with new object
	  member declarations (i.e. private { Mutex $.m(); } )

2010-02-25 11:36  subik

	* fixes for non-single build

2010-02-25 11:31  david_nichols

	* fixed a memory leak in parsing public and private member lists
	  with the new syntax

2010-02-25 09:57  david_nichols

	* implemented C++-like syntax for creating new objects with a
	  variable declaration like: my Mutex $m()

2010-02-24 15:10  david_nichols

	* update hard typing support to not initialize variables and
	  members with a default value based on their type

2010-02-24 14:58  david_nichols

	* fixed type initialization to come after the default character
	  encoding is set

2010-02-24 14:40  david_nichols

	* updated invalid assert()s, updated test.q to use %require-types

2010-02-24 14:07  david_nichols

	* fixed global variable default value initialization (again), fixed
	  instantiation of parameters defined with type "reference",
	  updated test.q to use %require-types

2010-02-24 13:49  david_nichols

	* updated object += hash to check member access and throw an
	  exception if necessary

2010-02-24 13:41  david_nichols

	* fixed variant matching (again)

2010-02-24 12:33  david_nichols

	* assume code returns NOTHING if no return type is declared and
	  PO_REQUIRE_TYPES is set (i.e %require-types parse directive)

2010-02-24 12:25  david_nichols

	* fixed default value assignments for types generically

2010-02-24 12:06  david_nichols

	* fixed closure return type verification with %require-types; fixed
	  global variable default value assignment with hard types

2010-02-24 10:11  david_nichols

	* fixed list assignment type checking

2010-02-24 09:40  david_nichols

	* check for calls using callTypeInfo

2010-02-24 09:35  david_nichols

	* only raise a parse error for illegal access to private members if
	  there is not memberGate function

2010-02-24 07:35  david_nichols

	* hard typing fixes, do not throw parse type exceptions when
	  referencing undeclared members of a class with a memberGate()
	  method

2010-02-23 21:57  david_nichols

	* more hard typing fixes, applications

2010-02-23 16:49  david_nichols

	* updated user typing to allow for assigning already-resolved types
	  at parse time

2010-02-23 14:47  david_nichols

	* implemented type specifier "any" to mean any type may be assigned

2010-02-23 14:29  david_nichols

	* fixed parse type checking for hash - list operation

2010-02-23 14:20  david_nichols

	* applied hard typing to lib/QC_GetOpt.cpp and to split in
	  lib/ql_string.cpp; fixed variant matching bugs at parse and
	  runtime in Function.cc; do not raise a NON-EXISTENT-METHOD-CALL
	  warning at parse time if the class has a methodGate() method

2010-02-22 11:18  subik

	* fixes for non-single compilation unit build type

2010-02-22 09:34  subik

	* backward compatibility for DBI's execRaw

2010-02-21 20:58  david_nichols

	* circular reference test case

2010-02-21 20:17  david_nichols

	* minor fixes for cygwin, cosmetic changes

2010-02-21 16:33  david_nichols

	* made compilation of signal handling code optional

2010-02-21 16:00  david_nichols

	* implemented QORE_OPT_SIGNAL_HANDLING option and constant
	  HAVE_SIGNAL_HANDLING

2010-02-21 11:54  david_nichols

	* updates to allow qore to compile and run with Cygwin 1.7.1

2010-02-21 10:55  david_nichols

	* minor updates to enable Qore to compile with Cygwin (WIP)

2010-02-20 21:29  david_nichols

	* implemented %require-types parse directive (PO_REQUIRE_TYPES) to
	  require type information in all declarations; implemented
	  two-phase commit for global variables in the QoreProgram class

2010-02-19 20:58  david_nichols

	* fixed emacs tab mode directive

2010-02-18 17:36  david_nichols

	* fixed global variable initialization according to default value
	  of its type

2010-02-18 09:40  david_nichols

	* updated the Queue class documentation to clarify what a 0
	  argument means with Queue::pop() and Queue::get()

2010-02-17 13:26  david_nichols

	* fixed a bug tracking thread call stacks

2010-02-17 12:39  david_nichols

	* fixed a bug setting the program context for imported functions

2010-02-16 09:44  david_nichols

	* fixed a bug where if local variables were used in a reference
	  expression with the background operator, whenever the reference
	  was accessed in the called code a crash would result

2010-02-15 15:03  david_nichols

	* added emacs tags to header files to turn on c++ mode and disable
	  tabs; renamed all C++ source files to *.cpp to make porting to
	  windows a little easier

2010-02-15 13:29  david_nichols

	* added warning constants and documented warning masks in Program
	  methods

2010-02-15 12:39  david_nichols

	* updated incorrect examples of format_date() with argument
	  reversed

2010-02-14 07:39  subik

	* implementation of DB's execRaw method. TODO: docs

2010-02-14 06:20  david_nichols

	* finished adding hard typing to xml functions in lib/ql_xml.cc

2010-02-13 21:07  david_nichols

	* started adding hard typing to xml functions in lib/ql_xml.cc

2010-02-13 12:08  david_nichols

	* minor fixes matching variants and assigning values to references

2010-02-12 18:05  david_nichols

	* fixed a bug in user variant execution that left local variables
	  on the stack after an exception when setting up the user code

2010-02-12 14:10  david_nichols

	* variant matching fixes and additional APIs

2010-02-12 10:47  david_nichols

	* fixed internal APIs and added supoprt for caching lookup maps
	  from externally-implemented types and type information

2010-02-12 10:20  david_nichols

	* fixed bugs in flexible/extensible type matching support

2010-02-12 09:51  david_nichols

	* updates to address warnings and compile errors with the SunPro
	  compiler

2010-02-12 09:29  david_nichols

	* fixed call stack reporting when exceptions are raised

2010-02-12 09:21  david_nichols

	* removed incorrect optimization in user function execution that
	  corrupted argument lists

2010-02-11 18:07  david_nichols

	* reimplemented parse type support and fixed bugs in the new
	  implementation

2010-02-11 12:12  david_nichols

	* flexible type implementation (in progress)

2010-02-11 08:48  david_nichols

	* fine-tuned overload patching at parse and runtime to allow for
	  more flexibility and automatic type conversions with partial
	  matches

2010-02-10 15:48  david_nichols

	* implemented partial matches and best match checking; fixed
	  several bugs in variant matching; fixed a bug calculating the
	  return type for the + operator at parse time

2010-02-10 11:35  david_nichols

	* width updated object member initialization to allow references to
	  $self; updated recursive reference error messages to provide more
	  information about the recursively-referenced data

2010-02-09 16:38  david_nichols

	* fixed a bug resolving type information with global vars

2010-02-09 15:19  david_nichols

	* added type information to math functions

2010-02-09 14:03  david_nichols

	* add class name to overload parse and runtime errors

2010-02-09 13:22  david_nichols

	* fix for base class constructor specifications without arguments

2010-02-09 10:05  david_nichols

	* streamlined user variant execution, fixed argument processing for
	  user variants

2010-02-08 15:59  david_nichols

	* fixed a bug in the new design related to unified user/builtin
	  function calling passing references to object members

2010-02-08 14:23  david_nichols

	* implemented check for illegal arguments to copy methods in self
	  calls ($.copy())

2010-02-08 14:11  david_nichols

	* implemented support for private constructors and catching invalid
	  instantiations with private constructors at parse and run time

2010-02-08 13:28  david_nichols

	* added a script for stage 2 parse errors

2010-02-08 13:26  david_nichols

	* fixed illegal runtime private copy method call detection

2010-02-08 12:45  david_nichols

	* fixed illegal private method call detection at parse time,
	  including illegal private copy method calls

2010-02-08 11:24  david_nichols

	* private copy method test

2010-02-07 16:35  david_nichols

	* updated links to qore home page

2010-02-05 19:06  david_nichols

	* added more information to some overloading and type errors

2010-02-05 17:54  david_nichols

	* implemented C++ iterators for QoreClass methods

2010-02-05 16:56  david_nichols

	* more API updates so type and variant information is accessible in
	  modules

2010-02-05 12:48  david_nichols

	* API updates to export type information for basic value types to
	  be used in modules

2010-02-04 12:14  david_nichols

	* fixed a small static memory leak on exit

2010-02-04 08:42  david_nichols

	* fixed a bug where File::open*() would reset the encoding given in
	  the constructor; overloaded methods in the File class for builtin
	  overloaded method testing

2010-02-03 19:20  subik

	* tags fixes

2010-02-03 17:53  david_nichols

	* added define for hard typing and overloading support

2010-02-03 17:26  david_nichols

	* fixed some minor bugs and warnings when compiling without
	  debugging

2010-02-03 15:23  david_nichols

	* fixed a bug setting the QoreClass has_delete_blocker flag

2010-02-03 15:18  david_nichols

	* bug fixes - reimplemented QoreMethod::isUser() and ::isBuiltin();
	  if all variants of a method are user variants, the former will
	  return true and the latter false, otherwise the reverse is
	  returned

2010-02-03 12:12  david_nichols

	* fixed a bug executing user copy methods

2010-02-03 11:24  david_nichols

	* massive internal updates for function and method overloading

2010-01-27 11:17  david_nichols

	* disabled symbol exporting; added safe_dslist<>::singular() and
	  ::plural() functions to tell if the list has one or more than one
	  element in it (constant time)

2010-01-26 17:07  david_nichols

	* added source location information to user parameter lists for
	  correct error reporting in parse exceptions; fixed 2 memory leaks
	  in the new hard typing code

2010-01-26 16:16  david_nichols

	* implemented AbstractFunctionSignature C++ class for consistent
	  handling of type information for all function types

2010-01-26 13:56  david_nichols

	* function reference and function call streamlining,
	  FunctionCallNode factoring and optimizations

2010-01-26 10:12  david_nichols

	* massive internal updates to streamline function, method, and call
	  implementations; fixed a bug processing arguments to in-object
	  method calls in the background operator; fixed a bug processing
	  arguments to static method calls in the background operator
	  (fixes also applied to the 0.7 branch)

2010-01-25 09:08  david_nichols

	* doc updates

2010-01-24 10:42  david_nichols

	* minor typo corrections and doc updates

2010-01-23 08:06  david_nichols

	* fixed line number reporting for type errors in initializer
	  expressions in public and private class member declarations

2010-01-23 07:40  david_nichols

	* added minumum required qore version

2010-01-22 13:11  david_nichols

	* fixes for method data type information handling

2010-01-22 10:12  david_nichols

	* fixed a parsing bug created in a recent commit regarding parsing
	  function return types

2010-01-22 10:11  david_nichols

	* pure formatting changes

2010-01-22 10:03  david_nichols

	* implemented type enforcing at parse time for builtin
	  constructors, added type information to a small subset of classes
	  for testing

2010-01-21 15:17  david_nichols

	* more APIs for adding class methods with type information

2010-01-21 14:28  david_nichols

	* new APIs for pre-defined type lists for type information (will be
	  required by the libsmoke-based qt4 module, for example)

2010-01-21 13:33  david_nichols

	* API tuning for type information for builtin methods, added type
	  information for all File class methods

2010-01-21 10:28  david_nichols

	* infrastructure changes and new QoreClass APIs for setting return
	  type and parameter type information with builtin class methods;
	  added C++ functions: QoreClass::addMethodExtended() and
	  QoreClass::addMethodExtended2()

2010-01-20 16:22  david_nichols

	* builtin function and method return type and parameter type
	  handling

2010-01-20 13:50  david_nichols

	* infrastructure changes to accommodate consistent parameter
	  handling with user and builtin types

2010-01-20 11:29  david_nichols

	* fixed symbol visibility in QoreTypeSafeReferenceHelper class

2010-01-20 11:04  david_nichols

	* updated copyright statements to reflex 2010; added new library
	  API: BuiltinFunctionList::add2() to allow for setting the return
	  type and parameter types and default parameter values for builtin
	  functions

2010-01-19 14:32  david_nichols

	* fixed a bug in the TempEncodingHelper::set() documentation (bug
	  was actually in the implementation, but the implementation has
	  not been fixed in order to preserve source compatibility)

2010-01-06 20:00  david_nichols

	* added expanatory text about soft comparisons with the switch/case
	  statement

2009-12-10 13:31  david_nichols

	* fixed an issue with inialization order when checking types at
	  parse time

2009-12-10 12:45  david_nichols

	* fixed parse-time type checking of object member references

2009-12-09 15:10  david_nichols

	* functional implementation of object member initialization and
	  type declarations at object construction time; new member
	  declaration syntax

2009-12-09 12:48  david_nichols

	* initial (non-functional) implementation of object member
	  initialization at construction time; re-worked public and private
	  member declarations with types

2009-12-07 15:07  david_nichols

	* ensure qore version code does not start with a leading zero so
	  it's not interpreted as an octal character

2009-12-07 10:04  david_nichols

	* updated to reflect that 0.8.0 is the next targeted release

2009-12-04 16:02  david_nichols

	* removed old file from makefile

2009-12-04 15:30  david_nichols

	* cleaned up builtin function and builtin method implementation
	  (somewhat) in preparation for hard typing support in builtin code

2009-12-03 15:04  david_nichols

	* fixed public/private member verification during 2nd stage parsing
	  in class hierarchies

2009-12-03 11:14  david_nichols

	* moved all private methods of QoreProgram into the private class
	  implementation

2009-12-03 10:08  david_nichols

	* implemented member checking for object slices; moved all private
	  methods of QoreObject into the private class implementation

2009-12-02 21:04  david_nichols

	* corrected typo in comment

2009-12-02 17:09  david_nichols

	* implemented public class members and parse-time and run-time
	  checking and enforcement; fixed a bug where if a program was
	  running in one thread, other threads were allowed to execute
	  parse actions in the running program that could change data
	  structures in use by the running program, which could cause a
	  crash;
	  fixed checking key encoding when making hash and object slices

2009-12-01 16:58  david_nichols

	* initial support for the 'public' keyword and storing type
	  declarations for private class members

2009-12-01 15:43  david_nichols

	* return nothingTypeInfo as the output type for local variable
	  declarations without any type information if not assigning to
	  allow more programming errors to be caught at parse time

2009-12-01 13:20  david_nichols

	* implemented instantiating variables with default values when
	  defined with hard types of simple types; enforced requiring
	  assignments for variables defined as complex types

2009-11-30 16:26  david_nichols

	* implemented parse-time type checking for the rest of operators
	  that need it at the moment and also implemented invalid-operation
	  warnings where appropriate

2009-11-30 15:51  david_nichols

	* implemented parse-time type checking for the splice and unshift
	  operators

2009-11-30 15:32  david_nichols

	* implemented return value type checking at parse time

2009-11-30 12:55  david_nichols

	* fixed a bug in setting global variable type info

2009-11-30 12:45  david_nichols

	* implemented UserFuntion::setupCall() so code to set up arguments
	  and the argv variable can be shared between UserFunction::call()
	  and UserFunction::callConstructor()

2009-11-30 12:03  david_nichols

	* added call-reference/closure call parse-time type checking

2009-11-30 11:48  david_nichols

	* fixed a bug returning the last builtin data type ID

2009-11-30 10:21  david_nichols

	* added parse-time type checking to the '?:', shift, pop, and push
	  operators

2009-11-30 09:58  david_nichols

	* implemented 'invalid-operation' warning to warn when an
	  expression always returns NOTHING, for example; added parse-time
	  type checking to the '.', '[]', and 'keys' operators to raise the
	  INVALID-OPERATION warning whenever it's clear at parse time that
	  the given expressions will always return NOTHING

2009-11-28 17:47  david_nichols

	* implemented parse-time checks for hard typing in *= and /=
	  operators

2009-11-28 10:37  david_nichols

	* implemented parse-time checks for hard typing in -= operator

2009-11-28 08:23  david_nichols

	* implemented parse-time checks for hard typing in += operator

2009-11-28 06:11  david_nichols

	* fixed a memory leak in runtime hard type exceptions in lvalue
	  assignments; fixed parse time hard type checking with operators
	  that change lvalues (++, --, &=, etc)

2009-11-27 16:48  david_nichols

	* minor update to script

2009-11-27 16:46  david_nichols

	* added scratch testing script for testing run-time typing errors

2009-11-27 16:34  david_nichols

	* implemented more parse-time hard typing checks for operators

2009-11-27 09:47  david_nichols

	* implemented a new warning: "non-existent-method-call" - this is
	  for method calls to expressions that evaluate to a class known at
	  parse time where the method cannot be found. This could be a
	  valid call, because the call could only be made on an object of a
	  subclass that implements the method, so to allow the potential
	  error to be reported but to also allow for
	  backwards-compatibility only a warning is issued; set a default
	  warning mask to enable some warnings; in the past some warnings
	  that almost always (or always, in the case of the
	  "unknown-warning" warning) indicated an error were suppressed by
	  default. The new default warning mask enables the following
	  warnings: "unknown-warning" (always a mistake),
	  "unreachable-code" (normally an unintentional error),
	  "non-existent-method-call"

2009-11-26 09:20  david_nichols

	* implemented optional hard type support for global variables,
	  parse-time checks, etc

2009-11-25 17:09  david_nichols

	* implemented "returns" keyword for declaring return types for
	  code, currently only partially implemented for functions and
	  class methods at parse time, implementation pending for runtime,
	  closures, etc: ex: sub func(bool $b, int $i, Thread::Mutex $m)
	  returns string {}

2009-11-25 14:09  david_nichols

	* fixed memory bug in CryptoHelper - removed unnecessary and
	  incorrect string termination code; fixed a harmless bug in
	  TempEncodingHelper to remove a message from valgrind (although
	  this bug could cause no harm)

2009-11-25 13:51  david_nichols

	* suppressed debugging statements and use
	  QoreListNodeParseInitHelper() in QoreListNode::parseInit() to
	  ensure consistency

2009-11-25 11:28  david_nichols

	* added type info to constants and constant resolution

2009-11-24 17:13  david_nichols

	* more progrss on hard typing implementation

2009-11-24 14:54  david_nichols

	* more hard typing support implementation; better call argument
	  checking at parse time, operator infrastructure changes to allow
	  for each operator to do parse-time type checking

2009-11-23 16:59  david_nichols

	* more hard type support

2009-11-23 15:35  david_nichols

	* function argument type declaration fixes

2009-11-23 13:53  david_nichols

	* progress on function parameter typing implementation

2009-11-23 09:56  david_nichols

	* more hard typing support implementation; initial support for
	  defining argument types for functions

2009-11-23 08:37  david_nichols

	* initial support for hard typing in function arguments (not yet
	  working)

2009-11-22 16:47  david_nichols

	* more hard typing support implementation; some checks are working
	  at parse and run time

2009-11-22 07:20  david_nichols

	* updates toward hard typing support for local variables - still
	  incomplete

2009-11-22 06:30  david_nichols

	* updated module API to 0.9, implemented minimum recommended module
	  api and also set to 0.9 to be used with 'qore --module-api' so
	  that modules built with this version of qore claim compatibility
	  with the new API because, even though qore will maintain binary
	  compatibility with earlier module apis (down to 0.5), by default
	  even old modules will now use new features supporting optional
	  hard typing when compiled with headers from this version of qore;
	  updated library version to 9 (libqore 5.4)

2009-11-22 06:03  david_nichols

	* updated configure to assume 64-bit build if host_cpu = "amd64"

2009-11-20 15:57  david_nichols

	* major updates towards optional hard typing support

2009-11-19 16:41  david_nichols

	* removed commented-out function and fixed formatting

2009-11-19 16:40  david_nichols

	* eliminated the internal function "process_node()" and made parse
	  tree node parse initialization regular; started implementing
	  support for optional hard typing

2009-11-18 14:56  david_nichols

	* updated to 0.8.0, fixed handling in the Datasource and
	  DatasourcePool classes when auto-reconnects fail (connection
	  aborted handling) - now the Datasource class tags the connection
	  as aborted and closes the connection when
	  Datasource::connectionAborted() is called by the DBI drivers, and
	  the DatasourcePool class correctly returns the Datasource to the
	  pool. Additionally, the Datasource class will not execute any
	  action on the Datasource once the connection has been aborted.
	  The flag is cleared when the connection is opened again.

2009-11-18 10:18  david_nichols

	* updated library revision

2009-11-15 17:53  david_nichols

	* fixed a rare race condition in object constructors when an object
	  launches threads in the object and then the constructor throws an
	  exception afterwards; removed an extraneous reference and
	  dereference in objects when launching new threads in objects

2009-11-14 07:41  david_nichols

	* minor doc updates

2009-11-14 07:28  david_nichols

	* fixed bugs de/serializing "int" and "short" from negative numbers

2009-11-13 08:34  david_nichols

	* clarified Mutex::trylock()

2009-11-12 13:26  david_nichols

	* updated documentation for Coutner::constructor() and documented
	  the optional argument

2009-11-10 13:43  david_nichols

	* fixed a bug when a builtin class tries to access private data of
	  an object that's already been deleted; now an appropriate
	  exception is thrown

2009-11-08 16:15  david_nichols

	* fixed a bug in the FtpClient class that caused the connection to
	  never get established

2009-11-06 14:31  david_nichols

	* fixed a bug executing builtin functions if an exception is raised
	  evaluating the arguments

2009-11-06 12:57  david_nichols

	* updated release-notes for in-progress 0.7.7. release, updated
	  changelog

2009-11-06 12:56  david_nichols

	* fixed a reference counting bug in callObjectMethodArgs() that
	  could lead to a crash if a list is passed as the 3rd argument

2009-11-06 12:12  david_nichols

	* updated to 0.7.7 for next release

2009-11-03 16:23  david_nichols

	* fixed a typo

2009-11-02 13:15  david_nichols

	* updated is_writable() and is_readable() to always return True if
	  called by effective UID 0 (root)

2009-11-02 12:19  david_nichols

	* moved setting the in destructor flag to after the check for a
	  class deletion blocker

2009-11-02 12:04  david_nichols

	* updated docs

2009-10-31 12:53  david_nichols

	* updated sleep() to continue sleeping for the remaining time if
	  interrupted by a signal

2009-10-31 12:14  david_nichols

	* updated split() to work on binary objects just like on strings,
	  but will return a list of binary objects split by the marker

2009-10-31 11:50  david_nichols

	* *) BUF FIX: changed decompression routines to a string to
	  preserve binary data, especially trailing nulls
	  *) BUG FIX: fixed C++ QoreString constructor when taking
	  ownership of a string buffer to ensure that the buffer is null
	  terminated when the allocated buffer is exactly equal to the
	  string length

2009-10-30 08:19  david_nichols

	* updated docs and changelog

2009-10-30 08:17  david_nichols

	* fixed bug in debugging statement

2009-10-30 08:16  david_nichols

	* use gnutar to package releases on darwin to avoid picking up
	  useless resource files

2009-10-26 15:51  david_nichols

	* fixed a race condition in deleting objects by marking objects
	  atomically as inside destructor

2009-10-26 14:07  david_nichols

	* cosmetic updates

2009-10-26 14:05  david_nichols

	* updated httpserver, handler code, and soap and wsdl code

2009-10-25 06:48  david_nichols

	* new Datasource methods and cosmetic changes in QoreHashNode

2009-10-25 06:47  david_nichols

	* added new functions to get the std::string values stored in the
	  object

2009-10-22 09:12  david_nichols

	* use File::open2() to see any errors immediately

2009-10-21 12:24  david_nichols

	* BUG FIX: fixed scanner to ignore quoted text in comments (i.e.
	  "*/" will be ignored)
	  BUG FIX: updated the Socket class implementation to retry
	  connect(), accept(), recv(), send(), and select()
	  (Socket::isDataAvailable(), Socket::connect() with timeout, etc)
	  if interrupted by a signal

2009-10-20 12:05  david_nichols

	* fixed accept() error handling

2009-10-20 12:03  david_nichols

	* fixed set_signal_handler() to accept a closure as per
	  documentation; fixed internal C++ library function
	  test_funcref_param() to return a value for call references and
	  closures; updated socket code to retry connect(), accept(),
	  recv(), and send() if interrupted by a signal; updated file code
	  to retry read(), write() and fcntl() with F_SETLKW if interrupted
	  by a signal; updated select() in socket and file code to retry if
	  interrupted by a signal

2009-10-19 09:02  david_nichols

	* mostly cosmetic changes + some additional debugging support and a
	  couple of convenience functions

2009-10-16 15:11  david_nichols

	* added object private access tests and memberGate() test

2009-10-16 14:57  david_nichols

	* updated release notes with latest bug fix

2009-10-16 14:55  david_nichols

	* fixed broken access to private members of an object outside the
	  class; before it was possible to delete and reassign private
	  members from outside the class which should have been illegal

2009-10-16 12:50  david_nichols

	* fixed a bug in qget and added timestamps to events with -vv

2009-10-13 09:31  david_nichols

	* fixed return value when libxml2 features are missing

2009-10-12 14:37  david_nichols

	* fixed a typo in the C++ code in the File::open2() method that
	  could cause a crash - fixed docs for parseURL() function

2009-10-12 07:57  david_nichols

	* updated sending HTTP headers to send a single header multiple
	  times if the value is a list

2009-10-12 07:40  david_nichols

	* added constants to indicate to clients that Xml* Qore classes are
	  available

2009-10-12 07:33  david_nichols

	* updated XmlReader methods to throw exceptions on XML parsing
	  errors to be consistent with other methods

2009-10-11 18:59  david_nichols

	* made it possible to call printd() from non-qore threads; added
	  is_valid_qore_thread() library call to API

2009-10-10 07:05  david_nichols

	* compile fixes for libxml2 without schema validation

2009-10-10 06:14  david_nichols

	* fixed compiling on systems without xmlTextReaderSchemaValidate();
	  updated option docs

2009-10-09 11:22  david_nichols

	* added updated note about case == support for soft comparisons

2009-10-09 11:21  david_nichols

	* added == support for case expressions so soft conversions may be
	  used

2009-10-08 14:30  david_nichols

	* updated release notes for upcoming 0.7.6 release

2009-10-08 11:13  david_nichols

	* documented decode_url(); added information about informational
	  headers returned by QoreSocket::readHTTPHeader(); fixed the
	  situation where an HTTP header is repeated to have all values
	  returned as a list under than name in the hash returned

2009-10-08 10:40  david_nichols

	* updated internal XML APIs; updated XmlReader class; added
	  documentation for XmlReader

2009-10-07 10:06  david_nichols

	* added new constant info and fixed methods

2009-10-07 09:27  david_nichols

	* added const to prototype

2009-10-06 13:37  david_nichols

	* fixed an XML-RPC parsing bug due to a side-effect in a debugging
	  statement; added XML node type constants and NodeTypeMap constant
	  hash

2009-10-06 12:54  david_nichols

	* fixed method counting bug in last commit

2009-10-06 12:45  david_nichols

	* fixed a potential race condition in calling
	  QoreClass::numMethods() and QoreClass::numStaticMethods() (C++
	  functions); added QoreClass::numUserMethods() and
	  QoreClass::numStaticUserMethods() (C++ functions)

2009-10-05 15:32  david_nichols

	* updated documentation; added XmlNode docs

2009-10-05 14:48  david_nichols

	* added easier bbcode-style link support to text

2009-10-05 13:07  david_nichols

	* compile fixes for libxml2 2.6.0

2009-10-05 12:46  david_nichols

	* updated configure to check for minimum libxml2 version 2.6.0

2009-10-05 12:26  david_nichols

	* updated configure to check for more required features of libxml2

2009-10-04 18:37  david_nichols

	* doc and header updates

2009-10-04 15:17  david_nichols

	* implemented HAVE_PARSEXMLWITHRELAXNG constant and Qore library
	  option; added configure checks for new libxml2 options

2009-10-04 14:59  david_nichols

	* reverted last broken fix for libxml2 define check

2009-10-04 14:51  david_nichols

	* fixed defines for newer libxml2 functions

2009-10-04 14:24  david_nichols

	* corrected typo

2009-10-04 14:23  david_nichols

	* updated to compile with libxml2 without
	  xmlNodeChildElementCount()

2009-10-04 14:18  david_nichols

	* fixes for versions of libxml2 without xmlLastElementChild(), etc

2009-10-04 13:47  david_nichols

	* added XmlNode::getXML() method

2009-10-04 11:25  david_nichols

	* implemented parseXMLWithRelaxNG() and
	  parseXMLAsDataWithRelaxNG(); implemented
	  XmlDoc::validateRelaxNG() and XmlDoc::ValidateSchema();
	  implemented many XmlReader methods

2009-10-04 08:45  david_nichols

	* fixed a bug setting the character encoding in strings produced
	  with makeXMLFragment() and makeFormattedXMLFragment() when the
	  default character encoding is not UTF8; more XML cleanups and
	  added XmlReader class

2009-10-03 20:10  david_nichols

	* reorganized and cleanup up internal XML code; added XmlDoc and
	  XmlNode classes with initial XPath support

2009-10-03 12:57  david_nichols

	* added support for system objects using the new object method
	  calling convention

2009-09-30 11:32  david_nichols

	* move NDEBUG definition to library CPP flags to supress assert()s
	  in header files for non-debugging builds

2009-09-30 10:58  david_nichols

	* updated revision

2009-09-30 10:45  david_nichols

	* implemented adding informational headers when receiving HTTP
	  messages: _qore_orig_content_type (for the original content-type
	  line before processing), _qore_multipart (if the content-type
	  line indicates a multipart message), _qore_multipart_boundary
	  (for the multipart boundary string), _qore_multipart_start (if
	  there is a start= value in the content-type string)
	  fixed concatenation of binary strings
	  fixed split() to work on binary data

2009-09-29 16:10  david_nichols

	* added info about setting the LEX environment variable before
	  running configure

2009-09-29 07:42  david_nichols

	* fixed typo

2009-09-29 05:20  david_nichols

	* updated flex test

2009-09-24 10:42  david_nichols

	* implemented binary concatentation support in the += and +
	  operators

2009-09-24 10:18  david_nichols

	* added the binary_to_string() function to explicitly convert a
	  binary value to a string value

2009-09-24 08:01  david_nichols

	* updated http, xmlrpc, and soap support

2009-09-23 14:18  david_nichols

	* removed inline keyword and made cosmetic changes

2009-09-23 13:57  david_nichols

	* fixed crash in parsing when a class with no parent classes
	  references a base class method of an existing class

2009-09-23 11:37  david_nichols

	* added missing changelog entry

2009-09-23 11:36  david_nichols

	* fixed method resolution for in-object method calls when the
	  target method is static

2009-09-23 11:22  david_nichols

	* added debugging code

2009-09-22 10:54  david_nichols

	* updated -= operator to operate on objects in the same manner as
	  hashes

2009-09-22 10:47  david_nichols

	* updated rpm to release 2

2009-09-21 10:30  david_nichols

	* updated configure to select 64-bit compile mode by default on
	  Darwin 10 or higher with i386

2009-09-21 08:33  david_nichols

	* made it so that static methods can be called with normal method
	  call syntax again to maintain backwards compatibility with
	  previous versions of Qore

2009-09-17 08:49  david_nichols

	* renamed PRWLock to QoreRWLock and made it a public class

2009-09-16 09:20  david_nichols

	* fixed static method calls at the top level of a program

2009-09-15 15:09  david_nichols

	* added new methods to QoreClass; made "inherits" a possible
	  function or method name

2009-09-15 14:29  david_nichols

	* fixed class implementation so that static and non-static methods
	  have indepedent name lists; so that a class can now implement a
	  non-static and a static method with the same name

2009-09-15 07:44  david_nichols

	* fixed feature output

2009-09-10 08:49  david_nichols

	* fixed type comparisons with external types

2009-09-09 13:34  david_nichols

	* improved error message and changed printf with puts to avoid
	  warnings with g++ 4.2

2009-09-08 11:01  david_nichols

	* added missing documentation for FtpClient::getAsBinary() and
	  FtpClient::getAsString()

2009-09-08 10:35  david_nichols

	* fixed configure to ensure compiling in 32-bit mode on Darwin/OSX
	  if 32-bit mode is selected

2009-09-02 11:48  david_nichols

	* added support for new generic destructor calling convention

2009-08-31 09:22  david_nichols

	* added inline function

2009-08-28 09:08  david_nichols

	* added the rename() function and updated docs

2009-08-26 14:14  david_nichols

	* updated spec file to reflect module-api 0.8

2009-08-26 13:35  david_nichols

	* implemented HTTPClient::isConnected() method

2009-08-24 10:45  subik

	* fixed ARGV and QORE_ARGV init to avoid NOTHING value

2009-08-23 07:22  david_nichols

	* updated changelog and headers for last commit

2009-08-23 07:22  david_nichols

	* added new copy constructor calling convention that includes a
	  constant reference to the QoreClass being instantiated

2009-08-21 09:00  david_nichols

	* fixed QoreClass::setConstructor2()

2009-08-21 08:27  david_nichols

	* implemented missing function

2009-08-21 07:41  david_nichols

	* added new constructor calling convention that includes a constant
	  reference to the QoreClass being instantiated

2009-08-19 09:10  david_nichols

	* added convenience functions for getting the value of a hash key
	  or object member as an int64

2009-08-19 09:09  david_nichols

	* fixed typo in inline function name

2009-08-18 11:16  david_nichols

	* fixed DatasourcePool class handling of database disconnections
	  when automatic reconnect fails

2009-08-18 10:28  david_nichols

	* fixed exception string - removed debugging tag

2009-08-18 08:53  david_nichols

	* added new generic calling convention for builtin static methods
	  including a const pointer to the QoreMethod being called

2009-08-18 08:24  david_nichols

	* fixed Socket::connect() with timeout

2009-08-12 08:45  david_nichols

	* added a new generic method calling convention adding a const
	  QoreMethod& argument - updated module api to 0.8 library to 5.3.0

2009-08-10 16:49  subik

	* setsid() implemented

2009-07-20 13:16  david_nichols

	* added opensuse 11.2 detection to spec file, fixed rhel detection
	  in spec files, updated configure.ac to work with older versions
	  of autotools

2009-07-20 08:54  david_nichols

	* added static method TermIOS::getWindowSize() to get the current
	  size of the terminal, returns a hash with "rows" and "columns"
	  keys; bug fix: added QDOM_TERMINAL_IO to TermIOS class

2009-07-18 07:45  david_nichols

	* fixed setting "%dist"

2009-07-18 07:13  david_nichols

	* updates to allow to build with older auto tools and to detect
	  rhel versions in the spec file

2009-07-16 09:42  david_nichols

	* fixed a bug parsing empty value elements in XML-RPC arrays; i.e.:
	  <value/>

2009-07-15 08:46  david_nichols

	* fixed a bug waiting on a Condition variable when thread read lock
	  is held by multiple threads (for RWLock); fixed a bug calculating
	  the time offset for waiting on a Condition object

2009-07-15 06:43  david_nichols

	* updated library revision

2009-07-14 17:54  david_nichols

	* fixed a bug setting the exception location when throwing thread
	  resource exceptions when shutting down the qore library; the bug
	  fix is to clear the program location first

2009-07-14 16:11  david_nichols

	* fixed a crashing bug when a Condition object waits on a RWLock
	  with the read lock held

2009-07-14 16:10  david_nichols

	* fixed millisecond formatting with format_date()

2009-07-14 16:10  david_nichols

	* added millisecond formatting description for format_date()

2009-07-13 12:26  david_nichols

	* updated release to 0.7.6 for next release

2009-07-13 12:24  david_nichols

	* tagged 0.7.5 release in changelog

2009-07-13 12:24  david_nichols

	* fixed typo in table name

2009-07-13 08:53  david_nichols

	* updated version number in man page- man page is woefully out of
	  date still

2009-07-13 08:21  david_nichols

	* fixed a bug in the HTTPClient class where the connection was not
	  flagged as closed when an error occurred that indicated that the
	  client had closed the connection

2009-07-13 07:42  david_nichols

	* doc updates

2009-07-13 07:42  david_nichols

	* added assert()s to catch the error where object private data is
	  saved with a 0 value

2009-07-02 14:24  david_nichols

	* fixed another bug showing the latest module api in the qore
	  binary

2009-07-02 08:26  david_nichols

	* corrected library version

2009-07-02 08:10  david_nichols

	* disabled static library by default

2009-07-01 15:42  david_nichols

	* made some APIs public in new interface

2009-07-01 08:24  david_nichols

	* added the module directory as the "ModuleDir" key to the hash
	  output of get_qore_library_info()

2009-07-01 06:15  david_nichols

	* fixed typo

2009-07-01 06:13  david_nichols

	* fixed a bug in Datasource::close(); with debugging enabled, it
	  would trigger an assert, without debugging, would do nothing at
	  all

2009-06-29 07:26  david_nichols

	* fixed PlatformOS and PlatformCPU keys in return value of
	  qore_get_library_info()

2009-06-25 13:54  david_nichols

	* bug fixes for datasource port support

2009-06-25 13:14  david_nichols

	* added NUMERIC and DECIMAL constants to the SQL namespace for
	  binding types

2009-06-25 13:13  david_nichols

	* added an optional port number to datasources, that DBI drivers
	  can use if they support module API 0.7 or above; modified the
	  parseDatasource() function to support parsing port numbers; added
	  or modified the following methods to existing classes:
	  + Datasource::constructor(): added support for a port argument
	  + Datasource::setPort(): new method
	  + Datasource::getPort(): new method
	  + DatasourcePool::constructor(): added support for a port
	  argument
	  + DatasourcePool::getPort(): new method

2009-06-24 10:48  david_nichols

	* fixed another deadlock in running destructors where a member is
	  deleted that is an object, where that object's destructor
	  references the parent object

2009-06-23 21:03  david_nichols

	* fixed a bug reporting the latest module API version; should use
	  library value instead of reporting the value from the header file
	  updated module API to 0.7, updated library version to 5.2, added
	  new QoreObject::externalDelete() function to handle the situation
	  when object private data is deleted externally

2009-06-23 13:54  david_nichols

	* fixed a deadlock when an object deletes a member and the member
	  tries to access the parent object in the member's destructor

2009-06-23 09:02  david_nichols

	* always check current directory of script first (if known) when
	  looking for %include files if the path is not absolute

2009-06-22 11:58  david_nichols

	* added checks to the scanner to give better error messages when
	  trying to include a directory or other non-file

2009-06-22 11:29  david_nichols

	* updated version to 0.7.5

2009-06-22 11:26  david_nichols

	* updated release to 0.7.4

2009-06-08 10:43  david_nichols

	* udpated changelog and fixed broken link in docs

2009-06-08 10:40  david_nichols

	* *) added new HTTPClient methods for manipulating the TCP_NODELAY
	  setting:
	  + HTTPClient::setNoDelay()
	  + HTTPClient::getNoDelay()
	  *) now the XmlRpcClient and JsonRpcClient constructors accept an
	  optional
	  second argument that, when True, will inhibit the immediate
	  connection
	  attempt on the socket and instead allow the socket connections to
	  be either
	  manually established or established on demand with the first
	  request
	  *) updated docs

2009-06-08 07:44  david_nichols

	* disabled documenting class members without documentation, added
	  some missing doxygen documentation

2009-06-04 10:06  david_nichols

	* updated to current version number

2009-06-04 05:48  david_nichols

	* fixed %= with a modula operand of 0 to set the lvalue to 0,
	  updated release notes

2009-06-04 05:48  david_nichols

	* disable the static library by default

2009-06-03 10:39  subik

	* force doxygen to include all (undocumented) public stuff

2009-06-03 10:34  david_nichols

	* missing comment

2009-06-01 13:49  david_nichols

	* fixed exception strings when datasource modules cannot be loaded

2009-05-28 08:53  david_nichols

	* fixed library version

2009-05-28 08:51  david_nichols

	* fixed dependencies for sles 10 and before

2009-05-12 16:28  david_nichols

	* fixed localtime() and no argument to return the current date and
	  time as documented; implemented now_ms() to return the current
	  date and time to the millisecond resolution; updated docs

2009-05-12 16:27  david_nichols

	* cosmetic fixes

2009-05-08 12:58  david_nichols

	* updated release notes

2009-05-08 10:29  david_nichols

	* minor fixes and cosmetic changes

2009-05-08 08:28  david_nichols

	* set TCP_NODELAY on incoming sockets

2009-05-08 08:25  david_nichols

	* implemented the following new Socket methods:
	  + Socket::isWriteFinished(<timeout_ms>): for non-blocking writes
	  + Socket::setNoDelay(<boolean>): to set TCP_NODELAY
	  + Socket::getNoDelay(): returns value of TCP_NODELAY

2009-05-08 07:00  david_nichols

	* fixed a race condition that could cause a deadlock when calling
	  pthread_join() when Qore code calls "exit()" when multiple
	  threads are running

2009-05-08 06:17  david_nichols

	* non-functional changes

2009-05-07 12:51  david_nichols

	* implemented the following functions to allow for explicitly
	  specifying the encoding when serializing XML-RPC strings:
	  + makeXMLRPCCallStringWithEncoding()
	  + makeXMLRPCCallStringArgsWithEncoding()
	  + makeXMLRPCResponseStringWithEncoding()
	  + makeXMLRPCFaultResponseStringWithEncoding()
	  + makeFormattedXMLRPCCallStringWithEncoding()
	  + makeFormattedXMLRPCCallStringArgsWithEncoding()
	  + makeFormattedXMLRPCResponseStringWithEncoding()
	  + makeFormattedXMLRPCFaultResponseStringWithEncoding()

2009-05-07 07:53  david_nichols

	* updated notes

2009-05-07 07:53  david_nichols

	* cosmetic change

2009-05-07 07:46  david_nichols

	* fixed signal handling after a fork(), was completely disabled due
	  to a bug in the signal manager class

2009-05-07 07:45  david_nichols

	* clarified the behavior of list operators when the list operand is
	  not a list

2009-05-01 12:53  david_nichols

	* xfixed the Dir::listFiles() method with g++3.* (at least); the
	  mask used would not filter out directories

2009-04-30 16:42  david_nichols

	* fixed crashes in the File class due to unsigned data type being
	  used and the comparison (< 0) that signaled an error always
	  failed

2009-04-28 15:52  david_nichols

	* fixed outputting recursive data structures (would otherwise
	  result in a crash); fixed object access deadlock scenarios

2009-04-25 07:11  david_nichols

	* updated todo

2009-04-24 16:11  david_nichols

	* added dbg_node_addr() function

2009-04-20 16:11  david_nichols

	* cosmetic changes

2009-04-20 06:53  david_nichols

	* readded config_macro_dir

2009-04-17 16:10  david_nichols

	* fixed the "-" operator with: hash-string and hash-list also
	  hash-=string and hash-=list to remove the value(s) from the hash,
	  not call the delete operator

2009-04-17 13:49  david_nichols

	* do not reference macro dir from configure.ac, fixed reconf.sh to
	  work with broken "which" commands that do not set the return
	  value

2009-04-17 06:12  david_nichols

	* added parentheses to suppress warning

2009-04-15 14:11  david_nichols

	* fixed XML-RPC serialization to never output an empty <param/>
	  element, as it could potentially break some implementations (the
	  XML-RPC spec is not very clear on this; it is not written like an
	  RFC, for example. Also we send empty value elements: <value/>
	  when serializing NOTHING or NULL, which may not be correct either

2009-04-15 13:40  david_nichols

	* fixed XML-RPC serialization to handle NOTHING (no value) and NULL
	  identically

2009-04-15 13:38  david_nichols

	* fixed parsing of a corner case of marginally valid XML-RPC,
	  updated test script to include this case

2009-04-15 13:09  david_nichols

	* updated json to serialize qore NULL as "null"

2009-04-15 09:32  david_nichols

	* allow %include parse directives to quote the file names

2009-04-14 12:50  david_nichols

	* implemented the ability to get a slice from a hash or an object -
	  updated tests and documentation accordingly

2009-04-14 09:41  david_nichols

	* added entry

2009-04-14 09:22  david_nichols

	* do not assume that a trailing null should terminate the string
	  when reading string data from files; include the trailing null in
	  the string

2009-04-13 13:17  david_nichols

	* cosmetic changes

2009-04-13 13:17  david_nichols

	* fixed a bug parsing base64 strings when newlines and/or linefeeds
	  trailed the base64-encoded data

2009-04-08 06:54  david_nichols

	* fixed outputting '%%' as '%' in *printf*() when no arguments are
	  left to process

2009-04-06 09:56  david_nichols

	* fixed a bug outputting '%' characters ('%%' now works properly to
	  output a single '%' character)

2009-03-31 18:56  david_nichols

	* fixed a bug parsing hashes where the hash key was given as a
	  constant

2009-03-30 10:33  david_nichols

	* doc updates

2009-03-25 13:03  david_nichols

	* cosmetic changes

2009-03-24 15:43  david_nichols

	* fixed a bug writing to variables where shared data was being
	  updated in place instead of copied and then updated

2009-03-20 14:40  david_nichols

	* added the ability for a Condition variable to wait on an RWLock
	  object

2009-03-17 15:20  david_nichols

	* suppressed error messages

2009-03-11 18:40  david_nichols

	* reversed order of lock acquisition when returning call stack
	  infomation for all threads; made sure to dereference the call
	  stack object outside the call stack lock in order to avoid nested
	  locking

2009-03-09 09:38  david_nichols

	* ignore '\n' and '\r' when parsing base64-encoded strings

2009-03-04 16:16  david_nichols

	* updated release to 0.7.4, fixed a reference bug where system
	  classes were being destroyed while still referenced in user code

2009-03-04 15:55  david_nichols

	* added missing changes to QoreHashNode

2009-03-04 15:51  david_nichols

	* fixed foreach behavior with a reference when the break statement
	  is used

2009-03-04 13:13  david_nichols

	* added remove_thread_data() function, QoreHashNode::removeKey()
	  function

2009-03-04 13:12  david_nichols

	* fixed a crashing bug when member data is attempted to be copied
	  from a deleted object

2009-03-04 13:10  david_nichols

	* added documentation for remove_thread_data()

2009-02-25 16:23  david_nichols

	* implemented debugging function

2009-02-14 07:32  david_nichols

	* doc updates

2009-02-14 07:08  david_nichols

	* updated release notes

2009-02-03 12:37  david_nichols

	* cosmetic updates

2009-02-03 12:22  david_nichols

	* fixed a bug doing math on negative units of relative dates;
	  invalid dates would be returned

2009-02-02 16:38  david_nichols

	* updated release notes with new bug fix

2009-02-02 16:28  david_nichols

	* fixed a bug in the handling of GLIBC gethostbyaddr_r() failures;
	  (actually the
	  bug appears to be in GLIBC) it would cause the function to return
	  a value with
	  invalid addresses (instead of returning NOTHING)

2009-02-01 18:52  david_nichols

	* cosmetic update

2009-02-01 18:51  david_nichols

	* updated changelog and release notes re ppc fix

2009-02-01 18:46  david_nichols

	* added __ppc__ to ppc include as __ppc wasn't defined on some
	  builds with g++ 4.0.1

2009-01-29 17:01  david_nichols

	* updated release notes

2009-01-29 14:57  david_nichols

	* updated examples

2009-01-29 14:38  david_nichols

	* added documentation for the getcwd() function; tagged getcwd()
	  with QDOM_FILESYSTEM

2009-01-29 14:27  david_nichols

	* added %append-include-path parse directive to append include dirs
	  to a program
	  object while parsing, also supports environment variable
	  substitution;
	  changed QoreString::replace() to be based on
	  QoreString::splice_simple()

2009-01-28 16:52  david_nichols

	* fixed broken implementation of (undocumented) getcwd() function,
	  started work
	  on %include-path parse option

2009-01-22 10:22  david_nichols

	* cosmetic updates

2009-01-22 10:17  david_nichols

	* disabled debugging line

2009-01-22 10:14  david_nichols

	* fixed a crashing bug in the handling of GLIBC gethostbyname_r()
	  failures

2009-01-21 10:24  david_nichols

	* updated copyright statements to reflect 2009

2009-01-13 09:30  david_nichols

	* fixed a bug in the binary() function when converting binary
	  strings to binary type when the strings had embedded nulls

2009-01-11 09:08  david_nichols

	* commented out extra source line

2009-01-08 14:43  david_nichols

	* updated changelog

2009-01-08 14:43  david_nichols

	* corrected example code

2009-01-08 14:42  david_nichols

	* updated reconf.sh to look for glibtoolize as well as libtoolize

2009-01-07 11:53  david_nichols

	* configure fixes

2009-01-07 11:42  david_nichols

	* upadated reconf.sh sequence to use libtoolize for ltmain.sh

2009-01-06 13:51  david_nichols

	* doc update

2008-12-28 03:18  david_nichols

	* updated release notes

2008-12-28 01:02  david_nichols

	* updated documentation for new functionality

2008-12-27 19:37  david_nichols

	* added C++ QoreHTTPClient::setConnectTimeout() and
	  QoreHTTPClient::getConnectTimeout() functions; added Qore
	  HTTPClient::setConnectTimeout() and
	  HTTPClient::getConnectTimeout() methods; updated
	  examples/SoapClient.qc to 0.1.2 - added support for passing
	  options to the HTTPClient constructor; updated
	  examples/HTTPServer.qc and examples/SoapHandler.qc: minor SOAP
	  fixes

2008-12-13 17:08  david_nichols

	* fixed a typo

2008-12-13 16:06  david_nichols

	* fixed content-type checking in examples/HTTPServer.qc for handler
	  match algorithm

2008-12-12 23:08  david_nichols

	* updated changelog

2008-12-12 23:07  david_nichols

	* updated examples/WSDL.qc to use parseXMLAsData() instead of
	  parseXML(), also fixed XSD date serialization and
	  deserialization; updated examples/SoapClient.qc to accept a
	  WebService object as the argument to the "wsdl" option key in the
	  SoapClient::constructor() method

2008-12-12 17:18  david_nichols

	* added parseXMLAsData() and parseXMLAsDataWithSchema() functions

2008-12-12 10:55  david_nichols

	* updated configure to check under --prefix first to find dependent
	  libraries and headers

2008-12-12 10:42  david_nichols

	* added example, updated doc for pending 0.7.3 release

2008-12-12 10:25  david_nichols

	* updated release to 0.7.3

2008-12-03 12:59  david_nichols

	* fixed dependencies for devel package

2008-12-03 12:49  david_nichols

	* added optest.q to distribution

2008-12-03 12:30  david_nichols

	* removed noarch from doc package - does not work :-(

2008-12-03 11:10  david_nichols

	* removed reference to .la file

2008-12-03 11:09  david_nichols

	* corrected typo in changelog

2008-12-03 10:15  david_nichols

	* fixed a crashing bug in the %= operator when the operand is 0;
	  fixed a
	  crashing bug in the map with select operator when the map
	  expression is 0;
	  added operator regression testing script: test/optest.q

2008-12-02 21:43  david_nichols

	* updated documentation with File event support and terminal
	  attribute support

2008-12-02 21:41  david_nichols

	* added event support to File clas

2008-12-02 18:01  david_nichols

	* fixed a crashing bug in the map operator when the list operand is
	  not a list

2008-12-01 11:57  david_nichols

	* adding missing doxygen line for timeout parameter to connect
	  function

2008-11-30 20:37  david_nichols

	* added optional timeout parameters in ms to: Socket::connect(),
	  Socket::connectINET(), Socket::connectSSL(),
	  Socket::connectINETSSL()

2008-11-30 18:58  david_nichols

	* added --show-module-apis call

2008-11-30 18:57  david_nichols

	* added optional timeout parameters to File::read() and
	  File::readBinary()

2008-11-28 13:42  david_nichols

	* ifdef termios defines not available on hpux

2008-11-28 12:45  david_nichols

	* fixed typo in new include file for termios support

2008-11-28 12:43  david_nichols

	* ifdef'ed out termios definitions not available on Linux

2008-11-28 08:23  david_nichols

	* added new File methods: File::isDataAvailable(timeout_ms),
	  File::setTerminalAttributes(action, TermIOS),
	  File::getTerminalAttributes(TermIOS); added terminal attribute
	  and action constants

2008-11-27 22:14  david_nichols

	* started adding new APIs to QoreFile for non-blocking I/O; more
	  TermIOS fixes, functionality; updated library to 5.1, module api
	  to 0.6, compatibility with 0.5

2008-11-26 16:52  david_nichols

	* started adding TermIOS class to Qore to control terminal
	  attributes

2008-11-26 12:09  david_nichols

	* spec file fixes

2008-11-26 11:57  david_nichols

	* implemented an optimization to map to efficiently handle the case
	  when no return value is used

2008-11-26 11:42  david_nichols

	* fix to allow references to be used in closure and call reference
	  calls

2008-11-25 19:53  david_nichols

	* fixed spec file

2008-11-25 08:31  david_nichols

	* fixed a crashing bug in the parser with parse errors

2008-11-23 15:25  david_nichols

	* updated library to 5.0.1; fixed spec file; minor fixes for
	  configure

2008-11-23 15:24  david_nichols

	* updated docs

2008-11-21 20:17  david_nichols

	* fixed a bug where thread-local variables (as top-level local
	  variables of a Program) were not being instantiated when another
	  Program called a fuction in a Program with such variables

2008-11-21 15:39  david_nichols

	* fixed an issue in the ManagedDatasource class where proper
	  locking was not done to DBI drivers and more than one call could
	  be issued to a connection at one time, causing crashes

2008-11-21 15:38  david_nichols

	* fixed a race condition with getAllThreadCallStacks()

2008-11-21 13:01  david_nichols

	* update version to 0.7.2 and fixed configure when linkable libs
	  are in /lib

2008-11-21 12:53  david_nichols

	* fixed crash when pthread_create fails in thread.cc, thanks to
	  Dmytro Milinevskyy for the info and patch

2008-11-18 13:29  david_nichols

	* minor fixes; doc updates

2008-11-18 13:28  david_nichols

	* compile fixes without single compilation unit

2008-11-18 12:50  david_nichols

	* fixed getAllThreadCallStacks() (only enabled with debugging
	  builds and with the
	  explicit configure option: --enable-runtime-thread-stack-trace
	  because it
	  has a performance penalty) by requiring all threads to grab a
	  read lock
	  before updating the thread stack, and getAllThreadCallStacks() to
	  grab a write
	  lock before reading all threads' call stacks. This function was
	  not
	  thread-safe before now.

2008-11-18 10:51  david_nichols

	* cosmetic update

2008-11-18 10:50  david_nichols

	* doc and cosmetic updates

2008-11-18 10:49  david_nichols

	* updated XSD support

2008-11-18 08:46  david_nichols

	* fixed socket handling on HPUX 64/bit builds where the header
	  files declare
	  socklen_t to be 8 bytes wide, but the libraries expect a pointer
	  to a 32-bit
	  value; added -lCsup to link step for HPUX builds on itanium with
	  gcc

2008-11-13 08:27  david_nichols

	* removed commented-out, extraneous, unnecessary code

2008-11-12 15:41  david_nichols

	* added a custom dereferencer for QoreFtpClientClass to call
	  cleanup() before
	  deleting in case an event queue was set

2008-11-12 15:31  david_nichols

	* implemented customer dereferencer for QoreHTTPClient in case a
	  queue is set
	  in the constructor and there is an exception in the constructor
	  (or in the
	  constructor of a derived class)

2008-11-12 15:11  david_nichols

	* close the socket when the event queue cleanup is done so that the
	  CHANNEL_CLOSED event can be posted if the socket is still open

2008-11-12 14:30  david_nichols

	* updated release notes

2008-11-12 14:29  david_nichols

	* fixed bugs in JsonRpcClient and XmlRpcClient where a new
	  connection was
	  established with each request; fixed a bug in the HTTPClient
	  where a new
	  conncetion was established for each request even if the
	  connection was already
	  open and Keep-Alive was set

2008-11-12 14:04  david_nichols

	* fixed a bug in QoreHTTPClient passing a StackHash as a
	  QoreHashNode; added
	  support for "event_queue" HTTPClient option, cosmetic updates

2008-11-12 10:04  david_nichols

	* fixed terminating unix socket addresses to be portable

2008-11-11 16:41  david_nichols

	* moved checks

2008-11-11 15:42  david_nichols

	* patch for those poor systems without a define for AF_LOCAL
	  *cough* HPUX *cough*

2008-11-11 15:26  david_nichols

	* updated threading to fix the problem with exit() causing a random
	  seg fault when other threads were active as follows: all threads
	  started with joinable status PTHREAD_CREATE_JOINABLE, threads
	  call pthread_detach() before exiting; implemented a new function,
	  qore_exit_process() to be called instead of exit() that calls
	  pthread_cancel() on each thread (except the calling thread) and
	  then pthread_join(), added a call to pthread_testcancel() in
	  AbstractStatement::exec()

2008-11-11 13:14  david_nichols

	* doc and release notes updates

2008-11-11 09:52  david_nichols

	* fixed Queue::copy() to copy the elements in the original Queue
	  instead of
	  returning an empty object

2008-11-11 09:34  david_nichols

	* added initial event documentation; added AF_UNIX and AF_LOCAL
	  constants

2008-11-11 07:07  david_nichols

	* doc updates for 0.7.1

2008-11-11 07:07  david_nichols

	* minor internal socket api updates, updated release notes

2008-11-10 18:41  david_nichols

	* fixed a bug parsing the content type in QoreHTTPClient

2008-11-10 18:23  david_nichols

	* cosmetic update

2008-11-10 17:36  david_nichols

	* doc updates

2008-11-09 13:59  david_nichols

	* changed execution path

2008-11-09 13:58  david_nichols

	* changed exit() to thread_exit

2008-11-09 13:42  david_nichols

	* fixed a bug setting the URL in parseURL() and changed the
	  "connecting" event posting to happen immediately before the call
	  to connect()

2008-11-09 13:16  david_nichols

	* fixed typo in %requires line

2008-11-09 13:15  david_nichols

	* corrected a typo in an event constant

2008-11-09 08:32  david_nichols

	* added object ID to socket event hashes; added new socket events
	  for connecting and SSL negotiation; updated socket-test.q to use
	  new event framework if -e or --show-events is given on the
	  command line

2008-11-08 15:35  david_nichols

	* updated QoreFile API to use qore_offset_t and qore_size_t where
	  appropriate instead of "int"

2008-11-08 15:20  david_nichols

	* updated QoreSocket API to use qore_offset_t and qore_size_t where
	  appropriate instead of "int"; fixed some bugs in
	  QoreSocket::send(int fd, qore_offset_t size)

2008-11-06 10:53  david_nichols

	* fixed a memory error in a debugging statement

2008-11-06 10:25  david_nichols

	* SOAP and documentation updates

2008-11-06 08:07  david_nichols

	* updated docs and updated qget to flush output buffers immediately

2008-11-06 08:06  david_nichols

	* fixed a setting the URL in the HTTPClient class with only a path
	  if a hostname is already set

2008-11-06 07:39  david_nichols

	* fixed "const" declaration

2008-11-05 21:27  david_nichols

	* minor updates

2008-11-05 21:12  david_nichols

	* implemented module and feature version requirements; you can now
	  use: %requires <module> OP <version>, where OP is one of <, <=,
	  =, >=, >, for example: %requires oracle >= 1.0.1 also a special
	  feature "qore" was implemented to give a requirement for the qore
	  library, ex: %requires qore >= 0.7.1

2008-11-05 16:33  david_nichols

	* updated release notes

2008-11-05 16:29  david_nichols

	* event subsystem fixes and improvements, FtpClient event support;
	  fixed signal handling for per-forked processes on Darwin

2008-11-05 09:12  david_nichols

	* fixed a memory error parsing expressions with the map operator

2008-11-04 16:56  david_nichols

	* updated changelog

2008-11-04 16:15  david_nichols

	* associated header updates to last commit to Operator.cc

2008-11-04 16:15  david_nichols

	* fixed 2 crashing bugs in Operator.cc with the "-" operator: the
	  operator functions were expecting certain arguments but the
	  oeprator
	  code was making partial matches and sending other types to the
	  functions. Added the abilty for an operator function to require
	  an
	  exact argument match for both arguments.
	  added the possibilty to define a default function that returns
	  NOTHING if no partial match is made to any operator functions so
	  that nonsensical results are not returned (i.e. before change:
	  NOTHING - NOTHING produced: "<time: 0 seconds>", after change,
	  this
	  produces "NOTHING")

2008-10-30 17:19  david_nichols

	* event system changes

2008-10-30 09:19  david_nichols

	* updates

2008-10-30 08:32  david_nichols

	* updated module handling: modules are now checked for having the
	  module api appended to their name in descendnig order; i.e. if
	  qore supports module-apis 0.5 and 0.4, and a program requests
	  feature "x", qore will look for x-api-0.5.qmod, then
	  x-api-0.4.qmod, and then finally x.qmod in each of the module
	  directories; default module directory changed to
	  $libdir/qore-modules in order to avoid creating a new directory
	  for each minor change in the supported api

2008-10-29 11:48  david_nichols

	* deactivated debugging statements

2008-10-29 11:35  david_nichols

	* updated changelog

2008-10-29 11:34  david_nichols

	* fixed parsing xmlrpc arrays when the first element is empty

2008-10-24 09:15  david_nichols

	* minor updates

2008-10-24 07:55  david_nichols

	* fixed x86_64 builds on solaris with CC

2008-10-23 17:38  david_nichols

	* fixed minor issues with casting and local variable usage

2008-10-23 06:38  david_nichols

	* fixed header install and fixed ia64 builds with g++

2008-10-22 20:28  david_nichols

	* added more callback support to the Socket and HTTPClient classes

2008-10-22 20:27  david_nichols

	* fixed *printf() formatting with unrecognized format specifiers

2008-10-22 16:02  david_nichols

	* added initial callback and event queue support to Socket and
	  HTTPClient classes

2008-10-22 11:58  david_nichols

	* updated formatting

2008-10-22 11:56  david_nichols

	* updated readme

2008-10-22 11:48  david_nichols

	* updated release notes

2008-10-22 11:27  david_nichols

	* implemented support for stack guard on itanium including
	  monitoring the ia64 RSE (Register Stack Engine) - 64bit ia64
	  builds only

2008-10-22 08:35  david_nichols

	* fixed typos in symbol names

2008-10-22 08:32  david_nichols

	* updated release notes

2008-10-22 08:30  david_nichols

	* implemented support for atomic operations on itanium with aCC and
	  g++ for 64-bit builds

2008-10-22 07:30  david_nichols

	* updated ABI to 5.0 - only functions not used by current modules,
	  so compatilibility is claimed with module-api 0.4 (corresponding
	  to ABI 4.0)

2008-10-20 19:51  david_nichols

	* updated to provide support for backwards-compatibility for
	  compatible module APIs, updated module api to 0.5

2008-10-20 17:01  david_nichols

	* removed hpux socklen hack

2008-10-20 16:57  david_nichols

	* updated assembly macro includes to support universal builds -
	  building multiple architectures simultaneously from the same
	  sources - added a debug library option to show if debugging was
	  enabled in the library

2008-10-20 16:24  david_nichols

	* added missing file

2008-10-17 16:37  david_nichols

	* added string != operator test with different encodings but same
	  string

2008-10-17 16:35  david_nichols

	* fixed a bug in string != - was returning True when the strings
	  were equal but had different character encodings

2008-10-17 14:21  david_nichols

	* fixed typo

2008-10-17 05:50  david_nichols

	* added QORE_VERSION_CODE to qore-version.h; updated next_build.sh
	  to run with /bin/sh instead of /bin/bash

2008-10-16 09:57  david_nichols

	* updated library version; added new function to QoreEncoding to
	  get maximum
	  character width for multi-byte character enodings

2008-10-16 08:55  david_nichols

	* cosmetic and comment updates

2008-10-16 08:22  david_nichols

	* fixed Socket::connect() and Socket::connectSSL() documentation to
	  reflect
	  actual behavior - they return no values and thrown exceptions if
	  errors occur

2008-10-15 18:54  david_nichols

	* fixed SOAP anyType serialization, fixed late resolution of
	  element types

2008-10-13 19:40  david_nichols

	* fixed spec file and "make dist" tar file - was missing a critical
	  header for x86_64

2008-10-09 10:16  david_nichols

	* fix for itanium hpux

2008-10-09 07:25  david_nichols

	* to avoid some warnings on recent versions of aCC

2008-10-09 07:23  david_nichols

	* fixes to compile on HPUX itanium

2008-10-07 20:26  david_nichols

	* fixed spec file

2008-10-07 19:58  david_nichols

	* started development of 0.7.1 release

2008-10-07 19:20  david_nichols

	* added README-MODULES to distribution

2008-10-02 18:45  david_nichols

	* removed opengl examples (part of glut module project)

2008-10-02 13:01  david_nichols

	* fixed a bug processing local variable declarations in a call
	  reference call;
	  added a new virtual function for parse initialization to
	  AbstractQoreNode;
	  last ABI change before 0.7.0 release; updated parser and other
	  code to allow
	  call references to be present in constant expressions (not at the
	  top level,
	  however) and as case values; fixed a bug in user function call
	  reference
	  comparisons

2008-10-01 20:37  david_nichols

	* added BUILD file to distribution tar file, minor release notes
	  update

2008-09-30 20:41  david_nichols

	* updated SoapClient to allow for WSDL class options

2008-09-30 20:40  david_nichols

	* updated WSDL class

2008-09-30 20:32  david_nichols

	* doc updates

2008-09-30 20:20  david_nichols

	* updated todo

2008-09-30 10:47  david_nichols

	* fixed arithmetic exception in the modula operator when the right
	  side is
	  0

2008-09-29 20:24  david_nichols

	* updated soap examples

2008-09-29 11:45  david_nichols

	* command-line fixes, doc updates

2008-09-26 14:16  david_nichols

	* soap and wsdl fixes and httpserver update

2008-09-24 11:12  david_nichols

	* fixed deadlock in QoreObject delete blocker functions when
	  calling
	  QoreObject::ref()

2008-09-24 11:10  david_nichols

	* doc updates

2008-09-23 13:02  david_nichols

	* added Program::getGlobalVariable(), updated RELEASE-NOTES

2008-09-23 07:31  david_nichols

	* doc and API doc updates; made QoreDir class private to the
	  library

2008-09-19 09:02  david_nichols

	* fixed SSLCertificate to assume a file name if the string argument
	  is less than 200 characters, otherwise assume a PEM-encoded
	  certificate; fixed SSLCertificate::getPublicKey() to return the
	  DER-encoded public key for the certificate, instead of the
	  internal openssl data

2008-09-17 17:42  david_nichols

	* documentation updates and corrections; updated hash() to make a
	  hash from a list and from an object's members

2008-09-16 20:52  david_nichols

	* updated qore option and option documentation; added a new
	  constructor to QoreSSLCertificate; updated SSLCertificate and
	  SSLPrivateKey to check for parse option PO_NO_FILESYSTEM when
	  creating the objects from a filename; added
	  get_qore_option_list() and get_qore_library_info() functions;
	  many documentation corrections

2008-09-14 07:19  david_nichols

	* removed old and redundant gate-test.q

2008-09-14 07:16  david_nichols

	* moved test adapter to tibae project

2008-09-14 06:33  david_nichols

	* checked in missing file

2008-09-13 13:03  david_nichols

	* implemented stack guard for 32-bit pa-risc with gcc and aCC

2008-09-13 06:17  david_nichols

	* doubled default stack guard to 8KB to avoid crashes on Linux i386
	  in background threads; updated release notes

2008-09-12 21:02  david_nichols

	* updated release notes

2008-09-12 17:18  david_nichols

	* disabled unsupported sparc64 assembly file

2008-09-12 17:12  david_nichols

	* disable atomic operations and stack guard for ppc64 because we
	  don't have assembly yet for that processor

2008-09-12 15:03  david_nichols

	* implemented atomic operation and stack guard support for sparc32,
	  updated docs

2008-09-12 13:51  david_nichols

	* fixed stack guard on x86_64 to be 20K on all compilers/platforms

2008-09-12 13:37  david_nichols

	* increased stack guard in normal case to 5KB

2008-09-12 13:34  david_nichols

	* made get_stack_pos() 64-bit and fixed stack-test.q

2008-09-12 13:28  david_nichols

	* removed need for openssl headers to be available when including
	  <qore/Qore.h>

2008-09-12 13:18  david_nichols

	* removed openssl headers from QoreSocket.h, cosmetic updatres to
	  QoreSSLBase.h

2008-09-12 13:13  david_nichols

	* added QORE_BUILD_HOST to config header

2008-09-12 13:04  david_nichols

	* implemented stack guard properly for x86_64 gcc, also fixed stack
	  guard for linux x86_64

2008-09-12 13:03  david_nichols

	* added test/stack-test.q to test stack guard

2008-09-12 12:26  david_nichols

	* updated to new Option namespace

2008-09-12 12:13  david_nichols

	* added library options, reworked configure and build, added
	  compile and link information symbols to library, added verbose
	  information about options and build to "qore -V"

2008-09-12 06:00  david_nichols

	* updated documentation to reflect the fact that the build was
	  updated to support openssl 0.9.7

2008-09-12 05:58  david_nichols

	* updated exceptiomn string when options are missing to reflect
	  namespace "Option"

2008-09-12 05:57  david_nichols

	* enabled atomic operations and stack guard for solaris i386; fixed
	  optional functions and options in ql_crypto.cc; put all options
	  into "Option" namespace

2008-09-11 16:19  david_nichols

	* enabled atomic reference counting and stack guard for solaris
	  x86_64 with SunPro CC

2008-09-11 12:58  david_nichols

	* fixed atomic reference counting on SPARC with gcc, enabled stack
	  monitoring on SPARC with gcc

2008-09-11 11:33  david_nichols

	* fixed another bug in thread launching related to recent "local
	  variables with global scope" fix

2008-09-11 11:30  david_nichols

	* fixed a bug in thread launching

2008-09-11 10:56  david_nichols

	* HP aCC compile fixes

2008-09-11 06:52  david_nichols

	* fixed warnings on SunPro CC

2008-09-11 06:40  david_nichols

	* Solaris compile fixes

2008-09-11 06:34  david_nichols

	* updated for non-gcc compilers (no trailing , in a list, ex:
	  SunPro CC)

2008-09-11 06:33  david_nichols

	* updated for generic UNIX diff (ex: Solaris diff)

2008-09-11 05:35  david_nichols

	* fixed i386 get_stack_pos() to return size_t, fixed comment in
	  QoreProgram.h

2008-09-10 15:59  david_nichols

	* implemented sparc get_stack_pos() function for testing

2008-09-10 15:48  david_nichols

	* fixed stack position detection for powerpc

2008-09-10 14:15  david_nichols

	* added get_stack_pos() for ppc

2008-09-10 14:06  david_nichols

	* fixed default stack size detection to use a more portable method

2008-09-10 13:44  david_nichols

	* cosmetic updates

2008-09-10 13:27  david_nichols

	* initial patch for fixing crashes based on stack growth overruns,
	  new option constants, ensure optional functions always exist

2008-09-09 20:24  david_nichols

	* fixed top-level local variable handling

2008-09-09 19:52  david_nichols

	* fixed global scope of top-level local variables

2008-09-09 13:01  david_nichols

	* finally updated functionality to match documentation - top-level
	  local variables are global in scope and thread-local, but can
	  only be declared in the first top-level block to be parsed into a
	  new Program object

2008-09-09 09:44  david_nichols

	* removed qt documentation (added to qt module project)

2008-09-09 09:26  david_nichols

	* removed glut documentation (added to glut module project)

2008-09-09 08:34  david_nichols

	* removed opengl documentation (added to opengl module project)

2008-09-09 07:09  david_nichols

	* removed ncurses documentation (added to ncurses module project)

2008-09-08 17:27  david_nichols

	* fixed runtime thread stack trace status report in configure

2008-09-08 17:08  david_nichols

	* fixed doxygen generation

2008-09-08 15:25  david_nichols

	* removed mysql documentation (added to mysql module project)

2008-09-08 14:09  david_nichols

	* disabled debugging statement

2008-09-08 14:08  david_nichols

	* fixed character encoding detection in HTTP response header
	  parsing

2008-09-08 13:59  david_nichols

	* removed sybase module documentation

2008-09-08 13:58  david_nichols

	* implemented force_encoding() function, fixed a bug in
	  ManagedDatasource::selectRow(), removed the requirement to have a
	  server connection for the DBI method getClientVersion(), cosmetic
	  updates to socket code

2008-09-08 13:56  david_nichols

	* SOAP fixes

2008-09-07 19:28  david_nichols

	* removed pgsql documentation and moved to pgsql project

2008-09-06 08:15  david_nichols

	* removed oracle documentation (added to oracle module project)

2008-09-06 07:12  david_nichols

	* removed tibrv documentation (added to tibrv module project)

2008-09-05 13:51  david_nichols

	* removed tibae documentation (added to tibae module project)

2008-09-05 13:28  david_nichols

	* removed tuxedo documentation (added to tuxedo module project)

2008-09-04 16:37  david_nichols

	* module updates, moved oracle to separate module, qore library
	  updates

2008-09-03 15:04  david_nichols

	* removed mysql module to separate project
	  (https://qore.svn.sourceforge.net/svnroot/qore/module-mysql)

2008-09-03 14:36  david_nichols

	* removed pgsql module to separate project
	  (https://qore.svn.sourceforge.net/svnroot/qore/module-pgsql)

2008-09-03 14:05  david_nichols

	* removed sybase module to separate project
	  (https://qore.svn.sourceforge.net/svnroot/qore/module-sybase)

2008-09-03 13:07  david_nichols

	* updated docs and added example program

2008-09-03 12:58  david_nichols

	* removed tibae module to separate project
	  (https://qore.svn.sourceforge.net/svnroot/qore/module-tibae)

2008-09-03 12:06  david_nichols

	* removed tibrv module to separate project
	  (https://qore.svn.sourceforge.net/svnroot/qore/module-tibrv)

2008-09-03 09:28  david_nichols

	* removed ncurses modules to separate project

2008-09-03 09:02  david_nichols

	* fixed mandatory pthread detection, added pthread cflags to
	  CXXFLAGS, removed Tuxedo module (now in separate project)

2008-09-03 07:07  david_nichols

	* updated docs and inherit.q example regarding how to call derived
	  class methods from a base class (use $self.method() instead of
	  $.method())

2008-09-03 05:26  david_nichols

	* added an example of how to call a derived class method in a base
	  class

2008-09-02 15:49  david_nichols

	* renamed MODULES to README-MODULES to not conflict with the
	  directory "modules" on case-insensitive filesystems (like on
	  HFS+)

2008-09-02 14:41  david_nichols

	* changed module directory to
	  $libdir/qore-module-api-$(module_api_version), updated build and
	  some docs

2008-09-02 12:43  david_nichols

	* fixed for non-debugging builds

2008-09-02 11:54  david_nichols

	* removed qt from build

2008-09-02 06:24  david_nichols

	* fixed typo

2008-09-01 15:33  david_nichols

	* updated SoapClient

2008-09-01 15:26  david_nichols

	* fixed a memory leak in exception handling in the HTTPClient
	  class; fixed "info" reference handling in the HTTPClient class

2008-09-01 13:52  david_nichols

	* moved glut and opengl modules into separate projects

2008-08-31 20:08  david_nichols

	* updated docs, fixed typos, other updates

2008-08-28 16:27  david_nichols

	* updated [] operator to return the byte value of a binary object
	  at the offset given

2008-08-28 13:35  david_nichols

	* updated getpwuid() test; username returned for uid 0 may not
	  always be "root"

2008-08-28 13:25  david_nichols

	* suppressed error text when doxygen is not found in configure
	  script

2008-08-28 09:33  david_nichols

	* updated qore library symbols, updated command-line parsing

2008-08-28 09:26  david_nichols

	* new library function to tell if the library has debugging enabled
	  or not

2008-08-28 08:58  david_nichols

	* updated release notes

2008-08-27 13:56  david_nichols

	* added QORE_VERSION define to qore-version.h header

2008-08-27 13:54  david_nichols

	* created a new public header file with the qore version
	  information, created by next_build.sh

2008-08-27 09:06  david_nichols

	* removed internal macros tracein() and traceout() and replaced
	  with a single QORE_TRACE() macro that uses ON_BLOCK_EXIT() to do
	  the traceout(); made config headers private; made svn-revision
	  header private

2008-08-26 14:40  david_nichols

	* added BinaryNode::prepend() method

2008-08-25 09:02  david_nichols

	* updated rand() to return a random 64-bit integer by calling
	  random() twice; once for each 32-bit portion of the return value

2008-08-21 16:53  david_nichols

	* updated project docs, preparing for 0.7.0 release

2008-08-21 15:58  david_nichols

	* next try fixing object reference race bug

2008-08-21 14:35  david_nichols

	* finally fixed object scope/reference bug

2008-08-21 14:34  david_nichols

	* cosmetic updates

2008-08-20 18:40  david_nichols

	* cosmetic updates

2008-08-20 18:40  david_nichols

	* removed debugging statements

2008-08-20 17:01  david_nichols

	* cosmetic updates

2008-08-20 17:00  david_nichols

	* fixed race condition in debugging statement

2008-08-20 16:59  david_nichols

	* added class forward reference

2008-08-20 16:58  david_nichols

	* cosmetic fix

2008-08-20 16:58  david_nichols

	* fixed qore_init() signature

2008-08-20 16:56  david_nichols

	* added copy constructor so objects based on this object can also
	  have copy constructors

2008-08-19 11:50  david_nichols

	* updated default exception handler to show TID

2008-08-19 11:49  david_nichols

	* updated to display revision number with -b argument

2008-08-19 11:48  david_nichols

	* cosmetic changes only

2008-08-19 11:48  david_nichols

	* removed obsolete references to .build file

2008-08-19 09:22  david_nichols

	* new files and updated HTTPServer

2008-08-19 05:39  david_nichols

	* updated changelog

2008-08-19 05:38  david_nichols

	* cosmetic updates

2008-08-19 05:33  david_nichols

	* fixed freetds compile - removed hack for older versions using
	  private data structures to hack the connection locale settings

2008-08-18 15:29  david_nichols

	* added --module-dir command-line option to print out the qore
	  module directory; exported qore_module_dir symbol to give the
	  module directory location

2008-08-16 13:35  david_nichols

	* updated SSLCertificate::constructor() to accept a binary object

2008-08-16 13:35  david_nichols

	* fixed ModuleManager to assume a file name if a '/' character
	  appears anywhere in the string

2008-08-14 19:33  david_nichols

	* removed erroneous code

2008-08-14 19:18  david_nichols

	* enhanced QoreSSLCertificate class, exported most functions

2008-08-13 09:14  david_nichols

	* updated oracle text

2008-08-13 09:11  david_nichols

	* added configure check for xmlTextReaderSetSchema() to disable
	  parseXMLWithSchema() if this function is not present in libxml2

2008-08-12 16:10  david_nichols

	* fixed HTTPClient to read body on error responses if present and
	  include in the "arg" key in the exception hash; fixed constant
	  resolution to only increment the recursive counter when
	  recursivey resolving a constant; fixed constant expression
	  evaluation; updated the QoreURL class to correctly parse strings
	  that give only a path

2008-08-12 08:12  david_nichols

	* removed badly-implemented verifyXMLWithSchema() (need to
	  implement XSDSchema class); added test for parseXMLWithSchema()
	  to test/test.q

2008-08-11 15:02  david_nichols

	* improved XML generation; top-level elements may not have
	  attributes; improved XML parse error reporting; detailed
	  information about errors is now included in the exception text;
	  added parseXMLWithSchema() and validateXMLWithSchema() functions
	  to allow XML to be parsed and validated against an XSD schema

2008-08-11 09:18  david_nichols

	* updated inlist() and inlist_hard() to return False when the
	  second argument is NOTHING, added documentation for these
	  functions

2008-08-10 09:14  david_nichols

	* fixed svn revision reporting in version string

2008-08-10 09:00  david_nichols

	* fixed build to use subversion revision for BUILD tag

2008-08-08 14:53  david_nichols

	* minor updates

2008-08-07 15:16  david_nichols

	* fixed resolution of private static methods from within a subclass

2008-08-07 10:59  david_nichols

	* updated build notes

2008-08-07 10:43  david_nichols

	* made QoreDir and QoreFile classes thread-safe, new functions:
	  inlist(), inlist_hard(), doc updates, bug fixes

2008-07-10 09:12  david_nichols

	* added the ability to get detailed header info from HTTPClient
	  class, added new methods to XmlRpcClient and JsonRpcClient
	  classes

2008-06-26 05:52  david_nichols

	* initial glut module documentation, minor opengl updates

2008-06-23 14:35  david_nichols

	* added missing #endif

2008-06-23 14:32  david_nichols

	* added license tag to mysql driver

2008-06-20 13:21  david_nichols

	* documenatation updates

2008-06-19 12:15  david_nichols

	* fixed memory bugs in the new foldr and foldl operators

2008-06-19 12:11  david_nichols

	* fixed format specifier

2008-06-19 12:11  david_nichols

	* fixed a crashing memory bug in the new select operator

2008-06-18 09:19  david_nichols

	* fixed out-of-line method definition parsing

2008-06-18 08:17  david_nichols

	* fixed compile errors

2008-06-17 14:53  david_nichols

	* illegal accesses to private static methods now throw an exception
	  at parse time instead of at run time; new Program methods, new
	  type contants, cleanups

2008-06-17 14:20  david_nichols

	* major documenation updates

2008-06-12 19:38  david_nichols

	* doxygen updates

2008-06-12 18:15  david_nichols

	* rpm packaging and build fixes

2008-06-12 11:05  david_nichols

	* missing file

2008-06-12 11:04  david_nichols

	* new file

2008-06-12 10:54  david_nichols

	* general cleanups and release preparation

2008-06-11 05:34  david_nichols

	* added class prefix in exception text when an exception occurs in
	  a static method

2008-06-10 20:31  david_nichols

	* implemented static class methods

2008-06-09 18:46  david_nichols

	* compile fixes for normal (non single compilation unit) compiles
	  for the qt-gui module

2008-06-09 18:11  david_nichols

	* fixes for opengl to compile with opengl 1.3 api (on linux / mesa
	  at least)

2008-06-09 18:11  david_nichols

	* fixed a typo

2008-06-09 14:53  david_nichols

	* started adding infrastructure changes to allow for "static" class
	  methods

2008-06-09 14:03  david_nichols

	* configure and compile fixes for sun studio CC

2008-06-09 08:37  david_nichols

	* fixed warning for g++ 3.4, sunpro cc, hp aCC

2008-06-05 13:16  david_nichols

	* enabled 64-bit builds by default on x86_64 CPUs

2008-06-05 07:30  david_nichols

	* fixed more warnings for g++ 4.3

2008-06-05 07:10  david_nichols

	* eliminated warnings with g++ 4.3

2008-06-04 04:51  david_nichols

	* compile and warning fixes for g++ 4.3

2008-06-04 04:26  david_nichols

	* include compile fixes

2008-06-03 14:19  david_nichols

	* test script updated

2008-06-03 13:29  david_nichols

	* glut detection fixes

2008-06-03 13:19  david_nichols

	* opengl and glut detection fixes

2008-06-03 13:17  david_nichols

	* solaris and subpro compile fixes

2008-06-03 12:40  david_nichols

	* added OPENSSL_LDFLAGS to LDFLAGS and OPENSSL_CPPFLAGS to CPPFLAGS
	  as they are requried for all code anyway

2008-06-03 12:31  david_nichols

	* further solaris gl and glut detection improvements

2008-06-03 12:17  david_nichols

	* opengl and glut detection fixes for solaris

2008-06-03 12:11  david_nichols

	* compile fixes for Solaris and SunPro CC

2008-06-03 11:19  david_nichols

	* removed trailing whitespace

2008-06-02 15:09  david_nichols

	* missing file

2008-06-02 15:08  david_nichols

	* missing file

2008-06-02 14:59  david_nichols

	* updated changelog

2008-06-02 14:58  david_nichols

	* qt patches

2008-06-02 14:57  david_nichols

	* more qt split, compile fixes

2008-05-30 15:25  david_nichols

	* mode qt compile fixes

2008-05-29 12:59  david_nichols

	* qt compile fixes

2008-05-29 11:44  david_nichols

	* starting to move things to create qt-core and qt-gui modules, but
	  I have to check the interim changes in before I can move things
	  around more!

2008-05-29 08:05  david_nichols

	* split svg functionality out of the qt module into the new qt-svg
	  module

2008-05-28 20:12  david_nichols

	* cosmetic updates

2008-05-28 17:48  david_nichols

	* added license (GPL/LGPL) tagging and validation on the qore
	  library and on modules, fixed a small bug processing long options
	  that don't take any options

2008-05-28 13:58  david_nichols

	* another qt-opengl makefile fix

2008-05-28 13:55  david_nichols

	* fixed qt-opengl makefile

2008-05-28 13:39  david_nichols

	* corrected a minor error in configure.ac, removed unimplemented
	  and dangerous new ModuleManager functions

2008-05-28 13:37  david_nichols

	* missing file

2008-05-28 13:35  david_nichols

	* split qt module into qt and qt-opengl, implemented a shared
	  library for qt module symbols to be shared in submodules

2008-05-28 13:30  david_nichols

	* update to handling when mysql server connection is lost in a
	  transaction; the Datasource is still marked as in transaction so
	  we cannot just raise an exception and automatically reconnect

2008-05-28 13:29  david_nichols

	* cosmetic update in exception when server connection is lost

2008-05-27 11:08  david_nichols

	* cosmetic update

2008-05-27 11:04  david_nichols

	* fixed reconnect library support, oracle driver reconnect support

2008-05-27 10:49  david_nichols

	* updates to allow dbi drivers to register aborted conncetions to
	  the server

2008-05-27 08:35  david_nichols

	* disabled debugging statement

2008-05-27 07:57  david_nichols

	* fixed typo

2008-05-27 07:57  david_nichols

	* updates

2008-05-27 07:54  david_nichols

	* fixed minor bug/typo in implicit argument parsing

2008-05-27 07:43  david_nichols

	* minor fixes

2008-05-27 07:38  david_nichols

	* started to implement auto reconnect for oracle

2008-05-22 19:40  david_nichols

	* implemented select operator to select elements from a list;
	  implemented a workaround in the parser to allow keywords to be
	  used as bareword hash keys or object members (i.e. "$hash.keys"
	  is now a legal expression); renamed fmap to map; updated map
	  operator's optional select expression to operate on the list
	  before mapping instead of after

2008-05-22 08:43  david_nichols

	* implemented support for a select code expression as an optional
	  third argument for the new fmap operator to filter which elements
	  are included in the resulting list

2008-05-22 08:43  david_nichols

	* cosmetic updates

2008-05-22 08:42  david_nichols

	* fixed get_type_name() signature

2008-05-22 08:41  david_nichols

	* added comment

2008-05-20 19:02  david_nichols

	* disabled debugging statements

2008-05-20 19:01  david_nichols

	* disabled hash_map and unordered_map for internal data structures
	  as all strings were "const char *" and no hash function for this
	  data type was supplied

2008-05-20 15:19  david_nichols

	* disabled unordered_map support for now because it's not working

2008-05-20 14:56  david_nichols

	* added support for unordered_map at a higher priority than
	  hash_map

2008-05-20 12:08  david_nichols

	* added algorithm include so qore will compile on g++ 3.

2008-05-20 08:38  david_nichols

	* ensure that closures can be used anywhere call references can be
	  used; implemented "fmap" operator to map a call reference or
	  closure on a list and return the result

2008-05-20 04:34  david_nichols

	* added a note about closure support

2008-05-20 04:33  david_nichols

	* free memory in QoreClosureParseNode in destructor

2008-05-20 04:33  david_nichols

	* fixed a memory error (called delete on pointer allocated with
	  malloc)

2008-05-19 17:03  david_nichols

	* minor doc updates re closure support

2008-05-19 16:58  david_nichols

	* added closure makefile support, added closure tests and
	  memberNotification tests to test/test.q

2008-05-19 16:58  david_nichols

	* added support for closures. qore closures encapsulate the state
	  of local variables accessed within the closure; closures created
	  in objects also encapsulate the state of (and prolong the scope
	  of) the object where the closure was created.

2008-05-17 09:13  david_nichols

	* disabled single complication unit for qt module due to excessive
	  memory requirements, fixed normal compile for qt module

2008-05-16 08:32  aargon

	* + openDir() method
	  . add charset on creating directory listing

2008-05-13 14:01  david_nichols

	* fixed a deadlock in classes with delete blockers (ex: many
	  classes in the qt module)

2008-05-13 13:35  david_nichols

	* suppressed debugging output

2008-05-13 13:33  david_nichols

	* rearranged execution order to avoid running any code while an
	  lvalue lock is held

2008-05-13 10:41  david_nichols

	* minor fixes

2008-05-13 10:35  david_nichols

	* reimplemented global variable and object locking to be much more
	  efficient; eliminated nested locks and instead use a
	  "lock-handoff" implementation where the nested object is
	  referenced, then the containing object's lock is released, then
	  the nested object is accessed, then the nested object's reference
	  count is decremented.

2008-05-08 12:45  david_nichols

	* added exists function

2008-05-07 14:04  david_nichols

	* updated QoreClass, QoreMethod, and QoreObject to funnel all
	  method calls through the QoreObject class

2008-05-07 12:52  david_nichols

	* cosmetic updates

2008-05-07 12:32  david_nichols

	* updated Dir docs for new regular expression arguments

2008-05-07 12:23  david_nichols

	* added regex support to Dir::listFiles() and Dir::listDirs()

2008-05-07 12:22  david_nichols

	* added regex support to Dir::list()

2008-05-07 11:49  david_nichols

	* Dir class patches

2008-05-05 09:28  aargon

	* implementation of the Qore::Dir class for handling directories.

2008-05-05 06:31  david_nichols

	* updated scanner to allow "exists" to be a valid function or
	  method name

2008-04-29 07:04  david_nichols

	* updated release notes text

2008-04-28 14:24  david_nichols

	* implemented a maximum HTTP header size of 16K so malicious
	  messages cannot fill up all available memory

2008-04-28 08:16  david_nichols

	* disabled debugging statement

2008-04-28 08:08  david_nichols

	* use QoreThreadLocalStorage class instead of pthread key
	  functionality directly to make porting to non-pthread
	  environments easier in the future; fixed object accesses to allow
	  access to the object from within the class after the destructor
	  starts running

2008-04-26 11:20  david_nichols

	* added SHA224(), SHA256(), SHA384(), SHA512() digest functions (as
	  well as related *_bin() functions)

2008-04-25 08:21  david_nichols

	* updated copyright notices to 2008

2008-04-24 07:01  david_nichols

	* qt fixes

2008-04-24 06:34  david_nichols

	* qt updates

2008-04-24 06:34  david_nichols

	* added bzip content-encoding support

2008-04-24 05:32  david_nichols

	* updated HTTPServer to support bzip2 content-encoding

2008-04-23 13:14  david_nichols

	* exported some QoreObject functions, corrected styles.q to confirm
	  to new qt API

2008-04-23 13:04  david_nichols

	* rewrote the ForEachStatement execution code to be more efficient
	  and use the new LValueHelper class; implemented support for
	  memberNotification methods; added memberNotification methods to
	  QStyleOption* classes to automatically retrieve and set option
	  values when Qore members are read or set

2008-04-22 11:21  david_nichols

	* qt: added QTextLayout class, other misc. fixes

2008-04-22 08:10  david_nichols

	* renamed all instances of "FunctionReference" to "CallReference"

2008-04-21 13:43  david_nichols

	* use the new get_script_dir() function in qt example scripts to
	  find resources when the scripts are not started in the same
	  directory of the script

2008-04-21 13:41  david_nichols

	* added ability to save the script directory to the QoreProgram
	  class; added the get_script_dir() function to get the script
	  directory; added the Program::getScriptDir() and
	  Program::setScriptDir() methods

2008-04-21 06:57  david_nichols

	* improved module dependency error reporting

2008-04-21 06:54  david_nichols

	* implemented module dependencies, made "opengl" a dependency of
	  "glut"

2008-04-21 05:04  david_nichols

	* added QoreHashNode::empty() and QoreListNode::empty() functions

2008-04-20 15:02  david_nichols

	* fixed misapplied patchx

2008-04-19 20:02  david_nichols

	* minor updates

2008-04-19 16:59  david_nichols

	* updated configure for TIBCO SDK 5.5

2008-04-19 16:55  david_nichols

	* fixed typo

2008-04-19 16:49  david_nichols

	* ifdef'ed out Qorefile::preallocate() based on non-standard
	  fcntl() API

2008-04-19 16:47  david_nichols

	* fix for compiling with g+32

2008-04-19 06:41  david_nichols

	* fixed QoreFile::preallocate() signature to use a reference

2008-04-19 06:40  david_nichols

	* added a public QoreFile::preallocate() method (c++ class)

2008-04-19 05:06  david_nichols

	* qt: new classes, fixes

2008-04-19 05:06  david_nichols

	* enhanced ReferenceHelper functionality

2008-04-17 12:32  david_nichols

	* qt updates, new qt open example: "hellogl.q"

2008-04-17 08:50  david_nichols

	* missing files

2008-04-17 08:44  david_nichols

	* qt updates

2008-04-17 08:44  david_nichols

	* added bz2 functionality and tests

2008-04-16 08:27  david_nichols

	* fixed a typo

2008-04-16 08:25  david_nichols

	* qt: new classes, fixes, made dragging the cannon's barrel in the
	  tutorial.q example program finally work properly

2008-04-15 19:32  david_nichols

	* added the QGLPixelBuffer class

2008-04-15 15:27  david_nichols

	* updated QGLWidget to support virtual methods, grabber.q qt opengl
	  example (mostly) working now

2008-04-15 14:21  david_nichols

	* qt opengl updates, new example

2008-04-15 13:09  david_nichols

	* example updates

2008-04-15 11:54  david_nichols

	* opengl: added new example "atlantis.q"

2008-04-14 15:32  david_nichols

	* new opengl functions

2008-04-14 15:31  david_nichols

	* updates

2008-04-12 18:43  david_nichols

	* compile fixes

2008-04-12 05:21  david_nichols

	* set executable property

2008-04-11 14:48  david_nichols

	* implemented File clas locking based on fcntl instead of flock

2008-04-11 08:25  david_nichols

	* added opengl-logo.q, removed M_PI constant definitions (now in
	  the qore library)

2008-04-11 08:24  david_nichols

	* doc updates

2008-04-11 08:24  david_nichols

	* moved file constants to QC_File with other file constants

2008-04-11 07:24  david_nichols

	* tagged all functions as QDOM_GUI

2008-04-11 07:23  david_nichols

	* linux compile fixes

2008-04-11 07:19  david_nichols

	* tagged all functions with QDOM_GUI

2008-04-11 07:18  david_nichols

	* tagged all functions with QDOM_GUI

2008-04-11 07:07  david_nichols

	* moved documentation to doxygen directory

2008-04-11 07:06  david_nichols

	* added chown() and lchown() functions, added File::lock() method
	  based on flock(), added File::chown() method based on fchown()

2008-04-10 19:51  david_nichols

	* workarounds for problems on darwin

2008-04-10 17:09  david_nichols

	* fixed keyboard controls

2008-04-10 13:41  david_nichols

	* bug fixes

2008-04-10 13:34  david_nichols

	* updated for mesa: reshape is not called for initial window
	  creation

2008-04-10 13:14  david_nichols

	* missing file

2008-04-10 13:13  david_nichols

	* opengl binding fixes and enhancements

2008-04-10 08:01  david_nichols

	* compile fixes for mesa

2008-04-10 06:54  david_nichols

	* opengl additions

2008-04-09 11:34  david_nichols

	* added many more opengl functions and commented-out stubs for
	  those where c++ bindings to qore could not be automatically
	  generated

2008-04-09 11:33  david_nichols

	* fixed typo in filename

2008-04-09 08:32  david_nichols

	* updates to compile with freeglut

2008-04-09 08:24  david_nichols

	* added missing files

2008-04-09 08:24  david_nichols

	* glut: added mappings for the entire glut API from glut.h, added
	  refRefSelf() to ResolvedFunctionReferenceNode

2008-04-08 14:43  david_nichols

	* removed extranneous spaces

2008-04-08 14:37  david_nichols

	* bug fix for qlayout objects

2008-04-08 13:44  david_nichols

	* new opengl/glut example, opengl and glut additions

2008-04-08 12:00  david_nichols

	* implemented new gears example of classic 3 spinning gears,
	  renamed old slow gears example to gears2.q

2008-04-08 11:26  david_nichols

	* disabled debugging statement

2008-04-08 11:25  david_nichols

	* fixes

2008-04-08 11:05  david_nichols

	* opengl updates and fix for list argument processing with call
	  references

2008-04-08 07:46  david_nichols

	* fixed glut linking on non-osx platforms

2008-04-08 07:43  david_nichols

	* fixes for glut detection and compilation with freeglut on linux

2008-04-08 07:37  david_nichols

	* opengl changes and glut module addition

2008-04-07 14:21  david_nichols

	* updated error message

2008-04-07 14:19  david_nichols

	* compile fixes for opengl with mesa

2008-04-07 14:19  david_nichols

	* compile fixes for mesa

2008-04-07 14:03  david_nichols

	* fixed include file for non-opengl-certified libraries (i.e. mesa)

2008-04-07 13:51  david_nichols

	* opengl additions, qt fixes

2008-04-07 11:39  david_nichols

	* qt updates

2008-04-04 06:24  david_nichols

	* move graphic files to the appropriate subdirectoriesx

2008-04-04 06:14  david_nichols

	* added QtXml to link path with qt module

2008-04-03 20:26  david_nichols

	* corrected typo

2008-04-03 20:24  david_nichols

	* removed invalid files

2008-04-02 14:12  david_nichols

	* removed old files

2008-04-02 14:04  david_nichols

	* qt: QLayout fixes, QLayoutItem and other new classes added

2008-04-01 11:31  david_nichols

	* qt: added initial openGL functionality and example

2008-03-31 20:12  david_nichols

	* qt: started adding GL support

2008-03-31 12:42  david_nichols

	* qt: added QStackedLayout class, bug fixes

2008-03-26 14:57  david_nichols

	* more qt updates, migrating messy include code and defines to
	  templates

2008-03-26 12:22  david_nichols

	* qt: massive updates to ensure correct object lifecycle management
	  and to move QObject subclass implementations into templated
	  classes from messy include files; updated Qore's object subsystem
	  to allow objects to postpone deletion when going out of scope if
	  the private data is managed externally to qore and the object
	  must remain valid for the lifetime of the private data

2008-03-22 16:34  david_nichols

	* qt: fixed + added tadialog.q example

2008-03-22 14:19  david_nichols

	* qt: new classes, examples, and bugfixes

2008-03-22 10:35  david_nichols

	* qt: bugfixes, implemented QProgressDialog, added findfiles.q
	  example; eliminated QoreObject::ref() function (already
	  implemented in AbstractQoreNode base class), made "find" usable
	  as a function or method name

2008-03-21 19:34  david_nichols

	* doxygen update

2008-03-21 18:47  david_nichols

	* major doxygen updates

2008-03-21 13:21  david_nichols

	* doxygen updates

2008-03-21 13:17  david_nichols

	* implemented ReferenceHelper class, API and doxygen updates

2008-03-20 15:12  david_nichols

	* fixed a bug serializing xml attributes

2008-03-20 14:49  david_nichols

	* readded accidentally-deleted function

2008-03-20 14:38  david_nichols

	* corrected typo

2008-03-20 14:37  david_nichols

	* fixed some bugs in the mysql driver related to new API changes,
	  eliminated the "auto_commit" DBI method (commit will be executed
	  automatically in the auto_commit context for drivers that do not
	  have a "begin_transaction" method), API and doxygen updates

2008-03-15 14:42  david_nichols

	* doxygen and api updates

2008-03-14 05:16  david_nichols

	* doxygen and api updates

2008-03-12 09:56  david_nichols

	* API and doxygen updates

2008-03-12 09:22  david_nichols

	* more API and doxygen updates

2008-03-12 05:44  david_nichols

	* doxygen and api updates, implemented QoreProgramHelper class

2008-03-06 20:26  david_nichols

	* doxygen and api updates

2008-03-05 08:10  david_nichols

	* corrected function signature

2008-03-04 21:08  david_nichols

	* API and doxygen updates, NULL -> 0

2008-03-04 15:56  david_nichols

	* make QoreHashNode implementation private; more doxygen and API
	  updates; implemented qore_size_t and qore_offset_t types

2008-03-04 05:32  david_nichols

	* API cleanups and doxygen updates

2008-03-03 19:57  david_nichols

	* API and doxygen updates

2008-03-03 08:46  david_nichols

	* doxygen updates

2008-03-02 07:19  david_nichols

	* API and doxygen updates

2008-02-29 17:03  david_nichols

	* api and doxygen updates, QoreSocket::recv() fix

2008-02-28 21:33  david_nichols

	* API and doxygen updates

2008-02-28 17:51  david_nichols

	* api and doxygen updates

2008-02-28 07:33  david_nichols

	* unimplemented thread-key-based local variable lookups as there
	  are only a very limited number of thread keys available on Linux
	  and Mac :-(

2008-02-28 07:32  david_nichols

	* unimplemented thread-key-based local variable lookups as there
	  are only a very limited number of thread keys available on Linux
	  and Mac :-(

2008-02-27 20:29  david_nichols

	* API, doxygen, and release notes updates

2008-02-27 18:20  david_nichols

	* fixes related to new API

2008-02-27 17:33  david_nichols

	* fixes to confirm to new api

2008-02-27 17:30  david_nichols

	* implemented new local variable handling for performance reasons

2008-02-27 05:42  david_nichols

	* updated API for ::getPending*() functions to return
	  QoreStringNode pointers instead of AbstractQoreNode pointers

2008-02-26 18:24  david_nichols

	* implemented PO_TERMINAL_IO restriction to prohibit terminal I/O;
	  started changing defines to enums and documenting them;
	  simplified system constructor execution

2008-02-25 18:16  david_nichols

	* update to new API

2008-02-25 18:01  david_nichols

	* doxygen updates

2008-02-25 15:44  david_nichols

	* API cleanups

2008-02-25 15:07  david_nichols

	* api and reference-counting fixes

2008-02-25 14:34  david_nichols

	* api fixes for debugging builds and reference-counting fixes

2008-02-25 14:06  david_nichols

	* update to new qore_type_t API change

2008-02-25 14:00  david_nichols

	* fix for new QoreBoolNode API

2008-02-25 13:59  david_nichols

	* fix for new QoreBoolNode API

2008-02-25 13:57  david_nichols

	* split QoreBoolNode into QoreBoolTrueNode and QoreBoolFalseNode,
	  made them unique in the library (there will only ever be one of
	  each); removed the QoreType class, node type is now a code
	  (qore_type_t); packed type and boolean bits into less than 2
	  bytes in AbstractQoreNode

2008-02-25 11:55  david_nichols

	* performance-related API changes

2008-02-22 20:18  david_nichols

	* api and doxygen updated, performance-related changes

2008-02-19 21:28  david_nichols

	* API cleanups and doxygen updates

2008-02-19 21:18  david_nichols

	* updated to new API and fixed the QPixmap constructor

2008-02-19 20:15  david_nichols

	* compile fix for new API

2008-02-19 20:11  david_nichols

	* updates to new API

2008-02-19 19:59  david_nichols

	* API cleanups and doxygen updates

2008-02-19 05:48  david_nichols

	* api and doxygen updates

2008-02-18 13:50  david_nichols

	* API and doxygen updates

2008-02-16 07:40  david_nichols

	* doxygen doc and todo updates

2008-02-15 21:34  david_nichols

	* "const" and api updates, doxygen doc updates

2008-02-15 05:27  david_nichols

	* documentation updates

2008-02-14 20:03  david_nichols

	* API updates and doxygen API documentation updates

2008-02-14 17:07  david_nichols

	* fixed json helper functions and JsonRpcClient class

2008-02-14 16:32  david_nichols

	* fixed a memory error in QoreString::addch()

2008-02-14 14:53  david_nichols

	* fix to compile with new API

2008-02-14 14:48  david_nichols

	* fixes for new API changes

2008-02-14 14:45  david_nichols

	* more API doxygen comments, eliminated QoreHash, QoreHashNode is
	  the only hash implementation

2008-02-13 17:39  david_nichols

	* compile patches and doxygen updates for generating interal
	  documentation on the qore c++ API (finally)

2008-02-12 20:49  david_nichols

	* more performance patches

2008-02-12 18:52  david_nichols

	* performance patches

2008-02-12 18:27  david_nichols

	* more performance patches

2008-02-12 16:46  david_nichols

	* various performance and compile fixes

2008-02-12 15:51  david_nichols

	* more performance patches

2008-02-12 15:03  david_nichols

	* performance optimizations

2008-02-09 07:03  david_nichols

	* fixed a bug where a local variable declared as an immediate call
	  reference call would cause a run-time core dump

2008-02-07 18:16  david_nichols

	* minor fix

2008-02-07 18:09  david_nichols

	* added listRefSelf() and hashRefSelf() functions

2008-02-07 09:15  david_nichols

	* fixed bug in constructor

2008-02-05 15:34  david_nichols

	* fix for debugging builds

2008-02-05 15:32  david_nichols

	* fixes for debugging builds

2008-02-05 15:14  david_nichols

	* various performance patches

2008-02-05 06:16  david_nichols

	* various fixes

2008-02-05 06:14  david_nichols

	* made AutoVLock implementation public again; for performance
	  reasons this object mus bee allocated on the stack

2008-02-05 05:36  david_nichols

	* fixed typo

2008-02-04 20:26  david_nichols

	* minor fixes

2008-02-04 20:17  david_nichols

	* fixes to operators, enhancements to VarRefNode

2008-02-04 18:22  david_nichols

	* updates to compile with new API

2008-02-04 17:53  david_nichols

	* compile fixes for new api

2008-02-04 17:25  david_nichols

	* fixes to compile with new api changes

2008-02-04 17:21  david_nichols

	* more const correctness changes

2008-02-02 12:29  david_nichols

	* compile fix for new api

2008-02-02 12:21  david_nichols

	* more "const" fixes, preparing to make get_params() and
	  test_*params() functions return const pointers

2008-02-02 07:32  david_nichols

	* fixed typo

2008-02-02 07:28  david_nichols

	* renamed QoreNode to AbstractQoreNode

2008-02-01 17:17  david_nichols

	* getAsString() fixes

2008-02-01 15:53  david_nichols

	* added a test for a find expression that returns multiple rows

2008-02-01 15:52  david_nichols

	* various fixes

2008-02-01 08:22  david_nichols

	* fixed some typos, misc fixes

2008-01-31 21:18  david_nichols

	* fixed a reference counting bug with call references (related to
	  new api changes)

2008-01-31 19:30  david_nichols

	* QoreNode is now an abstract base class

2008-01-31 08:34  david_nichols

	* implemented AbstractFunctionReferenceNode as QoreNode subtype

2008-01-31 06:20  david_nichols

	* new QoreNode subclass implementations

2008-01-30 07:23  david_nichols

	* fixes for Linux - dev_t is an unsigned 64-bit integer on Linux

2008-01-30 07:13  david_nichols

	* updates for new apix

2008-01-30 07:11  david_nichols

	* implemented ReferenceNode as QoreNode subtype

2008-01-29 20:44  david_nichols

	* compile fixes

2008-01-29 20:37  david_nichols

	* new ScopedObjectCallNode QoreNode subclass

2008-01-29 20:14  david_nichols

	* new QoreNode subclasses

2008-01-28 20:53  david_nichols

	* updates to new api

2008-01-28 20:48  david_nichols

	* fixed floating-point to string conversion

2008-01-28 20:36  david_nichols

	* fixed typos

2008-01-28 20:33  david_nichols

	* BinaryObject implemented as QoreNode subclass; QoreList renamed
	  to QoreListNode; BinaryObject renamed to BinaryNode; implemented
	  QoreBigIntNode as QoreNode subclass for 64-bit integer type;
	  QoreBoolNode implemented as QoreNode subclass for boolean type

2008-01-27 13:13  david_nichols

	* QoreObject implemented as QoreNode subclass

2008-01-25 09:11  david_nichols

	* fixed q_sprintf header to reflect new API changes

2008-01-25 09:03  david_nichols

	* fixed $argv handling in user constructor execution (fix related
	  to new api changes)

2008-01-25 08:47  david_nichols

	* fixed missing delete code related to new api changes

2008-01-25 08:30  david_nichols

	* fixes related to new api changes

2008-01-24 21:18  david_nichols

	* updates to new api changes

2008-01-24 20:54  david_nichols

	* QoreList implemented as QoreNode subtype

2008-01-23 13:09  david_nichols

	* fixed typo in default exception handler

2008-01-23 12:34  david_nichols

	* tibae fixes re new API

2008-01-23 12:34  david_nichols

	* module loading error handling update to new api

2008-01-23 12:17  david_nichols

	* (untested) tuxedo updates to recent API changes

2008-01-23 11:36  david_nichols

	* added QoreHashNode as subclass of QoreNode, removed most QoreType
	  functions

2008-01-20 08:26  david_nichols

	* updated to new API

2008-01-16 19:28  david_nichols

	* globally change QoreNode * type->getName() to getTypeName()

2008-01-16 12:06  david_nichols

	* fixes related to new API changes

2008-01-16 09:53  david_nichols

	* DateTimeNode created as QoreNode subclass, bug fixes related to
	  new API changes

2008-01-15 14:21  david_nichols

	* operator optimizations and fixes

2008-01-15 11:38  david_nichols

	* fixed hash and object addition

2008-01-15 10:05  david_nichols

	* fixed misuse of q_sprintf

2008-01-15 09:55  david_nichols

	* fixed http message sending

2008-01-15 09:16  david_nichols

	* fixed double free error

2008-01-15 09:10  david_nichols

	* fixed hash addition with diverging argument types

2008-01-15 08:58  david_nichols

	* fixed off-by-1 bugs in QoreString

2008-01-15 08:12  david_nichols

	* added missing dbi method function

2008-01-15 07:58  david_nichols

	* fixes to compile with new api

2008-01-14 22:33  david_nichols

	* fixes for new API

2008-01-14 21:10  david_nichols

	* new api fixes

2008-01-14 21:05  david_nichols

	* fix related to recent api changes

2008-01-14 20:13  david_nichols

	* fixed typos for new api changes

2008-01-14 20:12  david_nichols

	* missing file

2008-01-14 20:05  david_nichols

	* first part of new type system implementation: QoreNode is being
	  split into subclasses; at the end of the migration, it will be an
	  abstract class. QoreStringNode is the first subclass. Operator
	  implementation has been reworked and is much more efficient with
	  data type conversions. More classes have been added for managing
	  resources. Many bugs were fixed as well (fixes also ported to
	  0.6.2 branch)

2008-01-14 19:59  david_nichols

	* do not set visibility to hidden by default with g++ because it
	  hides RTTI symbols, all symbols are tagged for visibility in the
	  library's header files anyway

2007-12-31 10:54  david_nichols

	* "const" updates for API changes

2007-12-22 12:53  david_nichols

	* more API - "const" fixes

2007-12-22 06:39  david_nichols

	* more "const correctness" changes

2007-12-21 19:09  david_nichols

	* lots of fixes for "const correctness"

2007-12-20 21:30  david_nichols

	* chnagelog update

2007-12-20 21:28  david_nichols

	* fixed a bug in the Datasource class where an exception in the
	  first statement of an implicit transaction would erroneously grab
	  the transaction lock

2007-12-19 13:50  david_nichols

	* throw a parse exception if a "rethrow" statement is found outside
	  of a catch block

2007-12-19 09:24  david_nichols

	* commented out unnecessary debugging statement

2007-12-19 09:23  david_nichols

	* fixed stupid bug in QoreNodeEvalOptionalRefHolder

2007-12-19 09:14  david_nichols

	* updated QoreSignalManager to respect library option
	  QLO_DISABLE_SIGNAL_HANDLING

2007-12-17 08:10  david_nichols

	* todo update

2007-12-17 08:10  david_nichols

	* tuxedo compile fix for new API

2007-12-17 06:59  david_nichols

	* missing file

2007-12-17 06:55  david_nichols

	* implemented hash - list and hash -= list operators to delete
	  multiple hash keys in one expression; fixed a potential rare
	  memory leak in exception handling in Operator.cc (3 places);
	  ensure that argument list is unique before modifying in
	  QoreClass::evalMethodGate(); more SMP cache sync optimizations by
	  eliminating atomic reference operations where possible by
	  applying QoreNodeEvalOptionalRefHolder

2007-12-16 13:04  david_nichols

	* API updates for const correctness

2007-12-15 09:19  david_nichols

	* implemented QoreNodeEvalOptionalRefHolder class as an
	  exception-safe and memory-clean way to handle QoreNode
	  evaluations with optional derefs; massive API updates (applied
	  "const" tags to many functions)

2007-12-13 20:34  david_nichols

	* made QoreObject::evalMethod() private to the library

2007-12-13 20:11  david_nichols

	* header file cleanups, QoreURL private implementation

2007-12-13 15:20  david_nichols

	* made QoreString implementation private

2007-12-13 14:57  david_nichols

	* made QoreSocket implementation private

2007-12-13 14:24  david_nichols

	* more header file cleanups

2007-12-13 13:31  david_nichols

	* made QoreList implementation private, corrected erroneous printd
	  in Operator.cc

2007-12-13 13:11  david_nichols

	* updated feature list handling, streamlined data structures

2007-12-13 09:37  david_nichols

	* fixed ncurses, pgsql, tibrv, tuxedo, and qt module namespace
	  handling for subprogram objects

2007-12-13 08:48  david_nichols

	* additional debugging statement

2007-12-13 08:48  david_nichols

	* fixed tibae namespace handling for subprogram objects

2007-12-10 12:33  david_nichols

	* made some QoreMethod functions public

2007-12-10 12:32  david_nichols

	* fixed includes in tuxedo.cc

2007-12-09 09:11  david_nichols

	* made QoreFile.h a public header file, made implementation private

2007-12-09 08:57  david_nichols

	* made QoreHTTPClient implementation private, more header file
	  reorgs

2007-12-08 12:51  david_nichols

	* made QoreException and ExceptionSink implementations private,
	  more header file reorg

2007-12-08 09:54  david_nichols

	* renamed Namespace, RootNamespace, and NamespaceList to
	  QoreNamespace, RootQoreNamespace, and QoreNamespaceList to avoid
	  name clashes

2007-12-08 09:41  david_nichols

	* missing files

2007-12-08 09:39  david_nichols

	* more header file cleanups; made Namespace implmentation private;
	  made DBI class and structure implementations private; made
	  QoreProgram implementation private

2007-12-06 20:43  david_nichols

	* updated DateTime, Datasource, FtpClient implementations

2007-12-06 17:50  david_nichols

	* made ReferenceObject, QoreClass, QoreMethod, QoreObject,
	  QoreSSLCertificate, QoreSSLPrivateKey implementations private
	  (pimpl); renamed Method to QoreMethod, started header file
	  cleanup

2007-12-05 21:30  david_nichols

	* name change updates

2007-12-05 21:28  david_nichols

	* name change updates

2007-12-05 16:53  david_nichols

	* fixed for new file names

2007-12-05 16:09  david_nichols

	* renamed Hash to QoreHash, Object to QoreObject, and Exception to
	  QoreException to avoid potential clashes with other code

2007-12-05 08:46  david_nichols

	* debugging updates

2007-12-04 16:16  david_nichols

	* various fixes, tibco sdk compile, minor debugging patches

2007-12-04 16:15  david_nichols

	* qt: warning fixes

2007-12-04 09:20  david_nichols

	* fixed a memory leak in string parsing

2007-12-04 08:31  david_nichols

	* qt: new class QToolBar, fixes

2007-12-01 09:25  david_nichols

	* qt: new example "extension.q", new classes

2007-11-29 20:16  david_nichols

	* qt: new example "classwizard.q", qt: new classes and QDialog
	  improvements

2007-11-29 11:26  david_nichols

	* qt: new example "systray.q"

2007-11-29 11:16  david_nichols

	* qt updates, enhanced event handling

2007-11-29 11:16  david_nichols

	* cosmetic update

2007-11-28 08:00  david_nichols

	* qt: new example program "screenshot.q", qt: new methods,
	  constants, implemented QDesktopWidget class, new QSystemTrayIcon
	  class

2007-11-26 18:54  david_nichols

	* qt: new example program "windowflags.q"

2007-11-26 18:03  david_nichols

	* fixed a systematic typo caused by coping and pasting

2007-11-26 18:02  david_nichols

	* qt: new example program "wiggly.q"

2007-11-26 17:44  david_nichols

	* qt: fixed QPen constructor PenStyle argument processing

2007-11-25 14:24  david_nichols

	* List -> QoreList fixes

2007-11-25 08:31  david_nichols

	* qt: event handling fixes, new examples: "tooltips.q"

2007-11-22 18:14  david_nichols

	* renamed class "List" to "QoreList" to avoid name clashes; fixed
	  destruction order for local variables; fixed destruction order
	  for global variables; qt: many bugfixes, some QObject event
	  handling; qt: new "tetrix.q" example

2007-11-21 18:01  david_nichols

	* commented out tests as they are not included in "make dist" tar
	  files
	  qt: more various bugfixes

2007-11-20 18:41  david_nichols

	* qt: bugfixes and updates to make new style.q example file mostly
	  work

2007-11-20 06:33  david_nichols

	* qt: fix initialization order in qt.cc regarding qstyleoptions

2007-11-17 06:04  david_nichols

	* do not throw an exception with sort*() when the first argument is
	  not a list - just return it

2007-11-17 06:04  david_nichols

	* do not send the default "Content-Type" header when there is no
	  data

2007-10-29 05:49  david_nichols

	* added a note to compress() and gzip() that strings are compressed
	  without the trailing null characters

2007-10-28 05:29  david_nichols

	* new qstyle example

2007-10-28 05:28  david_nichols

	* qt: qstyle updates
	  do not include the trailing null when compressing strings with
	  gzip or deflate methods, in particular this causes problems with
	  browsers and XML-RPC or JSON-RPC HTTP payloads

2007-10-16 18:22  david_nichols

	* removed extraneous, unneeded and confusing QoreNode constructor

2007-10-16 18:21  david_nichols

	* fixed a memory bug in XML parsing with multiple out-of-order keys

2007-10-15 08:45  david_nichols

	* qt: new classes, fixes; updated parser to accept consecutive
	  quoted strings and automatically concatenate them together
	  instead of throwing a parse exception

2007-10-01 05:22  david_nichols

	* qt: enabled QStyle to be subclassed and extended in Qore

2007-09-28 12:03  david_nichols

	* fixes and new classes

2007-09-28 09:37  david_nichols

	* qt: new sliders.q and spinboxes.q examples, new classes,
	  constants, fixes

2007-09-28 07:11  david_nichols

	* added missing files

2007-09-28 07:08  david_nichols

	* qt: new shapedclock.q example, various fixes, cleanups and
	  additions

2007-09-27 17:13  david_nichols

	* qt: fixes, new classes and constants, new scribble.q example

2007-09-26 15:54  david_nichols

	* qt: fixes, new qt example: movieplayer.q (run from example
	  directory so icons can be loaded)

2007-09-26 14:05  david_nichols

	* qt: fixed QValidator, lineedits.q example working

2007-09-25 15:22  david_nichols

	* qt: new classes, mostly-implemented linedits.q example

2007-09-25 07:17  david_nichols

	* updated debugging function

2007-09-25 07:15  david_nichols

	* fixed a memory bug in QoreString::parseBase64ToString()

2007-09-24 12:19  david_nichols

	* fixed a stupid memory bug in QoreString when instantiating from a
	  boolean argument

2007-09-24 07:50  david_nichols

	* qt: added missing files

2007-09-24 07:50  david_nichols

	* updates to allow for callbacks with arguments passed by reference

2007-09-22 20:01  david_nichols

	* bugfixes

2007-09-22 07:25  david_nichols

	* corrected typo on darwin

2007-09-22 07:23  david_nichols

	* missing file

2007-09-22 06:26  david_nichols

	* qt: bug fixes

2007-09-22 06:13  david_nichols

	* qt: fixed signal emission with QString argument

2007-09-22 06:08  david_nichols

	* qt: fixed QPainter object management errors

2007-09-21 20:09  david_nichols

	* bugfix

2007-09-21 15:30  david_nichols

	* small fixes

2007-09-21 15:22  david_nichols

	* added new example file

2007-09-21 15:21  david_nichols

	* qt: changes/fixes, added imageviewer.q example

2007-09-21 14:12  david_nichols

	* qt: changes/fixes to allow the icons.q example to run

2007-09-21 09:50  david_nichols

	* qt updates

2007-09-21 06:21  david_nichols

	* qt: bug fixes, new classes, partially-complete icons.q example
	  support

2007-09-18 17:02  david_nichols

	* qt: preparing for icons example, more fixes, more classes, etc

2007-09-18 13:51  david_nichols

	* qt: added groupbox example, bug fixes

2007-09-18 08:50  david_nichols

	* qt: improved widget event handling, fixed some bugs

2007-09-18 07:23  david_nichols

	* initial check-in

2007-09-18 07:13  david_nichols

	* qt: all widget events implemented, new classes, constants, etc,
	  improved qore <-> qt type handling, charactermap example
	  partially implemented

2007-09-08 06:00  david_nichols

	* qt fixes, improved Qore <-> QVariant mapping

2007-09-07 14:49  david_nichols

	* added calendarwidget for real this time

2007-09-07 14:47  david_nichols

	* qt: added calendarwidget example, new classes, etc

2007-09-05 12:13  david_nichols

	* qt: map QObject to Qore Object using QObject properties; new
	  classes, methods, constants, etc; added calculator example

2007-09-04 11:52  david_nichols

	* fixed QPainter::setBrush()

2007-09-04 09:17  david_nichols

	* added analogclock example

2007-09-04 08:47  david_nichols

	* new directory for qt examples

2007-09-04 05:11  david_nichols

	* implemented support for dynamic signals and slots for QShortcut;
	  major qt-code-gen.q improvements, added new classes

2007-08-28 14:59  david_nichols

	* implemented decode_url() to decode URL escape encodings; updated
	  HTTPClient to automatically encode space (' ') characters as
	  '%20' in the path before sending

2007-08-27 15:54  david_nichols

	* updated to tutorial/example 14, added new classes, enums,
	  implemented better event handling for QWidget classes

2007-08-27 08:25  david_nichols

	* updated to tutorial/example 13, make PenStyle a unique Qore type

2007-08-18 07:14  david_nichols

	* http path fix note

2007-08-14 07:17  david_nichols

	* new classes, updates

2007-08-04 06:04  david_nichols

	* qoreclass parse error message fixes

2007-08-03 08:00  david_nichols

	* added QKeySequence class

2007-08-03 07:44  david_nichols

	* added QIcon class

2007-08-02 06:56  david_nichols

	* make Qt::BrushStyle an independent type so that it can be
	  distiguished from Qt::GlobalColor

2007-08-01 16:21  david_nichols

	* disabled handle function

2007-08-01 16:21  david_nichols

	* disabled x11-specific function

2007-08-01 16:18  david_nichols

	* new classes, updated qt bindings and example to tutorial example
	  12

2007-08-01 08:10  david_nichols

	* updated qt bindings and support to qt tutorial example 11

2007-08-01 07:13  david_nichols

	* updated meta-code generator to deal with overloaded c++ functions
	  - updated qt bindings and example to support qt tutorial 10

2007-07-31 11:48  david_nichols

	* qt updates - updated to example 9

2007-07-31 09:14  david_nichols

	* new classes, support for emitting signals from qore code, example
	  and Qore qt support updated to QT tutorial 8

2007-07-30 08:13  david_nichols

	* qt: implemented dynamic signal and slot qore<->qt glue layer with
	  support for a limited number of c-style data types; qore wrapper
	  objects have the same lifetime as qt objects unless explicitly
	  deleted

2007-07-26 10:54  david_nichols

	* fixed a thread resource management bug in the DatasourcePool
	  class (thread resource errors would cause a crash)

2007-07-25 13:30  david_nichols

	* more methods

2007-07-25 12:37  david_nichols

	* missing files

2007-07-25 12:37  david_nichols

	* qt class updates

2007-07-25 08:04  david_nichols

	* removed destructor code

2007-07-24 19:18  david_nichols

	* qt updates

2007-07-24 13:19  david_nichols

	* marked virtual private data as virtual, added new QWidget methods

2007-07-24 12:59  david_nichols

	* fixed typos, implemented a few new simple functions

2007-07-24 12:49  david_nichols

	* added supoprt for builtin virtual base classes in builtin class
	  hierarchies; removed metaclass tagging for object private data;
	  qt: reworked class inheritance model based on new virtual base
	  class support

2007-07-24 08:47  david_nichols

	* qt updates

2007-07-22 21:45  david_nichols

	* more QT classes, methods, constants, etc

2007-07-22 17:03  david_nichols

	* qt: new class hierarchy infrastructure support to better model
	  QT's class hierarchy, function templates, etc; metaclass support
	  for Qore objects

2007-07-19 14:58  david_nichols

	* fixes for qt detection and compilation on non-darwin machines

2007-07-19 14:45  david_nichols

	* only one QApplication can exist at any one time

2007-07-19 14:35  david_nichols

	* started adding qt module

2007-07-19 07:25  david_nichols

	* fixed a bug in HTTPClient::head()

2007-07-19 07:24  david_nichols

	* doc update

2007-07-17 08:35  david_nichols

	* implemented File::open2() method that throws an exception if the
	  file cannot be opened, updated documentation to reflect 0.7.0
	  version number

2007-07-17 08:12  david_nichols

	* implemented %s in queries to allow for direct string insertion
	  (without any escaping) to facilitate support for table name
	  prefixes, etc, updated library version to 4-0-1, updated version
	  number to 0.7.0, updated module API to 0.4 (need to add
	  compatibility info), updated spec file for library version 3.1.0,
	  fixed a bug where null values could be inserted into the parse
	  tree, causing a core dump (i.e.: "hello"[1] - this is not yet
	  legal, support for this will be implemented in this release, but
	  before this bug fix a core dump would result), implemented string
	  position dereferences with the list dereference operator "[]"

2007-07-16 16:00  david_nichols

	* fixed compile with 64-bit sybase libs on platforms other than
	  linux

2007-07-14 20:42  david_nichols

	* updated version to 0.7.0 - cleaned up and updated spec file

2007-06-22 05:59  david_nichols

	* marked 0.6.2 release

2007-06-22 05:58  david_nichols

	* doc updates

2007-06-15 07:58  david_nichols

	* updated spec file, should have gone in 0.6.2 release!

2007-06-15 06:24  david_nichols

	* minor updates

2007-06-14 10:34  david_nichols

	* fix for sybase compiles with ASE 12.5

2007-06-14 04:22  david_nichols

	* removed copyright notice from JsonRpcHandler

2007-06-14 04:18  david_nichols

	* minor documentation corrections

2007-06-13 04:41  david_nichols

	* fixed rpm packaging, removed tibae module from i386 packages due
	  to compiler requirements, must build from source

2007-06-13 04:18  david_nichols

	* release notes update

2007-06-12 17:16  david_nichols

	* updated oracle notes for hp-ux pa-risc regarding stability and
	  locking issues with 10g client libraries

2007-06-12 16:52  david_nichols

	* fixed some potential memory leaks with obscure initilization
	  errors

2007-06-12 07:33  david_nichols

	* fixed typo in configure in HPUX version detection

2007-06-12 07:29  david_nichols

	* fixed HPUX aCC threading issues by including
	  -D_RWSTD_MULTI_THREAD

2007-06-11 15:59  david_nichols

	* solaris and hpux compile fixes

2007-06-11 15:37  david_nichols

	* fixed configure for 64-bit editions of Sybase

2007-06-10 17:31  david_nichols

	* updated and commented-out debugging statement

2007-06-10 13:39  david_nichols

	* udpated trim and chomp operators to no longer throw exceptions
	  when the arguments is not of the expected type, instead they
	  ignore the argument

2007-06-09 12:49  david_nichols

	* release notes update

2007-06-09 12:47  david_nichols

	* implemented trim operator, implemented scanner support for
	  vertical tab escape '\v', updated documentation for chomp(),
	  added documentation for the new trim operator and the trim()
	  function, added tests for trim and chomp() with variable
	  references to test/test.q

2007-06-09 05:07  david_nichols

	* fixed += and -= cases when the left-hand-side is NOTHING to take
	  the type of the right-hand-side (i.e. my $str += "hello" will now
	  work as expected (before would prodice $str = 0), updated tests

2007-06-08 09:03  david_nichols

	* updated existsFunction() to always return True if the argument is
	  a call reference, updated release notes

2007-06-08 07:33  david_nichols

	* updates

2007-06-08 06:28  david_nichols

	* fixed typo

2007-06-08 06:24  david_nichols

	* renamed gethostbyname() -> gethostbyname_long() and
	  gethostbyaddr() -> gethostbyaddr_long() and implemented
	  gethostbybname() and gethostbyaddr() to just return a single
	  string for the first address and the official hostname,
	  respectively, added documentation for new gethostby*() functions

2007-06-07 16:58  david_nichols

	* implemented gethostbyname() and gethostbyaddr() functions
	  returning a hash of all hostent information

2007-06-07 11:47  david_nichols

	* missing files

2007-06-07 11:46  david_nichols

	* fixed warnings

2007-06-06 21:14  david_nichols

	* new command-line options -p,--set-parse-option,
	  -o,--list-parse-options

2007-06-06 15:49  david_nichols

	* todo update

2007-06-05 16:12  david_nichols

	* doc updates

2007-06-05 15:54  david_nichols

	* compile fix

2007-06-05 15:53  david_nichols

	* fix for interval conversion

2007-06-05 15:05  david_nichols

	* added tibae_type() function to tibae module, updated
	  serialization to support binary, interval, i*, ui*, r*, time
	  types, added TIBAE_* type constants to "Tibae" namespace for use
	  with the new tibae_type() function, updated test script and
	  updated and fixed test repository new.dat

2007-06-05 13:20  david_nichols

	* compile fixes

2007-06-05 13:18  david_nichols

	* misc updates

2007-06-05 13:16  david_nichols

	* new primitive type override support, binary support

2007-06-05 12:08  david_nichols

	* missing include

2007-06-05 12:06  david_nichols

	* small tibae reorg

2007-06-05 09:09  david_nichols

	* updates doc colors to green, cosmetic updates to httpserver

2007-06-04 08:28  david_nichols

	* fixed signal handling thread to be a special thread with TID 0,
	  no longer appears in get_thread_list() or affects num_threads().
	  Always has TID 0 even after a fork() in both processes

2007-06-04 07:05  david_nichols

	* doc updates, test update

2007-06-03 12:41  david_nichols

	* removed out of date and non-functional test file

2007-06-02 20:33  david_nichols

	* doc update, realloction enhancement (depends on size of object
	  instead of fixed buffering increment), misc changes

2007-06-01 15:45  david_nichols

	* enabled verbose error reporting for ct_connect() failures

2007-06-01 11:04  david_nichols

	* doc update

2007-06-01 10:58  david_nichols

	* implemented support for handling numeric (floating-point) values
	  with sql %d substitution parameter

2007-06-01 10:38  david_nichols

	* doc updates, sybase/mssql updates

2007-06-01 08:22  david_nichols

	* doc updates, new safe ct-lib locale support for development
	  freetds versions

2007-06-01 08:20  david_nichols

	* fixed a memory error in Hash::takeKeyAndDelete()

2007-06-01 07:39  david_nichols

	* sybase/mssql fixes

2007-05-31 14:31  david_nichols

	* backed out last "safe" patch

2007-05-31 14:17  david_nichols

	* slightly safer freetds character encoding hack

2007-05-31 14:17  david_nichols

	* update for aCC

2007-05-31 14:16  david_nichols

	* debugging update

2007-05-31 13:22  david_nichols

	* added support for BIGINT columns

2007-05-31 13:10  david_nichols

	* more sybase/mssql fixes

2007-05-31 12:11  david_nichols

	* made getClientVersion require a connection in the DBI layer,
	  updated drivers, sybase: implemented get_client_version and
	  get_server_version, updated test/db-test.q to supoprt testing
	  mssql with MS SQL Server

2007-05-30 15:25  david_nichols

	* major documentation updates

2007-05-30 15:24  david_nichols

	* moved db-test.q from examples/ to test/

2007-05-30 15:24  david_nichols

	* implemented -c,--charset command-line option to specify the db
	  character encoding for the connection

2007-05-30 15:23  david_nichols

	* implement no-network and no-filesystem parse options and
	  command-line options

2007-05-30 15:23  david_nichols

	* implemented get_epoch_seconds() function

2007-05-30 14:22  david_nichols

	* commented out constant additions, not needed at the moment

2007-05-30 09:12  david_nichols

	* fix for retrieving multiple results under sybase

2007-05-30 09:04  david_nichols

	* sybase: commit major driver re-org, stored proc execution,
	  multiple select results, bugfixes, more

2007-05-29 15:43  david_nichols

	* referenceholder enhancements

2007-05-26 16:06  david_nichols

	* moved comment close to correct position

2007-05-26 16:01  david_nichols

	* sybase/mssql updates and reorgs

2007-05-26 13:22  david_nichols

	* mssql: set connection encoding by setting server_charset in the
	  internal tdslogin structure directly, because freetds has stubs
	  for the ctlib cs_locale functions, sybase: set inline message
	  processing to grab error messages and use them in exception text
	  for more descriptive error messages

2007-05-25 14:22  david_nichols

	* sybase updates

2007-05-25 12:36  david_nichols

	* sybase: fixed %d processing in queries, implemented test, removed
	  extraneous asserts

2007-05-25 11:27  david_nichols

	* improved pgsql tests

2007-05-25 09:12  david_nichols

	* doc updates, sybase bug fix, test update

2007-05-25 08:43  david_nichols

	* implemented round() function, implemented DBI_CAP_BIND_BY_VALUE
	  and DBI_CAP_BIND_BY_PLACEHOLDER constants and tagged drivers
	  appropriately, updated docs, updated sybase tests

2007-05-25 07:33  david_nichols

	* updated includes

2007-05-25 07:31  david_nichols

	* mapped Boolen <-> bit, added test

2007-05-25 07:30  david_nichols

	* pgsql: fixed a bug in converting DECIMAL numbers >9999

2007-05-24 20:23  david_nichols

	* implemented binary binding by value, tests

2007-05-24 19:31  david_nichols

	* fixed char binding by value

2007-05-24 18:56  david_nichols

	* fixed includes, updated docs

2007-05-24 16:08  david_nichols

	* sybase doc updates

2007-05-24 15:31  david_nichols

	* cosmetic changes

2007-05-24 15:30  david_nichols

	* removed ununsed QException from build

2007-05-24 15:17  david_nichols

	* fixed freetds char terminations

2007-05-24 15:05  david_nichols

	* fixed debugging statements

2007-05-24 15:03  david_nichols

	* fixed retrieving char data with freetds (workaround for when
	  freetds does not null-terminate strings)

2007-05-24 15:03  david_nichols

	* made copy constructor and assignment illegal

2007-05-24 14:39  david_nichols

	* updated examples, todo update

2007-05-24 14:29  david_nichols

	* removed numeric processing as it is a duplicate of decimal

2007-05-24 14:19  david_nichols

	* use floating point for conversions to and from Sybase 1/3 second
	  time values, convert TIME to Qore datetime as offset from Qore
	  epoch, fixed native qore type binding, updated mssql and sybase
	  tests in db-test.q

2007-05-24 07:45  david_nichols

	* fix for sybase compiles

2007-05-24 06:58  david_nichols

	* fixed typo

2007-05-24 06:16  david_nichols

	* fixed double stack trace entry when an exception occurs in a
	  builtin method, removed extraneous '\n' from module error
	  reporting with dlerror(), implemented new helper methods for
	  QoreString

2007-05-24 05:49  david_nichols

	* strip off "FATAL: " from pgsql error messages when making
	  exception description string

2007-05-23 18:35  david_nichols

	* removed unnecessary file

2007-05-23 18:34  david_nichols

	* fixed warning, updated oracle test

2007-05-23 17:12  david_nichols

	* updated tests

2007-05-23 15:40  david_nichols

	* build notes update, fix for older freetds headers

2007-05-23 15:33  david_nichols

	* started moving test schema management into db-test.q, added pgsql
	  support

2007-05-23 15:08  david_nichols

	* fixed DECIMAL->string conversions for FreeTDS

2007-05-23 14:50  david_nichols

	* sybase: added support for unichar types, strip trailing blanks
	  from CHAR columns, fixed off-by-one bug in datetime conversions,
	  mapped DECIMAL,NUMERIC to string to avoid losing data, fixed
	  string encoding bugs, fixed transaction management model to fit
	  qore's by enabling chained transaction mode

2007-05-23 06:07  david_nichols

	* sybase fixes: return number of rows affected on insert, update,
	  etc, generate column names when none returned from server for
	  select, execute explicit "begin trans" to align transaction
	  management in the sybase and mssql drivers with other qore DBI
	  drivers, test script update

2007-05-23 06:04  david_nichols

	* missing header change for deadlock fix

2007-05-23 06:00  david_nichols

	* removed 'using namespace std'

2007-05-23 06:00  david_nichols

	* fixed a deadlock in transaction lock timeouts

2007-05-22 20:32  david_nichols

	* new file

2007-05-22 20:32  david_nichols

	* new file

2007-05-22 18:23  david_nichols

	* fixed an off-by-one bug with strings

2007-05-22 15:58  david_nichols

	* fixed select method and encodings for sybase driver

2007-05-22 14:33  pvozenilek

	* select single row allowed to return list

2007-05-21 15:06  david_nichols

	* remove -g with CC and aCC, comment update

2007-05-21 14:59  david_nichols

	* better block allocation algorithm

2007-05-21 12:20  david_nichols

	* more efficient string block allocations

2007-05-21 11:57  david_nichols

	* release notes update

2007-05-21 11:15  david_nichols

	* warning fixes

2007-05-20 17:49  david_nichols

	* minor doc update

2007-05-20 17:40  david_nichols

	* cosmetic patch to avoid a warning

2007-05-20 12:40  david_nichols

	* updated roadmap

2007-05-20 07:13  david_nichols

	* minor warning fixes and doc updates

2007-05-19 20:30  david_nichols

	* fixed typo

2007-05-19 19:53  david_nichols

	* minor updates - example updates to reflect the signal handling
	  thread

2007-05-19 19:36  david_nichols

	* removed extraneous line

2007-05-19 19:35  david_nichols

	* fixed some exception stack trace bugs (double entries, incorrect
	  position info) in the new "on-demand" stack trace solution, fixed
	  class name reporting for exceptions in derived classes, fixed a
	  bug in the scanner parsing the '/' operator and regular
	  expressions, fixed a bug in the scanner where eof in a block
	  comment would cause a crash

2007-05-19 12:56  david_nichols

	* added DatasourcePool class for transparent Datasource connection
	  pooling, added new methods: Datasource::selectRow() and
	  Datasource::vselectRow(), doc updates

2007-05-19 10:45  david_nichols

	* fixed a bug in the new thread variable stack handling

2007-05-19 10:24  david_nichols

	* more "char *" -> "const char *" API header updates, implemented
	  disable signal handling option (may be removed soon)

2007-05-18 20:06  david_nichols

	* more const char * updates, doc updates

2007-05-18 18:14  david_nichols

	* minor updates

2007-05-18 12:59  david_nichols

	* do not mask SIGPROF when profiling is enabled, doc updates

2007-05-17 11:20  david_nichols

	* release notes update, new example file

2007-05-17 09:43  david_nichols

	* removed notes for removed -k option

2007-05-17 09:30  david_nichols

	* qore_lib_options implemented for future expansion, deadlock
	  detection cleanups

2007-05-17 08:57  david_nichols

	* deadlock detection optimization - lock-free algorithm

2007-05-17 07:58  david_nichols

	* updated deadlock detection notes

2007-05-17 06:56  david_nichols

	* deadlock detection streamlining

2007-05-17 06:13  david_nichols

	* eliminated global lock for deadlock detection, use a vector
	  instead of a deque for VLock lock tracking (tests show a vector
	  is slightly faster than a deque for this usage)

2007-05-17 05:32  david_nichols

	* added -k,--no-deadlock-detection support (experimental)

2007-05-17 04:43  david_nichols

	* cosmetic updates

2007-05-16 18:26  david_nichols

	* fixed a bug in thread resource tracking in non-debugging mode,
	  use a deque instead of a list for lock tracking in deadlock
	  detection framework, giving a big performance boost

2007-05-16 09:25  david_nichols

	* local variable enhancement bugfix

2007-05-16 09:18  david_nichols

	* variable stack optimizations, thread-local access cleanups

2007-05-14 15:54  david_nichols

	* updated call_function() and call_function_args() to accept a call
	  reference as the first argument as well as a string, doc updates

2007-05-14 14:04  pvozenilek

	* commented out one assert, fails for unknown reason

2007-05-13 16:29  david_nichols

	* more bitops and pointer dereferencing fixes

2007-05-13 16:22  david_nichols

	* fp bit ops fixes

2007-05-13 16:09  david_nichols

	* bitops for floating-point values

2007-05-13 15:54  david_nichols

	* must delete builtin function list before unloading modules

2007-05-13 15:12  david_nichols

	* removed call stack tracing from non-debugging mode (performance
	  and memory usage improvement), eliminated ProgramStack and
	  ArgvStack objects with heap allocations and replaced them by
	  storing the info on each thread's stack (additional performance
	  and memory usage improvements)

2007-05-11 13:33  david_nichols

	* encoding fixes

2007-05-11 13:11  david_nichols

	* unsuccessful attempts to get connction encodings working with
	  freetds

2007-05-11 13:00  david_nichols

	* encoding fixes

2007-05-11 12:45  david_nichols

	* doc updates, sybase update, command-line updates

2007-05-10 11:52  david_nichols

	* signal handling updates

2007-05-10 11:15  pvozenilek

	* added another problem

2007-05-10 11:00  pvozenilek

	* comments on FreeTDS bugs

2007-05-10 10:53  pvozenilek

	* old version code removed

2007-05-10 10:44  david_nichols

	* doc update

2007-05-10 10:22  pvozenilek

	* new test set added, old one removed

2007-05-10 09:33  david_nichols

	* updated tibae module to serialize integers > 32bits as i8

2007-05-10 08:43  david_nichols

	* doc updates

2007-05-10 07:27  david_nichols

	* fixed typo

2007-05-10 07:26  david_nichols

	* implemented a workaround to per-thread signal masks on Darwin by
	  calling sigprocmask() after pthread_sigmask() (only on Darwin)

2007-05-09 20:58  david_nichols

	* signal handling notes

2007-05-09 19:42  david_nichols

	* fixed debug change

2007-05-09 19:40  david_nichols

	* reset default signal mask in new process after fork()

2007-05-09 17:24  david_nichols

	* more safe signal handling fixes regarding fork() compatibility

2007-05-09 16:02  david_nichols

	* more safe signal fixes

2007-05-09 15:30  david_nichols

	* safe signal and fork() fixes

2007-05-09 15:06  david_nichols

	* fixed remove_signal_handler() from within a signal handler

2007-05-09 15:00  david_nichols

	* sig handling updates

2007-05-09 14:35  david_nichols

	* safe sig handling update

2007-05-09 14:21  david_nichols

	* fixed fork() with new safe signal handling architecture

2007-05-09 14:03  david_nichols

	* signal fix

2007-05-09 12:22  david_nichols

	* bug fixes

2007-05-09 12:09  david_nichols

	* signal handling changes

2007-05-09 10:20  david_nichols

	* safe signal handling fixes

2007-05-09 09:15  david_nichols

	* more safe signal handling updates (new architecture)

2007-05-09 07:25  david_nichols

	* start signal handling rearchitecture

2007-05-08 15:28  david_nichols

	* fixed a bug in signal handling when the handler is removed from
	  within the handler

2007-05-08 07:38  david_nichols

	* doc updates

2007-05-08 07:27  david_nichols

	* removed a debugging function, cosmetic changes

2007-05-07 06:47  david_nichols

	* todo update

2007-05-07 06:26  david_nichols

	* implemented regular expressions case statements, fixed a bug
	  where the parser was accepting exp =~ exp but crashing if the
	  second exp was not a string

2007-05-06 06:40  david_nichols

	* minor example updates, removed extraneous file

2007-05-05 19:22  david_nichols

	* backed out warning patch because it just generates more marnings
	  with other compilers

2007-05-02 10:10  david_nichols

	* doc update

2007-05-01 20:00  david_nichols

	* really eliminate warning on g++ 3.3

2007-05-01 19:54  david_nichols

	* eliminate warnings on g++ 3.3

2007-05-01 19:48  david_nichols

	* missing include

2007-05-01 19:02  david_nichols

	* renamed errno method to q_errno

2007-05-01 19:01  david_nichols

	* cosmetic update

2007-04-28 12:40  david_nichols

	* doc updates

2007-04-26 13:35  david_nichols

	* added call reference "CallReference" type constant

2007-04-26 13:34  david_nichols

	* fixed a bug in SSL handling for server sockets; if an SSL
	  connection is not established on an attempted connection then a
	  segmentation fault was generated when the Socket object was
	  deleted

2007-04-26 09:43  david_nichols

	* made assignments such as "my ($a, $b, $c) = (1, 2, 3);" finally
	  legal...

2007-04-26 07:00  david_nichols

	* update

2007-04-25 19:33  david_nichols

	* fixed a bug in HTTPClient where exceptions were not being thrown
	  for HTTP response codes indicating an error

2007-04-25 16:26  pvozenilek

	* sybase files

2007-04-25 13:07  pvozenilek

	* FreeTDS fixes

2007-04-25 07:36  david_nichols

	* implemented parseBase64StringToString(), made
	  BinaryObject::getPtr() return a const void *

2007-04-25 05:19  pvozenilek

	* sybase files

2007-04-24 20:13  david_nichols

	* doc updates

2007-04-23 09:07  david_nichols

	* added missing file

2007-04-23 08:41  david_nichols

	* fixed get server version for postgresql < 8

2007-04-23 04:48  david_nichols

	* enabled single compilation unit compiles for main qore directory

2007-04-23 04:40  david_nichols

	* enabled single compilation unit for sybase/mssql modules

2007-04-23 04:30  david_nichols

	* added missing files

2007-04-23 04:29  david_nichols

	* enabled single compilation unit compiles for pgsql and tuxedo
	  modules

2007-04-23 04:26  david_nichols

	* added -ldl to library link line on solaris 8

2007-04-21 13:12  david_nichols

	* updates

2007-04-21 13:12  david_nichols

	* added boolean supoprt to header in Socket class, moved reference
	  in Variable.cc, cosmetic change in ReferenceObject.cc

2007-04-21 05:58  david_nichols

	* fixed last bug fix - reference optimization is only valid if
	  atomic operation support is present

2007-04-21 05:43  david_nichols

	* updates

2007-04-21 05:42  david_nichols

	* updated commented-out debugging line

2007-04-21 05:42  david_nichols

	* fixed a race condition on platforms without atomic reference
	  counting operations related to the SMP cache invalidation
	  optimization

2007-04-20 08:07  david_nichols

	* fixed an obscure bug parsing block comments, fixed a
	  reference-counting bug and a static memory leak in object method
	  references

2007-04-20 08:07  david_nichols

	* fixed typos in error strings

2007-04-20 08:05  david_nichols

	* fixed typos in error strings

2007-04-19 09:25  david_nichols

	* use umem on Solaris for memory allocation if available

2007-04-19 09:15  david_nichols

	* solaris CC compile fixes

2007-04-19 07:55  pvozenilek

	* sybase files

2007-04-19 07:54  pvozenilek

	* sybase header

2007-04-19 06:54  david_nichols

	* fixed compiling on g++ < 4

2007-04-19 06:52  david_nichols

	* fixed compiling with oracle < 10.2, fixed tibae compile

2007-04-18 16:02  pvozenilek

	* sybase headers

2007-04-18 16:01  pvozenilek

	* sybase files

2007-04-16 18:37  pvozenilek

	* two tests

2007-04-16 16:19  pvozenilek

	* sybase code

2007-04-15 01:43  david_nichols

	* fixed null-argument bug

2007-04-15 01:40  david_nichols

	* fixed null-argument bug

2007-04-14 04:15  david_nichols

	* fixed a bind bug

2007-04-14 03:29  david_nichols

	* fixed typo

2007-04-14 03:25  david_nichols

	* doc updates

2007-04-13 20:11  david_nichols

	* doc updates

2007-04-13 20:08  david_nichols

	* fixed get_server_version

2007-04-13 16:28  pvozenilek

	* sybase file

2007-04-13 16:27  pvozenilek

	* + sybase header

2007-04-13 16:16  pvozenilek

	* sybase code

2007-04-13 16:09  david_nichols

	* oracle compile fixes

2007-04-13 16:01  david_nichols

	* added new DBI methods: get_server_version and get_client_version:
	  both functions are optional and return driver-specific version
	  information, added corresponding Datasource methods:
	  Datasource::getServerVersion() and Datasource::getClientVersion()

2007-04-13 15:20  pvozenilek

	* more sybase files

2007-04-13 15:19  pvozenilek

	* + sybase headers

2007-04-13 05:44  david_nichols

	* more examples and corrections

2007-04-12 22:23  david_nichols

	* documentation updates, implemented new File class methods:
	  readu1(), readu2(), readu4(), readi8(), readu2LSB(), readu4LSB(),
	  readi8LSB(), writeu1(), writeu2(), writeu4(), writeu2LSB(),
	  writeu4LSB(), writei8(), writei8LSB(), implemented new Socket
	  class methods: Socket::recvu1(), Socket::recvu2(),
	  Socket::recvu4(), Socket::recvu2LSB(), Socket::recvu4LSB()

2007-04-12 04:56  david_nichols

	* added more examples

2007-04-11 22:21  pvozenilek

	* sybase file

2007-04-11 21:07  pvozenilek

	* sybase file

2007-04-11 20:18  pvozenilek

	* sybase file

2007-04-11 20:09  pvozenilek

	* file renamed

2007-04-11 17:21  pvozenilek

	* API wraper added

2007-04-11 16:56  pvozenilek

	* + Sybase header

2007-04-11 16:44  pvozenilek

	* query processing done

2007-04-11 16:01  david_nichols

	* major doc updates, added lost of examples, corrected errors

2007-04-11 04:27  david_nichols

	* doc updates, save errno in signal handler

2007-04-11 01:25  pvozenilek

	* rpc init for Sybase/MS SQL

2007-04-10 22:19  pvozenilek

	* query parsing for Sybase/MS SQL

2007-04-10 21:56  pvozenilek

	* old unneeded file deleted

2007-04-10 21:53  pvozenilek

	* encoding support for Sybase/MS SQL

2007-04-10 20:57  pvozenilek

	* returned back, mistaken change of file

2007-04-10 20:49  pvozenilek

	* send command for Sybase/MS SQL

2007-04-10 20:32  pvozenilek

	* added initiate command file

2007-04-10 20:14  pvozenilek

	* + Sybase header

2007-04-10 19:37  pvozenilek

	* command class for Sybase/MS SQL

2007-04-10 19:36  pvozenilek

	* command class for Sybase/MS SQL

2007-04-10 19:24  pvozenilek

	* + Sybase header

2007-04-10 19:10  pvozenilek

	* tests are now in conversions_tests.cc

2007-04-10 19:07  pvozenilek

	* Qore <-> Sybase conversions fro Sybase/MS SQL

2007-04-10 18:20  pvozenilek

	* + sybase header

2007-04-10 18:01  pvozenilek

	* transaction support for Sybase/MS SQL

2007-04-10 17:40  pvozenilek

	* + sybase header

2007-04-10 17:29  pvozenilek

	* direct execute for Sybase/MS SQL

2007-04-10 17:29  pvozenilek

	* direct execute for Sybase/MS SQL

2007-04-10 17:04  pvozenilek

	* + Sybase header

2007-04-10 16:55  pvozenilek

	* connection class Sybase/MS SQL

2007-04-10 13:32  pvozenilek

	* added a Sybase header

2007-04-10 13:26  pvozenilek

	* file renamed

2007-04-10 13:22  pvozenilek

	* file renamed

2007-04-10 04:44  david_nichols

	* doc update

2007-04-10 04:38  david_nichols

	* doc update

2007-04-10 03:19  david_nichols

	* doc updates

2007-04-10 03:09  david_nichols

	* implemented callback support for sortDescending() and
	  sortDescendingStable(), implemented reverse() for strings and
	  lists (also UTF-8 strings), doc updates

2007-04-09 15:02  david_nichols

	* implemented function and object method call references, updated
	  sort*(), min(), max() and set_signal_handler() to take call
	  references

2007-04-09 13:04  pvozenilek

	* +old sybase main module

2007-04-09 13:03  pvozenilek

	* sybase restart

2007-04-09 13:00  pvozenilek

	* minus sybased headers

2007-04-09 12:02  pvozenilek

	* added endline at the end of file

2007-04-07 16:38  david_nichols

	* modified locking classes to handle signals on spurious wakeups,
	  reworked signals

2007-04-07 14:44  david_nichols

	* added SignalToName and NameToSignal hash constants, updated Queue
	  class to handle signals on spurious wakeups, removed
	  signal_constants.h file

2007-04-07 13:36  david_nichols

	* removed unused SingleExitGate and Gate code, updated QoreCounter
	  to unlock and check for signals to be handled on spurious
	  wakeups, modified the Counter class to check the condition after
	  every wakeup (necessary as signals can cause spurious wakeups)

2007-04-06 22:37  david_nichols

	* signal updates

2007-04-06 19:00  david_nichols

	* fixed mysql reconnections after wait_timeout expired while not in
	  a transaction

2007-04-06 15:12  david_nichols

	* improved mysql driver reconnections when in transaction, added
	  missing return statement

2007-04-05 14:12  david_nichols

	* signal manager uses a VRMutex for reentrant locking, resetting
	  signal handlers ignores SIGPIPE signals, signal handlers called
	  with signal number as argument

2007-04-05 13:50  david_nichols

	* implemented remove_signal_handler() (experimental), added
	  QDOM_PROCESS to new signal functions, doc updates

2007-04-05 04:36  david_nichols

	* mysql & doc updates

2007-04-04 23:43  david_nichols

	* updated mysql driver to automatically reconnect if a connection
	  times out if not in a transaction

2007-04-04 18:51  david_nichols

	* fixed bug in Hash::dereference() triggered by
	  delete_all_thread_data(), signal updates

2007-04-04 15:09  pvozenilek

	* support for dynamic and static execution separated

2007-04-04 07:40  pvozenilek

	* small optimization: names are not clones since they are all
	  literals

2007-04-03 22:34  david_nichols

	* make op_background_thread extern "C", todo update

2007-04-03 21:15  david_nichols

	* minor updates

2007-04-03 21:05  david_nichols

	* initial, highly experimental signal handling support

2007-04-03 17:01  pvozenilek

	* query string now formatted acc ct_command

2007-04-02 08:15  pvozenilek

	* autocommit in Sybase module disabled

2007-04-02 04:03  david_nichols

	* moved DBI connection locking to the level above the Datasource
	  class (ex: ManagedDatasource), added auto_commit and
	  abort_transaction_start DBI methods

2007-04-01 21:54  pvozenilek

	* problems with Sybase varbinary fixed

2007-03-31 17:08  pvozenilek

	* just updateing SVN to make it fresh

2007-03-29 22:37  pvozenilek

	* more Sybase tests

2007-03-27 11:15  david_nichols

	* udpate

2007-03-26 13:28  pvozenilek

	* more Sybase tests, some FreeTDS code

2007-03-26 12:34  david_nichols

	* small fixes

2007-03-26 12:01  david_nichols

	* updated DBI driver "find" function to attempt to load the driver
	  if it is not already in the list.
	  moved oracle, mysql, and sybase drivers to the normal module
	  directory - the "auto" directory is now empty

2007-03-26 10:02  david_nichols

	* updated build system and sybase driver to be able to generate an
	  "mssql" driver if freetds is present to connection to Microsoft
	  SQL Server

2007-03-26 08:45  david_nichols

	* static initialization

2007-03-26 05:19  pvozenilek

	* more Sybase tests

2007-03-26 04:58  pvozenilek

	* more Sybase code

2007-03-26 03:13  pvozenilek

	* more Sybase tests

2007-03-26 02:47  pvozenilek

	* more Sybase tests

2007-03-23 16:02  pvozenilek

	* more Sybase tests

2007-03-23 14:45  david_nichols

	* updates to set global vars

2007-03-23 13:02  pvozenilek

	* more Sybase tests

2007-03-23 12:47  pvozenilek

	* more Sybase tests

2007-03-23 12:07  david_nichols

	* removed commits in pgsql driver

2007-03-23 10:13  david_nichols

	* changelog entry

2007-03-23 10:12  david_nichols

	* fixed Datasource::copy() to preserve autocommit status

2007-03-23 10:09  pvozenilek

	* commit after select*

2007-03-23 09:42  david_nichols

	* updated oracle, mysql, and pgsql drivers to do a commit after
	  select*() methods as well as exec if autocommit is set

2007-03-23 07:38  david_nichols

	* compile fixes for HPUX aCC

2007-03-23 01:04  pvozenilek

	* more Sybase tests

2007-03-23 01:00  pvozenilek

	* more Sybase tests

2007-03-22 20:26  david_nichols

	* HTTPClient ignores case for HTTP method names

2007-03-22 17:20  david_nichols

	* removed ambiguous and unneeded function

2007-03-22 17:16  david_nichols

	* updates to compile on HPUX with aCC

2007-03-22 17:04  david_nichols

	* pgsql config update

2007-03-22 16:00  david_nichols

	* debugging statements

2007-03-22 15:24  david_nichols

	* cosmetic updates

2007-03-22 14:45  david_nichols

	* fixed a segmentation fault when creating a new character encoding
	  at run time

2007-03-22 14:36  david_nichols

	* solaris fixes

2007-03-22 13:14  david_nichols

	* solaris CC compile fixes - also add -L/usr/lib to link path if
	  necessary

2007-03-22 13:00  david_nichols

	* include openssl_cflags when building the pgsql module

2007-03-22 12:58  david_nichols

	* ncurses fixes for solaris, fixed typo in mysql.cc

2007-03-22 12:43  david_nichols

	* fixes to compile with older versions of mysql

2007-03-22 12:23  david_nichols

	* more directories for sybase/freetds checks

2007-03-22 12:22  david_nichols

	* find freetds on darwin

2007-03-21 16:46  david_nichols

	* allow sybase driver to be built with freetds

2007-03-21 16:22  pvozenilek

	* more Sybase tests

2007-03-21 15:23  pvozenilek

	* more Sybase tests

2007-03-21 14:56  david_nichols

	* added JsonRpcHandler to XmlRpcServerValidation.q and comments to
	  xmlrpc.ql

2007-03-21 14:51  david_nichols

	* updated HTTPServer, added JsonRpcHandler as well

2007-03-21 13:22  pvozenilek

	* more Sybase tests

2007-03-21 11:48  pvozenilek

	* more Sybase tests

2007-03-21 06:28  pvozenilek

	* more Sybase code

2007-03-21 04:04  pvozenilek

	* more Sybase code

2007-03-20 14:26  david_nichols

	* doc updates, http client method and exception code updates

2007-03-20 14:22  david_nichols

	* fixed a warning in pgsql driver

2007-03-20 13:28  david_nichols

	* xml formatting fix, %d sql specifier

2007-03-20 09:42  david_nichols

	* fixed xml formatting

2007-03-20 07:50  david_nichols

	* fixed setting null bind value when binding hash-type
	  specifications and empty lists

2007-03-20 02:31  pvozenilek

	* more Sybase code

2007-03-20 02:30  pvozenilek

	* more Sybase code

2007-03-19 16:51  david_nichols

	* removed global thread resource lock, implemented per-thread
	  resource tracking

2007-03-19 10:29  david_nichols

	* doc updates

2007-03-19 09:46  pvozenilek

	* Sybase datetime conversions

2007-03-19 09:30  david_nichols

	* renamed on_block_exit to on_exit, implemented on_success and
	  on_error statements to conditionally execute code at the end of a
	  block depending on whether an exception is active or not

2007-03-18 16:49  david_nichols

	* fixed postgres detection on linux

2007-03-18 15:47  david_nichols

	* set CLIENT_FOUND_ROWS on connect in mysql driver

2007-03-18 13:46  david_nichols

	* implemented per-connection locking

2007-03-17 18:20  david_nichols

	* set all column names to lower case

2007-03-17 17:43  david_nichols

	* fixed detection of binary or text types (BLOB vs TEXT, etc)

2007-03-17 15:59  david_nichols

	* improved postgresql detection in configure

2007-03-16 16:21  david_nichols

	* another const fix

2007-03-16 16:05  david_nichols

	* const fixes for Solaris CC

2007-03-16 15:56  david_nichols

	* const fixes for Solaris CC

2007-03-16 15:21  david_nichols

	* added getDriverName() function

2007-03-16 11:51  david_nichols

	* implemented Datasource::getDriverName()

2007-03-16 11:51  david_nichols

	* implemented Datasource::getDriverName()

2007-03-16 11:50  david_nichols

	* thread_exit statement fix

2007-03-16 10:20  david_nichols

	* fixed typos

2007-03-16 10:19  david_nichols

	* fixed bug where the query string was being overwritten, oops...

2007-03-16 09:52  david_nichols

	* fixed a bug binding null values

2007-03-16 06:42  david_nichols

	* g++ 3.2 compile fixes

2007-03-16 06:24  david_nichols

	* cast for dlclose, fixed "read from uninitialized" errors

2007-03-16 06:19  david_nichols

	* const updates, run-time module loading

2007-03-15 23:16  pvozenilek

	* more Sybase code

2007-03-15 19:49  david_nichols

	* doc updates

2007-03-15 15:38  pvozenilek

	* swapped members in QoreNode for better cache locality (start
	  bytes get getched first)

2007-03-15 12:29  david_nichols

	* fixed a bug inializing lvars in the constructor

2007-03-15 12:23  david_nichols

	* fixes to on_block_exit and StatementBlock::execImpl()

2007-03-14 18:00  david_nichols

	* made it legal to use pairs of curly braces ({}) anywhere within a
	  block to impose scoping rules

2007-03-14 16:32  david_nichols

	* fixed a bug in on_block_exit when it was the first statement in a
	  block

2007-03-14 16:32  pvozenilek

	* more Sybase code

2007-03-14 16:02  david_nichols

	* added "const" to more parameters

2007-03-14 15:46  pvozenilek

	* added 'run recent tests', more Sybase code

2007-03-14 15:32  david_nichols

	* doc updates

2007-03-14 15:00  david_nichols

	* parse option updates

2007-03-14 13:23  david_nichols

	* implemented the "on_block_exit" statement

2007-03-14 10:49  pvozenilek

	* few methods made const

2007-03-14 06:22  pvozenilek

	* more Sybase code

2007-03-14 06:17  pvozenilek

	* added headers always needed

2007-03-13 15:28  david_nichols

	* cleaned up/updated Qore statement implementation to a class tree
	  with a virtual API

2007-03-13 07:21  pvozenilek

	* + string encoding copied from postgres

2007-03-12 18:26  pvozenilek

	* +unit test for QoreString::clear()

2007-03-12 16:33  pvozenilek

	* empty string & clear() problem

2007-03-12 14:57  david_nichols

	* udpated documentation with many threading changes, added initial
	  AutoGate, AutoLock, AutoReadLock, and AutoWriteLock class
	  documentation

2007-03-12 13:33  david_nichols

	* * updated Queue class to throw exceptions on thread errors, *
	  added Queue::getWaiting() method, * added Queue tests to
	  deadlock.q

2007-03-12 12:25  david_nichols

	* Mutex destructor throws an exception if deleted while Condition
	  variables waiting on it

2007-03-12 11:06  david_nichols

	* * updated Counter class to throw exceptions on thread errors
	  (deleted while waiting threads, etc), * added
	  Condition::wait_count() method, * added Counter::getWaiting()
	  method

2007-03-12 09:26  david_nichols

	* deadlock detection cleanup

2007-03-12 06:11  pvozenilek

	* more Sybase code

2007-03-11 21:22  david_nichols

	* cosmetic update

2007-03-11 21:21  david_nichols

	* synchronized deadlock detection - otherwise there is a race
	  condition

2007-03-11 21:09  david_nichols

	* deadlock detection fixes

2007-03-10 21:43  david_nichols

	* updated to new API

2007-03-10 21:30  david_nichols

	* updated to new API again

2007-03-10 21:30  david_nichols

	* updated to new API

2007-03-10 21:19  david_nichols

	* udpated to new API

2007-03-10 21:10  david_nichols

	* updated QoreString::getBuffer() to return const char *

2007-03-10 20:32  pvozenilek

	* few const char* related fixes

2007-03-10 18:02  david_nichols

	* more char * -> const char * changes

2007-03-10 17:45  david_nichols

	* updated QoreClass; sanitized constructors and name handling

2007-03-10 15:48  david_nichols

	* delete namespace name after setting it

2007-03-10 15:17  david_nichols

	* reverted UserFunction::name back to a char * for now

2007-03-10 15:03  david_nichols

	* ported to new API

2007-03-10 15:01  david_nichols

	* missing files

2007-03-10 14:59  david_nichols

	* change "char *" to "const char *" where appropriate

2007-03-10 14:57  david_nichols

	* make sure to mark lock as grabbed when returning from
	  externWaitImpl()

2007-03-10 11:35  david_nichols

	* updated Datasource and QoreEncoding to use std::string to store
	  strings, made QoreEncoding members private

2007-03-10 09:56  david_nichols

	* added AutoReadLock and AutoWriteLock for exception-safe RWLock
	  handling

2007-03-10 09:37  david_nichols

	* Datasource timeouts are in milliseconds now because
	  SingleExitGate timeout was updated to milliseconds

2007-03-10 09:07  david_nichols

	* updated Datasource class to throw an exception if deleted while
	  in a transaction (and release the lock)

2007-03-09 17:12  david_nichols

	* doc updates

2007-03-09 16:30  david_nichols

	* documentation and cosmetic updates

2007-03-09 15:51  david_nichols

	* updated RWLock class to take advantage of the new deadlock
	  detection infrastructure
	  added RWLock deadlock and thread error tests to test/deadlock.q

2007-03-09 10:21  david_nichols

	* * added AutoGate class for exception-safe gate lock handling
	  * updated SmartMutex class to allow for tracking condition
	  variables waiting on it so that if it's deleted while a condition
	  variable is waiting, an exception can be thrown in the other
	  thread(s)

2007-03-09 08:22  david_nichols

	* new files

2007-03-09 08:21  david_nichols

	* added AutoGate class for exception-safe Gate handling
	  more deadlock/thread locking error tests

2007-03-09 08:16  david_nichols

	* * renamed SafeLocker class to "AutoLock"
	  * updated AutoLock to release the lock in the destructor only if
	  the lock is held (use the lock's status and not track it in the
	  AutoLock object in case the lock is released due to an exception,
	  etc)
	  * added new deadlock tests/lock error tests

2007-03-08 21:06  david_nichols

	* removed RMutex files and made it a clone of the Gate class (APi
	  is now identical)

2007-03-08 17:25  david_nichols

	* * changed the Gate class to no longer accept a code to enter the
	  gate
	  * applied new deadlock detection and thread-error-catching
	  infrastructure to the Gate class (VRmutex implementation)
	  * updated documentation
	  * deprecated the RMutex class in favor of the Gate class
	  * added Gate deadlock and thread error tests to test/deadlock.q

2007-03-08 16:27  pvozenilek

	* +QException.cc

2007-03-08 15:44  david_nichols

	* fixed some typos

2007-03-08 15:36  david_nichols

	* doc and datasource updates

2007-03-08 15:36  david_nichols

	* DBI and datasource doc updates

2007-03-08 15:21  pvozenilek

	* Sybase tests

2007-03-08 14:49  david_nichols

	* fixed binding RAW data by placeholder

2007-03-08 14:20  david_nichols

	* added support for RAW types

2007-03-08 14:11  pvozenilek

	* low level tests

2007-03-08 13:11  pvozenilek

	* added QException implementation + test

2007-03-08 12:04  pvozenilek

	* added inline_printf helper

2007-03-08 11:13  pvozenilek

	* more Sybase code

2007-03-08 10:53  david_nichols

	* added support for BINARY_FLOAT and BINARY_DOUBLE types as well as
	  binding placehodler by TIMESTAMP in order to preserve
	  milliseconds if available

2007-03-08 08:45  david_nichols

	* fixed bug calculating millisecond portion of wait with timeout

2007-03-08 06:29  pvozenilek

	* more Sybase code

2007-03-08 06:18  pvozenilek

	* more Sybase code

2007-03-07 18:42  david_nichols

	* updated to new API

2007-03-07 14:41  david_nichols

	* oracle updates

2007-03-07 14:19  david_nichols

	* updated Oracle driver to support TIMESTAMP fields and date/time
	  values up to millisecond resolution

2007-03-07 14:19  david_nichols

	* added date_ms() function to generate a date/time value from an
	  integer offset from the qore 64-bit epoch in milliseconds

2007-03-07 13:44  david_nichols

	* extensive DBI driver doc updates

2007-03-07 09:23  david_nichols

	* mysql update

2007-03-07 09:23  david_nichols

	* added binary conversion support, changed decimal conversion to
	  string to avoid loss of precision

2007-03-07 08:55  david_nichols

	* changed conversion of mysql decimal type to float from int

2007-03-07 00:06  pvozenilek

	* added Sybase header

2007-03-07 00:05  pvozenilek

	* more Sybase code

2007-03-06 23:49  pvozenilek

	* more Sybase code

2007-03-06 21:06  pvozenilek

	* more Sybase code

2007-03-06 20:01  pvozenilek

	* sybase header added

2007-03-06 17:43  david_nichols

	* documentation updates

2007-03-06 16:02  david_nichols

	* off-by-one fix

2007-03-06 16:00  david_nichols

	* update to check for integer_datetimes on pre release 7 servers

2007-03-06 14:59  david_nichols

	* fixed datasource initialization with no parameters

2007-03-06 14:41  pvozenilek

	* added Sybase headers

2007-03-06 14:38  pvozenilek

	* Sybase module splitted into smaller parts

2007-03-06 14:04  david_nichols

	* renamed variable to avoid collision with parameter

2007-03-06 13:53  david_nichols

	* disabled debugging statement

2007-03-06 13:52  david_nichols

	* fix for pgsql version 7 compiles

2007-03-06 13:48  david_nichols

	* added latin* aliases

2007-03-06 12:09  david_nichols

	* * updated pgsql driver to query server to determine binary data
	  types for each connection (set has_interval_day and
	  has_integer_datetimes)
	  * doc update
	  * charset update

2007-03-05 13:28  david_nichols

	* updated the Counter class to allow initialization of the starting
	  value of the counter in the constructor (default = 0)
	  updated deadlock tests
	  cosmetic doc updates

2007-03-05 13:12  pvozenilek

	* more Sybase RPC code

2007-03-05 12:56  david_nichols

	* doc update
	  plugged a memory leak in the Mutex class

2007-03-05 11:21  david_nichols

	* more deadlock detection improvements and global thread-resource
	  tracking for thread locks

2007-03-05 08:12  david_nichols

	* fixed auto locking and lock list handling

2007-03-05 07:07  david_nichols

	* missing file

2007-03-05 07:05  david_nichols

	* missing files

2007-03-05 07:01  pvozenilek

	* more Sybase code

2007-03-04 18:49  david_nichols

	* updated deadlock test script to ensure that the locks are
	  acquired in the right order to ensure that the deadlock occurs
	  added TID to exception text in QC_Mutex.h

2007-03-04 18:41  david_nichols

	* * added SafeLocker class as a helper class for exception-safe
	  unlocking within a block
	  * throw an exception in Mutex::destructor() if it's destroyed
	  while locked
	  * added a deadlock test for Mutex class

2007-03-04 17:42  david_nichols

	* * implemented new deadlock-detection framework for all internal
	  locking: each thread has a VLock object that tracks locks held;
	  before a thread blocks, it checks the thread holding the lock if
	  it's waiting on a lock that the current thread is already
	  holding; if so, a THREAD-DEADLOCK exception is raised
	  * applied deadlock detection to Mutex, VRMutex, and Condition
	  classes

2007-03-02 21:28  david_nichols

	* fix for pgsql 7

2007-03-02 16:40  david_nichols

	* to suppress extraneous warnings

2007-03-02 16:39  david_nichols

	* postgresql static link fixes

2007-03-02 16:37  david_nichols

	* another pgsql 7 fix

2007-03-02 16:35  david_nichols

	* another pgsql 7 fix

2007-03-02 16:34  david_nichols

	* fixed typo

2007-03-02 16:31  david_nichols

	* AutoLock and doc updates

2007-03-02 16:31  david_nichols

	* fixes for compiling with pgsql 7

2007-03-02 14:45  david_nichols

	* fixed mysql detection with macports

2007-03-02 14:36  david_nichols

	* fixed configure for pcre (only succeed if matching libs and
	  include files are found, do not abort until all possibilities are
	  checked)

2007-03-02 13:59  david_nichols

	* commented out debugging statements

2007-03-02 13:55  david_nichols

	* cosmetic update

2007-03-02 13:52  david_nichols

	* * added Datasource::vselect() and Datasource::vselectRows()
	  methods
	  * fixed configure script for mysql (only succeed if matching libs
	  and include files are found)
	  * fixed configure for sybase
	  * added pgsql module for PostgreSQL database access

2007-03-01 10:14  david_nichols

	* iterator and bitop updates

2007-02-28 09:43  pvozenilek

	* more Sybase code

2007-02-28 00:14  pvozenilek

	* faster execution path of come SQL cmds added

2007-02-27 22:44  pvozenilek

	* bugfixes, more code and tests

2007-02-26 22:21  pvozenilek

	* more Sybase code

2007-02-26 13:37  david_nichols

	* added useful functors for for_each deletes

2007-02-26 12:53  pvozenilek

	* more tests

2007-02-26 09:58  pvozenilek

	* fix for resource leak

2007-02-26 07:04  pvozenilek

	* more Sybase code

2007-02-25 17:38  david_nichols

	* applied SafeLocker - fixed a couple of potential deadlocks

2007-02-25 17:28  david_nichols

	* fixed a bug in setHTTPVersion

2007-02-23 22:54  pvozenilek

	* more Sybase code

2007-02-23 13:57  pvozenilek

	* leak fixed

2007-02-23 09:54  pvozenilek

	* tests moved

2007-02-23 09:31  pvozenilek

	* tests will be in its own file

2007-02-23 07:22  pvozenilek

	* more Sybase code

2007-02-22 18:27  david_nichols

	* changed to safe lock

2007-02-22 16:48  david_nichols

	* fixed dangerous QoreString::clear() implementation, changed
	  QoreString::terminate(0) to QoreString::clear()

2007-02-22 13:25  david_nichols

	* fixed typo

2007-02-22 13:24  david_nichols

	* allow integers to be used for service parameter to TibcoAdapter

2007-02-22 12:55  pvozenilek

	* LockedObject and SafeLock made noncopyable for obvious reasons

2007-02-22 11:10  pvozenilek

	* dereference bug fixed

2007-02-22 09:48  david_nichols

	* renamed SafeLockHelper to SafeLocker and made it lock immediately
	  in the constructor

2007-02-22 09:42  david_nichols

	* implemented SafeLockHelper class

2007-02-22 08:54  david_nichols

	* minor dbi & mysql updates

2007-02-22 08:50  pvozenilek

	* new DBI interface

2007-02-22 07:29  david_nichols

	* update

2007-02-22 07:29  david_nichols

	* implemented new extensive DBI-driver registration

2007-02-21 16:34  david_nichols

	* new methods to more conveniently set ms

2007-02-21 11:42  pvozenilek

	* more Sybase code

2007-02-21 06:09  pvozenilek

	* more Sybase code

2007-02-20 14:20  david_nichols

	* read fixes with no or negative buffer sizes

2007-02-20 13:52  pvozenilek

	* more Sybase code

2007-02-20 13:52  david_nichols

	* * fixed a bug in QoreSocket when reading all available data
	  * fixed HTTPClient proxy communication

2007-02-20 13:04  david_nichols

	* disconnect if changing the URL

2007-02-20 12:57  david_nichols

	* various API updates

2007-02-20 12:57  david_nichols

	* updated HTTPClient to support redirections, basic authentication
	  and proxies (proxy support untested)

2007-02-20 10:59  pvozenilek

	* more Sybase code

2007-02-20 10:32  pvozenilek

	* more Sybase code

2007-02-20 10:03  pvozenilek

	* more Sybase code

2007-02-20 07:56  pvozenilek

	* more Sybase code

2007-02-19 09:16  david_nichols

	* fixed jsonrpcs and xmlrpcs protocols to set ssl=true

2007-02-19 07:46  david_nichols

	* to align library version number with last public release
	  (0.6.1.1)

2007-02-19 07:44  pvozenilek

	* more sybase related code

2007-02-19 07:23  david_nichols

	* fixed 3 bugs in HTTP handling: missing
	  QoreSocket::readHTTPChunkedBodyBinary() implementation,
	  unreleased lock on chunked read error, recognizing misuse of
	  content-encoding header

2007-02-17 13:49  david_nichols

	* entry for last commit

2007-02-17 13:44  david_nichols

	* updated release to 0.6.2, DBI updates to handle databases that
	  require explicit BEGINs for transaction management, commented out
	  unused gz_header as it causes compile problems with older zlib
	  headers

2007-02-16 10:21  david_nichols

	* updates

2007-02-12 14:14  david_nichols

	* updated doc v to 0.6.1

2007-02-12 13:14  david_nichols

	* fixed a bug setting the port number by protocol name in the
	  HTTPClient class

2007-02-12 12:57  david_nichols

	* updated buffer size for host ip lookups

2007-02-12 12:56  david_nichols

	* enlarged buffer size for host address requests to 1024 bytes

2007-02-11 16:49  david_nichols

	* updated to 0.6.1

2007-02-11 16:47  david_nichols

	* updated release notes

2007-02-11 16:24  david_nichols

	* doc updates

2007-02-11 16:19  david_nichols

	* updated docs

2007-02-11 16:18  david_nichols

	* fixed a bug parsing escape sequences in JSON strings
	  implemented unicode numeric character code parsing in JSON
	  strings
	  updated documentation

2007-02-10 12:28  david_nichols

	* wnsure decomressed strings are properly terminated and the length
	  is set according to the number of bytes decomressed and not the
	  first null

2007-02-09 15:10  david_nichols

	* * fixed bugs in compressing/decomressing data larger than the
	  default buffer size
	  * added "deflate" and "gzip" content-handling to the HTTPClient
	  class

2007-02-08 13:49  david_nichols

	* doc update -updated library version to 1.1.0

2007-02-08 12:35  david_nichols

	* * added documentation for min() and max()
	  * corrected some documentation typos
	  * modified hextoint() to accept optionally leading '0x' or 'x' in
	  front of the string of hex digits
	  * modified XML parsing to treat CDATA specially: put it in
	  ^cdata^ hash keys and do not do any escape processing on it so it
	  can be recognized
	  as CDATA, also makeXMLString() will create CDATA entries properly
	  for such hash keys, this data can be processed for escape code
	  conversion
	  using the html_decode() function
	  * added documentation for new XML CDATA processing
	  * added tests for XML CDATA processing to test.q

2007-02-07 12:34  david_nichols

	* update

2007-02-07 10:12  david_nichols

	* hexToInt() renamed to hextoint()
	  strtoint() implemented
	  plugged memory leaks in new compression/decompression code in
	  ql_misc.cc by using ON_BLOCK_EXIT()
	  improved zlib exception reporting
	  updated documentation

2007-02-07 09:05  david_nichols

	* implemented List::min() and List::max() with and without
	  callbacks

2007-02-06 18:21  david_nichols

	* compile fix

2007-02-06 18:20  david_nichols

	* moved list functions into ql_list.cc
	  implemented min() and max() to find the minimum and maximum
	  values in a list, respectively

2007-02-06 16:08  david_nichols

	* implemented gzip(), gunzip_to_string(), and gzip_to_string()

2007-02-06 14:54  david_nichols

	* doc update, compress2() function deprecated as it is identical to
	  compress()

2007-02-06 14:48  david_nichols

	* fixed compress implementation

2007-02-06 14:46  david_nichols

	* updated compress(), compress2(), and uncompress_*() functions to
	  use the streaming deflate/inflate API

2007-02-06 14:24  david_nichols

	* added deflate(), inflate_to_string() and inflate_to_binary()
	  functions

2007-02-06 13:33  pvozenilek

	* more Sybase

2007-02-06 12:37  david_nichols

	* modified gmtime() and localtime() to return the current GMT and
	  local time (respectively) if no argument is passed to the
	  functions
	  updated version to 0.6.1

2007-02-06 12:08  david_nichols

	* html decoding modified to decode numeric character codes

2007-02-06 10:33  david_nichols

	* decode unicode numeric character references in CDATA strings

2007-02-06 08:18  david_nichols

	* small fixes

2007-02-06 08:18  david_nichols

	* treat CDATA as text when parsing XML strings

2007-02-05 23:00  david_nichols

	* added Socket::readHTTPChunkedData() and added supprt for reading
	  chunked data to the HTTPClient class

2007-02-05 19:40  pvozenilek

	* initial compilable version

2007-02-05 18:58  pvozenilek

	* added very basic Sybase module support

2007-02-05 12:36  david_nichols

	* updated HTTPClient to set the port number in the Host: header if
	  not port 80

2007-02-05 12:12  david_nichols

	* updated Socket::sendHTTPMessage() to ensure that a "/" is sent as
	  the path if the path is otherwise empty

2007-02-05 12:08  david_nichols

	* removed Host: as mandatory header in the HTTPClient class

2007-02-05 09:52  david_nichols

	* really fixed HTTPClient host bug

2007-02-05 08:55  pvozenilek

	* added makefile

2007-02-05 07:34  pvozenilek

	* rm subdirectory

2007-02-05 07:33  pvozenilek

	* added header

2007-02-05 07:24  david_nichols

	* additional fix to allow the host field to be overridden

2007-02-05 07:21  pvozenilek

	* added include

2007-02-05 07:11  david_nichols

	* corrected a bug in the HTTPClient class where the Host field was
	  being set to the local host name instead of the name of the host
	  being connected to

2007-02-05 06:39  pvozenilek

	* file moved down

2007-02-05 06:38  pvozenilek

	* started adding Sybase

2007-02-02 14:53  david_nichols

	* added exception info to fork()

2007-02-01 12:04  pvozenilek

	* heap allocated value -> stack allocated

2007-01-31 16:12  david_nichols

	* throw an exception if a Datasource object is deleted while a
	  transaction is still in progress

2007-01-31 15:42  david_nichols

	* fixed another bug in managed datasource thread resource tracking

2007-01-31 14:56  david_nichols

	* fixed a bug in ManagedDatasource thread resource tracking

2007-01-30 17:52  david_nichols

	* compile fix for darwin

2007-01-30 13:28  david_nichols

	* final updates

2007-01-30 13:25  pvozenilek

	* avoid warning

2007-01-30 13:12  pvozenilek

	* date/time timeout for tibae

2007-01-30 13:06  pvozenilek

	* timeout can be now date/time

2007-01-30 12:38  pvozenilek

	* tuxedo docs: now possibility to use date/time for timeouts

2007-01-30 12:37  david_nichols

	* timeouts for tibco functions

2007-01-30 12:29  pvozenilek

	* timeout can be date/time

2007-01-30 12:13  pvozenilek

	* added date time support for transaction begin

2007-01-30 11:52  david_nichols

	* doc updates

2007-01-30 11:52  david_nichols

	* fixed setting timeout value with a relative date/time value

2007-01-30 11:51  david_nichols

	* doc update

2007-01-30 11:03  pvozenilek

	* configure.ac: another Sun's CC fix

2007-01-30 10:49  pvozenilek

	* configure.ac: order of Tuxedo libs changed to work on Sun's CC

2007-01-30 10:37  david_nichols

	* doc and status updates

2007-01-30 09:42  david_nichols

	* fixed character encoding handling with content-type headers in
	  lib/QoreHTTPClient.cc

2007-01-29 17:20  david_nichols

	* made environment constructor public

2007-01-29 17:14  pvozenilek

	* cast to shut down incorrect warning on Sun's CC

2007-01-29 17:06  pvozenilek

	* one more cast to avoid warning on Sun's CC

2007-01-29 17:02  pvozenilek

	* a method made public to get rid useless warning on Sun's CC

2007-01-29 16:55  david_nichols

	* fixes for compiles without single-compilation-unit

2007-01-29 16:43  pvozenilek

	* few more cast to shut up Sun's CC

2007-01-29 16:25  pvozenilek

	* casts added to shut down (incorrect) warnings by Sun's CC

2007-01-29 16:12  pvozenilek

	* added DLLEXPORTs to AbstractPrivateData, to keep CC on Sun quiet

2007-01-29 16:09  david_nichols

	* fixes to compile without single-compilation-unit

2007-01-29 16:03  david_nichols

	* for compiles without single-compilation-unit

2007-01-29 16:01  pvozenilek

	* one forgotten setenv, make_pair -> pair<> so older compilers will
	  swallow it

2007-01-29 14:57  pvozenilek

	* added a Tuxedo library specifically for Solaris

2007-01-29 12:34  pvozenilek

	* added forgotten DLLEXPORT

2007-01-29 11:32  pvozenilek

	* added Environment::valueExists()

2007-01-29 11:21  pvozenilek

	* Tuxedo uses Environment class from Qore lib instead of
	  getenv/setenv

2007-01-29 11:01  david_nichols

	* * fixed a logical bug in setenv() (could have caused a crash)
	  * made environment manipulations thread-safe on HP-UX

2007-01-29 10:13  david_nichols

	* fixed many compile errors with single compilation unit disabled

2007-01-28 07:41  david_nichols

	* fixed a bug in a debugging statement

2007-01-27 06:36  pvozenilek

	* hedare for unlink

2007-01-26 14:48  david_nichols

	* change

2007-01-26 13:54  pvozenilek

	* operations renamed

2007-01-26 13:53  pvozenilek

	* operations renamed

2007-01-26 11:11  pvozenilek

	* added exception for tibae operations

2007-01-26 11:03  pvozenilek

	* normalized exception names

2007-01-26 10:33  pvozenilek

	* rm forgotten printf

2007-01-26 10:06  pvozenilek

	* export added for identification variables

2007-01-26 09:50  david_nichols

	* memory bug fix

2007-01-25 12:51  pvozenilek

	* remaining Tuxedo docs

2007-01-25 12:51  pvozenilek

	* minor text fix

2007-01-25 11:30  david_nichols

	* yet another thread resource tracking bug fix

2007-01-25 11:21  david_nichols

	* fixed another thread resource tracking bug

2007-01-25 10:58  david_nichols

	* fixed bugs in thread resource tracking

2007-01-25 06:16  pvozenilek

	* more tuxedo docs

2007-01-25 05:44  pvozenilek

	* normalized exception names

2007-01-24 13:40  pvozenilek

	* more docs

2007-01-24 13:26  david_nichols

	* made some definitions private, added skeleton win32-config.h file

2007-01-24 12:56  david_nichols

	* updates, made private definitions in headers files cubject to
	  _QORE_LIB_INTERN define

2007-01-24 12:33  david_nichols

	* fixed a memory leak with a parse exception

2007-01-24 10:45  pvozenilek

	* more docs

2007-01-24 09:28  pvozenilek

	* docs for queueing

2007-01-23 16:43  pvozenilek

	* more tuxedo docs

2007-01-23 16:20  pvozenilek

	* more tuxedo docs

2007-01-23 15:56  david_nichols

	* updates

2007-01-23 15:35  david_nichols

	* fixed bugs parsing empty JSON lists and hashes

2007-01-23 14:56  pvozenilek

	* constructor settings table done

2007-01-23 13:47  pvozenilek

	* tuxedo docs moved into separate tuxedo.docbook

2007-01-23 12:30  pvozenilek

	* fixed a name

2007-01-23 10:47  pvozenilek

	* normalized exception texts

2007-01-22 16:37  david_nichols

	* fixed a bug when an object deletes itself and fixed a potential
	  race condition with deleting objects

2007-01-22 15:46  david_nichols

	* solaris fix

2007-01-22 15:07  david_nichols

	* Solaris and HP-UX build fixes

2007-01-22 14:53  david_nichols

	* eliminated unused member of Operator class (ref_rv)

2007-01-22 14:36  david_nichols

	* doc update and checked in missing file

2007-01-22 14:28  david_nichols

	* * fixed a segfault in switch with comparison operators when the
	  switch argument was NULL
	  * updated case statements in switch to be able to process any
	  type when relational operators are used

2007-01-22 13:42  david_nichols

	* * moved HTTPClient, XmlRpcClient, and JsonRpcClient to the Qore
	  namespace
	  * added JsonRpcClient class documentation

2007-01-22 13:09  david_nichols

	* added XmlRpcClient documentation

2007-01-22 10:33  david_nichols

	* added JsonRpcClient class to library

2007-01-22 09:34  david_nichols

	* * added XmlRpcClient class to library
	  * fixed encoding bugs in parsing XML (libxml2 requires input to
	  be converted to UTF-8 before parsing

2007-01-22 08:08  pvozenilek

	* added description for Tibae Operations

2007-01-19 16:20  david_nichols

	* removed double square brackets

2007-01-19 16:19  david_nichols

	* doc updates

2007-01-19 14:42  david_nichols

	* extensive doc updates & JSON correction

2007-01-19 10:46  david_nichols

	* added HTTPClient class documentation
	  update HTTPClient class' behaviour to reflect the documented
	  behaviour

2007-01-18 16:36  pvozenilek

	* added debug check to ListIterator (detect change in the list
	  during iteration)

2007-01-18 16:10  david_nichols

	* removed HTTPClient file (is now builtin) and references to it

2007-01-18 16:06  pvozenilek

	* ListIterator::next() fixed and rewritten

2007-01-18 16:00  david_nichols

	* * added 2007 to copyright notices
	  * enabled internal HTTPClient class
	  * added C++ Hash::takeKeyValue() method

2007-01-18 10:11  pvozenilek

	* bugfix for empty list

2007-01-18 08:39  pvozenilek

	* MT safety for num_threads

2007-01-18 08:03  pvozenilek

	* fixed precedence bug

2007-01-17 16:29  david_nichols

	* httpclient updates

2007-01-17 16:28  david_nichols

	* cosmetic changes

2007-01-17 16:28  david_nichols

	* cosmetic improvement

2007-01-17 14:16  david_nichols

	* httpclient updates

2007-01-17 11:46  pvozenilek

	* documented the point needing change

2007-01-17 10:30  pvozenilek

	* added Operations specific README

2007-01-16 07:45  pvozenilek

	* tibae with support for synchronous Tibco operations

2007-01-16 07:03  david_nichols

	* minor cosmetic update

2007-01-11 15:34  david_nichols

	* httpclient updates

2007-01-10 18:56  david_nichols

	* small update

2007-01-10 14:45  david_nichols

	* added hexToInt() function to lib/ql_misc.cc to return an integer
	  for a hexadecimal string value

2007-01-10 12:14  david_nichols

	* JSON-RPC fixes

2007-01-10 08:09  david_nichols

	* update to QoreString API

2007-01-09 15:20  david_nichols

	* made QoreString::concat(QoreString *) private

2007-01-09 11:28  david_nichols

	* * added makeJSONRPCRequestString(), makeJSONRPCResponseString(),
	  makeJSONRPCErrorString(), makeFormattedJSONRPCRequestString(),
	  makeFormattedJSONRPCResponseString(), and
	  makeFormattedJSONRPCErrorString() functions to lib/ql_json.cc
	  * added tests for new functions to test/test.q

2007-01-08 17:12  david_nichols

	* added makeFormattedJSONString()

2007-01-08 16:26  david_nichols

	* implemented JSON parsing: "parseJSON()" and added JSON tests to
	  test.q

2007-01-08 10:55  david_nichols

	* fixed a "read from uninitialized memory" error with parsing

2007-01-05 16:56  david_nichols

	* cache invalidation optimizations

2007-01-05 11:17  david_nichols

	* removed double quote single quote strings

2007-01-05 08:16  david_nichols

	* updated man page to reflect version 0.6.0
	  updated spec file to reflect libqore.so.1.0.0

2007-01-05 08:10  david_nichols

	* fixed a bug

2007-01-04 16:24  david_nichols

	* small fixes

2007-01-04 16:16  david_nichols

	* minor fixes for debug mode

2007-01-04 15:27  david_nichols

	* * finally fixed line-number reporting bug - enabled bison
	  locations, split parse and runtime position tracking, added
	  ParseException class
	  * made error reporting more user-friendly by using string aliases
	  instead of token names in error messages from the parser
	  * fixed a bug in line-counting in singly-quoted strings by using
	  flex' yylineno
	  * removed some obsolete functions and references

2007-01-04 09:05  david_nichols

	* set shared library version to 1.0.0

2007-01-04 03:21  pvozenilek

	* make_pair() used

2007-01-04 02:52  pvozenilek

	* fixed deref leak

2007-01-03 18:51  david_nichols

	* delete handles NULL pointers correctly

2007-01-03 12:28  david_nichols

	* made QoreProgram::del() private

2007-01-03 12:05  david_nichols

	* must check if SBNode::statements is null or not before deleting

2006-12-30 19:45  pvozenilek

	* scope gaurd use on a few places

2006-12-30 16:53  pvozenilek

	* concat_n -> addch

2006-12-30 06:42  pvozenilek

	* used auto_ptrs, scope guards, one bug fixed

2006-12-30 01:21  pvozenilek

	* added QoreString::concat_n(), one call instead of loop

2006-12-29 15:19  david_nichols

	* missing include files

2006-12-29 15:17  david_nichols

	* fixed some bugs in list and hash evaluations

2006-12-29 14:32  david_nichols

	* fixed some bugs with new Tree implementation
	  updated TODO

2006-12-28 14:33  david_nichols

	* cosmetic updates

2006-12-28 00:07  david_nichols

	* implemented List::mergesort() and sortStable() using
	  stl::stable_sort
	  for sorting without a callback and List::mergesort() for
	  sortStable() with a callback - sorting with a callback is
	  interruptible in case of an exception thrown by the callback
	  function

2006-12-27 14:23  david_nichols

	* * fixed is_dev() function registration
	  * finished implementing sort() with callback
	  * added sort with callback tests and tests for is_*() functions

2006-12-27 04:52  david_nichols

	* fixed warning

2006-12-27 04:49  david_nichols

	* * fixed a race condition with QoreProgram::exportUserFunction()
	  * started implementing sort() with a callback comparison function
	  and sortStable() or sorting with a stable sorting algorithm

2006-12-27 02:49  david_nichols

	* checked in missing files

2006-12-26 04:54  david_nichols

	* added lib/ql_file.cc with is_file(), is_dir(), is_link(),
	  is_readable(), etc
	  added setuid(), seteuid(), setgid(), and setegid() functions to
	  lib/ql_lib.cc

2006-12-26 03:48  david_nichols

	* use a map for private object data, removed pviate KeyNode class
	  and greatly simplified the private KeyList class

2006-12-26 03:14  david_nichols

	* removed unused (and buggy) MemberList::copy() method

2006-12-25 21:31  pvozenilek

	* minor: faster iteration throwugh a set

2006-12-24 16:45  david_nichols

	* added missing include file

2006-12-24 16:44  david_nichols

	* added missing include files

2006-12-23 19:04  david_nichols

	* fixed memory leak and logical error in Operator.cc
	  added additional http socket method tests to socket-test.q

2006-12-23 14:49  david_nichols

	* added http tests to socket test script

2006-12-23 14:36  david_nichols

	* made module interface definition public

2006-12-23 14:30  david_nichols

	* fixed 64-bit library installs

2006-12-23 14:20  david_nichols

	* fixed a memory leak in the OperatorList destructor

2006-12-22 03:54  david_nichols

	* eliminated some warnings

2006-12-22 03:54  david_nichols

	* fix for tibae

2006-12-22 03:47  david_nichols

	* extensive API updates for SMP performance improvements - updates
	  geared at reducing the number of cache invalidations resulting in
	  more than 2x speed improvement on SMP machines for the areas
	  where
	  the optimizations have been implemented

2006-12-19 22:43  david_nichols

	* API cleanups

2006-12-19 19:09  david_nichols

	* added newline at eof

2006-12-19 19:08  david_nichols

	* added newline at EOF

2006-12-19 19:07  david_nichols

	* minor fixes

2006-12-19 19:05  david_nichols

	* major API cleanups

2006-12-18 02:30  david_nichols

	* major API cleanups

2006-12-17 03:55  david_nichols

	* missing file

2006-12-17 03:53  david_nichols

	* made method public

2006-12-17 03:52  david_nichols

	* updated to new QoreType api

2006-12-17 03:51  david_nichols

	* api update

2006-12-17 03:50  david_nichols

	* added newlines at EOF

2006-12-17 03:48  david_nichols

	* major API cleanup

2006-12-16 16:00  david_nichols

	* QoreSocket api cleanup

2006-12-16 14:47  david_nichols

	* more API cleanups

2006-12-16 05:25  david_nichols

	* api cleanups

2006-12-15 23:59  david_nichols

	* API cleanups, major QoreProgram API cleanup

2006-12-15 17:18  david_nichols

	* QoreNet and QoruURL cleanups, fixed url parsing so that @ signs
	  can appear in the password field as with datasource parsing

2006-12-15 15:10  david_nichols

	* more API cleanups

2006-12-15 14:36  david_nichols

	* api cleanups, added maps to qoregetopt

2006-12-14 19:08  david_nichols

	* QoreFile api cleanup

2006-12-14 18:50  david_nichols

	* made api public

2006-12-14 18:50  david_nichols

	* qorecondition api cleanup

2006-12-14 18:28  david_nichols

	* partial qoreclass cleanup (needs much more attention)

2006-12-14 04:37  david_nichols

	* more small API cleanups

2006-12-14 04:29  david_nichols

	* parisl mySocket internal API cleanup, various small cleanups

2006-12-13 16:01  david_nichols

	* missing changes

2006-12-13 16:01  david_nichols

	* sslprivatekey cleanup

2006-12-13 05:15  david_nichols

	* ModuleManager API cleanup, partial NamedScope cleanup, partial
	  Operator cleanup, other API cleanups

2006-12-12 12:08  pvozenilek

	* small fixes to make module compilable again

2006-12-11 23:31  david_nichols

	* Gate implementation cleanup

2006-12-11 23:27  david_nichols

	* more Function internal api cleanups

2006-12-11 23:20  david_nichols

	* FtpClient api cleanup

2006-12-11 22:44  david_nichols

	* ExecArgList cleanup

2006-12-11 22:35  david_nichols

	* partial exception API cleanup
	  fixed a bug in object method execution, when a method is called
	  on NULL, no exception was thrown

2006-12-11 21:42  david_nichols

	* fixed a potential race condition in DBIDriverList

2006-12-11 15:46  david_nichols

	* datetime cleanups

2006-12-11 15:09  david_nichols

	* tagged symbols for visibility

2006-12-11 15:04  david_nichols

	* datasource/oracle fixes

2006-12-11 14:56  david_nichols

	* more Datasource and ManagedDatasource cleanups

2006-12-09 17:15  david_nichols

	* partial datasource cleanup

2006-12-09 15:57  david_nichols

	* more DBI cleanups

2006-12-09 15:45  david_nichols

	* partial DBI cleanup

2006-12-09 13:49  david_nichols

	* Context and Find cleanups

2006-12-09 00:50  david_nichols

	* fixed builtin inheritance tests

2006-12-08 22:39  pvozenilek

	* forgotten builtin inheritance test added

2006-12-06 12:28  pvozenilek

	* deref needs a parameter

2006-12-06 12:27  david_nichols

	* tibae compile fixes

2006-12-06 09:18  david_nichols

	* use size_t for 64-bit platforms

2006-12-06 09:16  pvozenilek

	* commented ot a test b/c missing file

2006-12-06 09:10  pvozenilek

	* commented ot a test b/c missing file

2006-12-06 03:28  pvozenilek

	* Reference pointer now accepts xsink

2006-12-05 15:44  pvozenilek

	* test for ReferenceHolder added

2006-12-05 03:11  pvozenilek

	* more tests forn builtin inheritance

2006-12-04 22:03  pvozenilek

	* more tests for builtin inheritance

2006-12-04 06:45  pvozenilek

	* ipdate

2006-12-04 06:43  pvozenilek

	* QoreClassList tests in file of its own

2006-12-04 06:28  pvozenilek

	* tests for builtin inheritance

2006-12-02 08:02  david_nichols

	* missing file

2006-12-02 08:01  david_nichols

	* qoreclasslist fixes

2006-12-01 23:52  pvozenilek

	* tests converted to QoreProgram

2006-12-01 21:47  pvozenilek

	* support of Qore tests as strings

2006-12-01 15:11  pvozenilek

	* builtin inheritance tests moved here

2006-12-01 14:37  pvozenilek

	* builtin inheritance test moved to the main executable

2006-12-01 14:01  pvozenilek

	* test for ReferenceHolder added

2006-12-01 09:00  david_nichols

	* ConstantList: more api cleanups

2006-11-30 20:26  pvozenilek

	* ReferenceHolder.h into Makefile.am

2006-11-30 20:25  pvozenilek

	* ReferenceHolder is better name

2006-11-30 17:36  david_nichols

	* more API cleanups, partial charset.cc|h cleanup

2006-11-30 16:31  pvozenilek

	* a test for builtin inheritance added

2006-11-30 16:30  pvozenilek

	* QoreClassHolder added

2006-11-30 15:10  pvozenilek

	* test run as separate processes moved into QoreProgram

2006-11-30 14:29  pvozenilek

	* fix for multiple loaded objects

2006-11-30 13:53  david_nichols

	* implemented default destructors for builtin classes
	  removed all destructors where the behavior was the same as the
	  default
	  fixed a memory leak with the ARGV variable

2006-11-30 13:13  david_nichols

	* test update

2006-11-30 10:04  david_nichols

	* new test approach

2006-11-29 20:23  david_nichols

	* added missing file

2006-11-29 20:22  david_nichols

	* api cleanups, improved c++ qore class interface

2006-11-29 16:39  david_nichols

	* more QoreClass cleanups, enabled inheritance in builtin classes

2006-11-29 13:55  pvozenilek

	* removed forgotten debug prints

2006-11-28 19:00  david_nichols

	* more QoreClass cleanups, inheritance fixes

2006-11-28 13:15  pvozenilek

	* TuxedoTest class added, in DEBUG mode only

2006-11-28 08:05  david_nichols

	* fixes to compile with debugging enabled

2006-11-26 21:22  david_nichols

	* removed "inline" from an exported function

2006-11-26 21:02  david_nichols

	* more QoreClass cleanups, eliminated some functions, tagged builin
	  function list initializer functions as dlllocal, separated object
	  functions into ql_object.cc

2006-11-26 16:52  david_nichols

	* more QoreClass cleanups

2006-11-26 09:24  david_nichols

	* more QoreClass cleanups

2006-11-25 19:58  david_nichols

	* more QoreClass API improvements, more use of STL features where
	  appropriate
	  more safe_dslist improvements to better implement an STL-like
	  interface

2006-11-24 17:18  david_nichols

	* more QoreClass API makeover work
	  temporarily disabled HTTPClient class

2006-11-24 09:30  david_nichols

	* cosmetic update to architecture tag

2006-11-23 17:38  david_nichols

	* added PlatformOS and PlatformCPU constants
	  changed some variable names to avoid overriding class member
	  names

2006-11-23 00:05  pvozenilek

	* update

2006-11-22 18:48  pvozenilek

	* update

2006-11-22 14:55  pvozenilek

	* update http client

2006-11-22 12:20  pvozenilek

	* test updated

2006-11-22 11:13  pvozenilek

	* examples updated

2006-11-22 07:17  david_nichols

	* fixes for compiling on g++ 3.2

2006-11-22 04:19  pvozenilek

	* update

2006-11-22 03:58  pvozenilek

	* update

2006-11-22 01:01  pvozenilek

	* started with HTTPClient

2006-11-21 23:48  pvozenilek

	* test for Namespace.cc added

2006-11-21 13:51  pvozenilek

	* case > 1 support added with all the tests

2006-11-21 11:55  pvozenilek

	* preparation for switch with <, >, etc

2006-11-21 11:45  pvozenilek

	* added tests for switch

2006-11-21 11:07  pvozenilek

	* test for List::derefAndDelete

2006-11-21 10:22  pvozenilek

	* tests/ directory, the tests moved in

2006-11-20 23:14  pvozenilek

	* a test for Hash::derefAndDelete

2006-11-20 22:52  pvozenilek

	* QoreString: 1 buxfix, few funcs sped up, runQoreTests() now
	  callable

2006-11-20 19:24  pvozenilek

	* QoreString(bool) constructor + test

2006-11-20 18:36  david_nichols

	* fixed a potential race condition accessing privateData

2006-11-20 17:50  david_nichols

	* starting qoreclass cleanup, disabled stlport on solaris

2006-11-20 12:45  david_nichols

	* added missing file

2006-11-20 12:43  david_nichols

	* fixed tibrv linking

2006-11-20 12:38  david_nichols

	* fix for single compilation unit compile

2006-11-20 10:56  david_nichols

	* ported to new API changes

2006-11-20 10:51  david_nichols

	* fixes to single-file compile and module ports to new API

2006-11-20 10:43  david_nichols

	* added missing file

2006-11-20 10:31  david_nichols

	* added missing file

2006-11-20 09:51  david_nichols

	* streamlined Namespace interface
	  fixed a typo in configure

2006-11-19 17:08  david_nichols

	* cleaned up Object interface, visibility tags added
	  moved exception functions to Exception.h

2006-11-19 16:20  david_nichols

	* * cleaned up List interface, visibility tags added
	  * made List and Hash destructors protected to force an explicit
	  dereference before the delete to ensure that any exceptions in
	  contained objects can be caught

2006-11-19 11:54  david_nichols

	* made Hash::needs_eval private, implemented accessor methods

2006-11-19 11:05  david_nichols

	* commit corresponding h file to last commit

2006-11-19 11:04  david_nichols

	* moved extraneous includes to cc file

2006-11-19 11:02  david_nichols

	* cleanup up QoreString interface, tagged for gcc shared object
	  visibility
	  moved html_codes to QoreString

2006-11-19 08:49  david_nichols

	* * added lib/ql_json.cc for JSON support
	  * added ql_debug.cc in single compilation unit in lib
	  * new QoreString methods for concatentaing and automatically
	  escaping characters
	  * changed DateTime methods to allow for concatenating formatted
	  date strings to existing strings

2006-11-19 06:55  david_nichols

	* checked in missing files

2006-11-19 06:40  david_nichols

	* enabled single compilation unit compiles by default

2006-11-18 18:11  david_nichols

	* starting tagging const methods, reducing excessive inlining

2006-11-18 07:56  david_nichols

	* changes to make the spoec file more release-agnostic

2006-11-18 07:41  david_nichols

	* doc and description updates

2006-11-17 17:22  david_nichols

	* check for gcc before trying to use gcc-specific inline assembly
	  on i386

2006-11-17 16:28  david_nichols

	* enable 64-bit compilation on Solaris for sparc and x86

2006-11-17 16:27  david_nichols

	* enable 64-bit compile on sparc

2006-11-17 07:46  david_nichols

	* added missing Makefile.am, added qore_target_bits to library

2006-11-17 07:31  david_nichols

	* added quotes to $ARCH and $OS defines

2006-11-17 06:40  david_nichols

	* made TIBCO adapter SDK independent from RV in configure,
	  separated modules/TIBCO into tibrv and tibae directories

2006-11-17 06:21  david_nichols

	* fixed another typo in configure

2006-11-17 06:18  david_nichols

	* fixed typo in configure

2006-11-17 06:17  david_nichols

	* fixed architecture setting on HP-UX, added TARGET_BITS to library

2006-11-17 06:10  david_nichols

	* fix

2006-11-16 20:57  david_nichols

	* changes to compile tuxedo module with tux 8.*

2006-11-16 06:02  pvozenilek

	* deleted Qore file

2006-11-16 06:00  pvozenilek

	* update

2006-11-16 05:38  pvozenilek

	* update

2006-11-15 13:55  pvozenilek

	* queueing

2006-11-15 11:29  david_nichols

	* fix for HP-UX vnsprintf() return value when buffer is too small

2006-11-15 07:12  pvozenilek

	* update

2006-11-15 05:48  pvozenilek

	* async calls

2006-11-14 17:26  david_nichols

	* fixed typo

2006-11-14 17:19  david_nichols

	* hpux libtool hack fix

2006-11-14 17:06  david_nichols

	* 64-bit hpux build fixes - more hacks to libtool :-(

2006-11-14 16:18  david_nichols

	* hpux fix (attempt)

2006-11-14 15:27  david_nichols

	* added missing line

2006-11-14 15:25  david_nichols

	* fixed typo

2006-11-14 15:04  david_nichols

	* fix for HPUX 64-bit compiles with tibco rendezvous

2006-11-14 14:52  pvozenilek

	* update

2006-11-14 14:26  david_nichols

	* disabled TIBCO AE SDK on HP-UX PA-RISC

2006-11-14 11:28  david_nichols

	* fixes

2006-11-14 07:43  pvozenilek

	* getEncodiung instead of getCharset

2006-11-14 07:04  pvozenilek

	* update

2006-11-14 00:24  pvozenilek

	* added QoreString::getCharset() const

2006-11-13 15:14  david_nichols

	* added some charset aliases for HP-UX character set abbreviations

2006-11-13 15:02  david_nichols

	* added static configure options for packing on systems without
	  required libraries

2006-11-13 13:09  pvozenilek

	* added raiseExceptionArg()

2006-11-11 16:10  david_nichols

	* configure fix

2006-11-11 15:01  david_nichols

	* changed libxml2 detection in configure to be like pcre and
	  openssl
	  detection, removed dependence on pkg-config

2006-11-11 13:11  david_nichols

	* removed hpux hack directory

2006-11-11 12:58  david_nichols

	* more configure fixes

2006-11-11 11:21  david_nichols

	* more hpux g++ fixes

2006-11-11 10:56  david_nichols

	* fixed 32-bit linking with 64-bit oracle installations (use
	  $ORACLE_HOME/lib32)

2006-11-11 09:43  david_nichols

	* hpux fix

2006-11-11 09:40  david_nichols

	* hpux build fixes

2006-11-11 09:37  david_nichols

	* files needed for hpux compile

2006-11-11 09:36  david_nichols

	* hpux g++ fix

2006-11-11 09:24  david_nichols

	* hpux configure fix

2006-11-11 09:07  david_nichols

	* fix for solaris g++ build

2006-11-11 08:29  david_nichols

	* * readded OPENSSL_DIR detection in configure
	  * improved pcre library and header detection in the same was as
	  the
	  openssl configure code

2006-11-10 09:37  david_nichols

	* * added initial HP-UX itanium support to configure
	  * improved openssl library and header file detection in
	  configure; now
	  the script checks for libcrypto and guarantees to get the header
	  files
	  associated with the libraries found

2006-11-09 12:24  david_nichols

	* added another duplicate

2006-11-09 11:56  david_nichols

	* added repeated key to xml test

2006-11-09 10:59  david_nichols

	* updated to produce PA-RISC 2.0 32-bit binaries on HP-UX with a
	  32-bit compile

2006-11-08 23:48  pvozenilek

	* update

2006-11-08 21:11  david_nichols

	* updated build notes for oracle on hpux

2006-11-08 17:55  david_nichols

	* * Solaris build fix (include -lz and -lm on library link line)
	  * updated ltmain.sh
	  * fixed ncurses module compilation with Solaris curses library

2006-11-08 17:52  david_nichols

	* Darwin "environ" fix (why was this working before?)

2006-11-08 16:00  david_nichols

	* removed debugging statement

2006-11-08 15:50  david_nichols

	* more HP-UX build fixes

2006-11-08 14:04  david_nichols

	* updated configure to find ncurses in non-standard locations and
	  to use Solaris curses if found
	  updated configure to detect and use oracle instant client
	  libraries if found
	  updated configure infrastructure to use a customer libtool script
	  on HP-UX platforms to ensure that static libraries can be linked
	  to modules

2006-11-08 05:20  pvozenilek

	* fml_api now in main class

2006-11-08 05:09  pvozenilek

	* update

2006-11-07 22:03  david_nichols

	* detect static-only libraries in configure and make sure to set up
	  link line to include full static library path, otherwise building
	  modules fails on HP-UX

2006-11-07 19:05  david_nichols

	* HP-UX compile fixes

2006-11-07 18:04  david_nichols

	* configure updates to allow TIBCO AE SDK to be recognized on HP-UX

2006-11-07 17:18  david_nichols

	* * HP-UX configure fix in configure.ac
	  * fixed character set names to use only valid aliases on HP-UX

2006-11-07 16:15  david_nichols

	* HP-UX configure fix

2006-11-07 02:03  pvozenilek

	* update

2006-11-06 10:41  david_nichols

	* documented additional svn dependency

2006-11-06 10:13  pvozenilek

	* added nissing forward for QoreNode

2006-11-06 09:45  pvozenilek

	* removed deleted Tuxedo headers

2006-11-06 09:07  david_nichols

	* * replaced obsolete autoconf/automake macros in configure.ac
	  * added "class" to declaration in Exception.h to enable
	  compilation when "QoreNode.h" is not included before Exception.h

2006-11-06 05:36  pvozenilek

	* update

2006-11-06 02:51  pvozenilek

	* update

2006-11-05 21:04  pvozenilek

	* deleted files replaced by TuxedoAdapter

2006-11-05 19:46  pvozenilek

	* low_level.cc moved into the class

2006-11-05 03:20  pvozenilek

	* update

2006-11-04 20:28  pvozenilek

	* MT test, update

2006-11-03 02:31  pvozenilek

	* update

2006-11-02 23:05  pvozenilek

	* update, queue test, rm old files

2006-11-02 02:28  pvozenilek

	* update

2006-11-02 01:59  pvozenilek

	* update

2006-11-01 11:18  pvozenilek

	* update

2006-11-01 06:08  pvozenilek

	* update

2006-11-01 05:38  pvozenilek

	* update

2006-11-01 03:45  pvozenilek

	* update

2006-11-01 00:53  pvozenilek

	* added adaptor class

2006-10-31 23:50  pvozenilek

	* update

2006-10-31 04:51  pvozenilek

	* more unit tests, misc fixes

2006-10-30 22:50  pvozenilek

	* added bool() operator for ExceptionSink

2006-10-29 22:23  pvozenilek

	* unhandled Qore exception -> exit code 3

2006-10-28 01:41  pvozenilek

	* more unit tests

2006-10-27 21:06  pvozenilek

	* more unit tests

2006-10-27 12:49  pvozenilek

	* single TU reverted as it clashes with unit test mechanism

2006-10-27 11:37  pvozenilek

	* docs updated

2006-10-27 02:47  pvozenilek

	* unit tests added

2006-10-26 23:06  pvozenilek

	* update, unit test support added

2006-10-25 22:11  pvozenilek

	* ScopeGuard moved, one TU support, other changes

2006-10-24 15:11  pvozenilek

	* added context class

2006-10-24 14:07  pvozenilek

	* update

2006-10-24 12:08  david_nichols

	* more fixes to make non-debugging builds compile

2006-10-24 12:01  david_nichols

	* fixed non-debugging builds

2006-10-24 10:47  pvozenilek

	* tuxedo_support.q added

2006-10-24 10:31  pvozenilek

	* update

2006-10-24 00:19  pvozenilek

	* update

2006-10-23 22:55  pvozenilek

	* update

2006-10-23 19:51  pvozenilek

	* added HTML docs in Wiki style, updates

2006-10-23 01:38  pvozenilek

	* FML support (mising files)

2006-10-23 01:30  pvozenilek

	* FML support

2006-10-20 11:20  david_nichols

	* fixed a segfault in the background operator when a parse
	  expression is
	  evaluated to NULL

2006-10-19 20:40  pvozenilek

	* update

2006-10-19 09:21  david_nichols

	* changes to allow '@' signs in database passwords (+ test)

2006-10-18 17:32  pvozenilek

	* one file renamed

2006-10-18 13:34  pvozenilek

	* removed classes taht will be high level Qore code

2006-10-18 09:38  pvozenilek

	* deleting remaining FML related files

2006-10-18 09:36  pvozenilek

	* deleting remaining FML related files

2006-10-18 09:33  pvozenilek

	* deleting QoreTuxedoFml32Id.cc

2006-10-17 15:32  pvozenilek

	* FML(32) buffers/ids rolled back

2006-10-17 13:14  pvozenilek

	* added classes for FML/FML32 IDs

2006-10-17 12:35  pvozenilek

	* added FML and FML32 buffer classes

2006-10-17 11:30  pvozenilek

	* update

2006-10-16 21:43  pvozenilek

	* smnall update

2006-10-16 07:35  david_nichols

	* missing file

2006-10-15 19:28  pvozenilek

	* update

2006-10-14 21:21  david_nichols

	* * set relative=false in methods where an absolute date is
	  assigned in
	  the DateTime class
	  * fixed a memory leak with the qore basename() function
	  * fixed a circular reference count issue with thread data and the
	  QoreProgram class
	  * fixed a linked-list problem when using QoreQueue objects as a
	  stack

2006-10-14 11:21  david_nichols

	* made all parseXMLRPC* funtions ignore significant whitespace

2006-10-13 18:40  david_nichols

	* removed broken Object::getMemberValue() method and no-longer
	  necessary
	  getExistingVarValueWithMethod() function from lib/variable.cc

2006-10-13 16:16  david_nichols

	* added missing files

2006-10-13 16:15  david_nichols

	* started working on deadlock detection

2006-10-13 11:30  pvozenilek

	* TuxedoQueueCtl finished

2006-10-13 10:54  pvozenilek

	* update

2006-10-12 23:33  pvozenilek

	* update

2006-10-12 23:10  pvozenilek

	* update

2006-10-12 11:49  david_nichols

	* fixed a bug in new charset creation

2006-10-11 23:28  pvozenilek

	* config parameters class for queues added

2006-10-11 22:00  pvozenilek

	* update

2006-10-11 19:06  pvozenilek

	* constants now unique

2006-10-11 18:11  pvozenilek

	* update

2006-10-11 16:59  david_nichols

	* changed configure to use TUXDIR instead of TUX_DIR

2006-10-11 15:46  pvozenilek

	* update

2006-10-11 10:38  pvozenilek

	* update

2006-10-11 01:44  pvozenilek

	* update

2006-10-11 00:12  pvozenilek

	* low level API added

2006-10-10 17:17  pvozenilek

	* update

2006-10-10 10:45  pvozenilek

	* binary & XMl formats added for TuxedoAdapter

2006-10-10 09:04  pvozenilek

	* 'Tuxedo' prefix now used for Tuxedo classes

2006-10-10 06:37  david_nichols

	* fixed reference to debugging function

2006-10-10 04:48  david_nichols

	* doc updates

2006-10-10 04:46  david_nichols

	* doc update

2006-10-09 17:17  pvozenilek

	* conversational mode for Tuxedo

2006-10-09 12:09  pvozenilek

	* more of conversational mode

2006-10-09 08:30  pvozenilek

	* conversation mode started

2006-10-09 07:48  david_nichols

	* renamed mutex

2006-10-09 07:42  david_nichols

	* made LockedObject a protected member in ReferenceObject so that
	  classes inheriting both classes would not conflict

2006-10-09 00:21  pvozenilek

	* revert last commit (-lpthread)

2006-10-09 00:20  pvozenilek

	* one header to noinst_HEADERS

2006-10-09 00:17  pvozenilek

	* asycn test fixed

2006-10-09 00:15  pvozenilek

	* central error, handling, conversational client

2006-10-08 19:01  david_nichols

	* fixed typos in ql_xml exception text, added todo info

2006-10-08 06:35  david_nichols

	* implemented copy constructor for HTTPClient, made object safe to
	  share among multiple threads

2006-10-08 06:09  david_nichols

	* added copy constructor to HTTPClient class

2006-10-06 00:28  pvozenilek

	* async calls now work

2006-10-06 00:06  pvozenilek

	* added support for direct calls

2006-10-06 00:05  pvozenilek

	* added tests for direct call

2006-10-05 17:32  david_nichols

	* note

2006-10-05 13:53  david_nichols

	* todo update

2006-10-05 11:04  pvozenilek

	* minor update for copy tests

2006-10-05 10:53  david_nichols

	* fixed m4/acx_thread.m4 to include -lpthread in PTHREAD_LIBS on
	  linux

2006-10-05 07:27  david_nichols

	* * removed extraneous "static" from 2 callback functions in oracle
	  module
	  * updates tuxedo check to check for 8.* and 9.*

2006-10-05 05:38  david_nichols

	* updated configure to try to detect tuxedo version and set
	  configure
	  link flags appropriately (currently only for 8.1 and 9.1)

2006-10-05 04:58  david_nichols

	* * fixed ReferenceObject to no longer to a cache sync (or at worst
	  a
	  mutex lock and unlock on platforms without definitions for atomic
	  operations like sparc, pa-risc, etc) when decrementing and the
	  reference_count is 1. This should result in an overall execution
	  speed improvement. this means that temporary shared objects that
	  never go over a reference count of 1 will never cause any cache
	  synchronization on SMP systems.

2006-10-04 21:39  pvozenilek

	* more tests for Tuxedo

2006-10-04 21:38  pvozenilek

	* updates, mainly for tests

2006-10-04 19:57  david_nichols

	* improved mysql checks in configure

2006-10-04 18:21  pvozenilek

	* added tests for Tuxedo

2006-10-04 18:20  pvozenilek

	* TestTuxedo removed, updates

2006-10-04 15:37  david_nichols

	* fixed for last patch

2006-10-04 15:30  david_nichols

	* added methods to add dir lists to module manager search lists

2006-10-04 14:25  david_nichols

	* * added internal q_dirname() function to QoreLib.h
	  * added methods to ModuleManager to manually add module
	  directories

2006-10-04 08:34  pvozenilek

	* minimal tuxedo test

2006-10-03 23:37  pvozenilek

	* fixed a code for DEBUG mode

2006-10-03 15:58  david_nichols

	* removed temporary file from repository

2006-10-03 15:57  david_nichols

	* solaris fixes

2006-10-03 15:35  david_nichols

	* added changelog entry

2006-10-03 15:34  david_nichols

	* removed harmful -pthread flag from solaris checks, on solaris 8
	  at least this results in unusable libraries

2006-10-03 14:04  david_nichols

	* commented out test with gmtime() - not available on solaris

2006-10-03 13:50  david_nichols

	* more Solaris compile fixes

2006-10-03 13:26  david_nichols

	* more solaris build fixes

2006-10-03 13:13  david_nichols

	* renamed thread.h to qore_thread.h to avoid conflicting with
	  solaris thread.h

2006-10-03 12:17  david_nichols

	* fix

2006-10-03 10:20  david_nichols

	* fixed name of spec file

2006-10-03 08:57  david_nichols

	* * improved GetOpt class date parsing to accept ISO-8601 and qore
	  date/
	  time specifications (i.e. 2006-01-01 or 2006-01-01T10:00:00, etc)
	  as
	  well as the old format (20060101, 20060101100000)

2006-10-02 16:17  david_nichols

	* fixes

2006-10-02 13:58  pvozenilek

	* =typo fixed

2006-10-02 12:24  pvozenilek

	* =QoreTuxedoAdapter.{cc|h} updated

2006-10-02 12:22  pvozenilek

	* =started test suite tuxedo-test.q

2006-10-02 09:00  david_nichols

	* return value fix

2006-10-02 08:59  david_nichols

	* fixes

2006-10-02 08:51  david_nichols

	* * fixed modules/TIBCO/Makefile.am to include flags for pthread
	  * fixed --without-tuxedo logic in configure.ac
	  * added forgotten destructor in safe_dslist template

2006-10-02 05:21  pvozenilek

	* =Added Tuxedo::Adapter class (incomplete)

2006-10-01 17:51  david_nichols

	* * fixed some bugs in the Datasource class introduced in 0.5.2
	  where a
	  timeout grabbing the transaction lock would cause a deadlock on
	  future
	  operations on the datasource (with some Datasource methods)
	  * separated the qore Datasource class into a DatasourceBase clas
	  and a
	  Datasource class
	  * fixed a bug in the SingleExitGate class where a timeout would
	  cause a
	  deadlock the next time ::enter() was called (also affected the
	  Datasource class)
	  * updated examples/db-test.q to test datasource lock timeouts

2006-10-01 11:49  david_nichols

	* debug with profile fix

2006-10-01 11:45  david_nichols

	* updated all Makefile.am files in SVN so that profiling will be
	  enabled even if --enable-debug is also chosen in configure

2006-10-01 11:24  david_nichols

	* * corrected the atomicity of module initialization
	  * reviewed use of new STL containers for thread-concurrency
	  problems
	  * removed GlobalVariableList lock and ensured that all reads and
	  writes take place under the parse lock on the containing program
	  object
	  * ensured that all run-time accesses to the UserFunctionList map
	  under
	  QoreProgram objects takes place in the parse lock
	  * write templated safe_dslist for a singly-linked list with
	  constant-
	  time inserts at the beginning and end

2006-09-30 17:26  david_nichols

	* added hash_map/map support for more lists for quick lookups

2006-09-30 14:02  david_nichols

	* added more timing info

2006-09-30 13:48  david_nichols

	* * changed all StringList classes to be based on STL container
	  functionality
	  * added detection of "slist" container support

2006-09-29 20:14  david_nichols

	* * throw an exception when fork() is called and more than one
	  thread is running
	  * use std::map instead of linked lists when hash_map not
	  available

2006-09-29 14:56  david_nichols

	* removed auto-generated file

2006-09-29 14:56  david_nichols

	* * implemented support for directly specifying binary constant
	  values in
	  the scanner using a hex format surrounded by angle brackets
	  (ex: <34bef4>)
	  * fixed a bug in the chomp operator when chomping a newline at
	  the
	  beginning of the string
	  * fixed a bug in the Queue class; a timeout in ::get() or ::pop()
	  would
	  cause a deadlock on the next call to ::get() or ::pop()

2006-09-28 10:04  pvozenilek

	* =LockedObject used instead of RMutex

2006-09-28 08:46  david_nichols

	* fixed broken ncurses module, made calls to initscr() optional

2006-09-27 23:33  pvozenilek

	* =headers added into config script

2006-09-27 22:25  pvozenilek

	* =Tuxedo::Connection finished

2006-09-27 09:41  david_nichols

	* added bea tuxedo checks to configure

2006-09-27 09:04  david_nichols

	* updated version to 0.6.0

2006-09-26 21:25  pvozenilek

	* =Tuxed::Connection updates

2006-09-26 20:32  pvozenilek

	* =Initial version of Tuxedo::Connection class

2006-09-26 17:53  pvozenilek

	* =Tuxedo: authentification_required_by_Tuxedo() added

2006-09-26 15:02  david_nichols

	* * fixed a bug in QoreTibrvTransport.cc
	  * fixed a bug in ssl_constants.h on g++32

2006-09-26 12:41  david_nichols

	* doc & spec file updates

2006-09-26 10:12  david_nichols

	* * removed getSSLCertVerficationCodeString() function and changed
	  Socket::verifyPeerCertificate() and
	  FtpClient::verifyPeerCertificate()
	  to directly return the string code instead of a numeric code.
	  * bug fixes to test/socket-test.q
	  * doc updates

2006-09-25 16:08  david_nichols

	* * fixed getByte() to no longer try to use negative offsets
	  * sanitized digest exceptions
	  * doc updates

2006-09-25 11:14  david_nichols

	* fixed feature name registration for automatically-loaded modules

2006-09-24 12:01  david_nichols

	* removed the "synchronization-ignored" warning

2006-09-24 11:54  david_nichols

	* updated ncurses module initialization

2006-09-22 12:19  david_nichols

	* error-handling fix in ModuleManager.cc

2006-09-22 09:33  pvozenilek

	* config files now aware of Tuxedo module

2006-09-22 09:32  pvozenilek

	* 

2006-09-22 09:08  pvozenilek

	* 

2006-09-21 12:38  david_nichols

	* fixed a parse-related static memory leak in lib/parser.yy

2006-09-21 11:53  david_nichols

	* fixed a bug where auto-loaded modules were not registering their
	  provided features so module code could be loaded more than once
	  if a "%requires" directive for that module was parsed

2006-09-21 09:40  david_nichols

	* fixed type manager destruction when the library is not completely
	  initialized

2006-09-21 08:35  david_nichols

	* changes to make a win32 port possible

2006-09-17 08:39  david_nichols

	* doc updates, some cosmetic code changes (exceptions renamed, etc)

2006-09-15 16:26  david_nichols

	* example data files

2006-09-15 16:25  david_nichols

	* new script

2006-09-15 16:22  david_nichols

	* doc updates, small fixes

2006-09-12 18:00  david_nichols

	* * delayed QoreTypeManager initialization of default values until
	  after
	  the default character set is set in order to ensure that
	  NullString
	  is marked with a character set encoding
	  * minor improvements to some test scripts

2006-09-12 16:49  david_nichols

	* * implemented the "unreachable-code" warning
	  * implemented the ability to return parse warnings if a parse
	  mask is
	  passed to Program::parse(), ::parsePending(), or ::parseCommit()
	  as
	  the last argument to each respective method
	  * changed parseDatasource() to correctly parse a datasource
	  string
	  without a username or password
	  * made QoreClass::name private
	  * divided PO_NO_THREADS into PO_NO_THREAD_CONTROL (-R) and
	  PO_NO_THREAD_CLASSES (-X) and respective command-line options

2006-09-10 18:17  david_nichols

	* doc update

2006-09-10 18:01  david_nichols

	* fixes

2006-09-10 17:53  david_nichols

	* missing file

2006-09-10 17:49  david_nichols

	* * "tibrv" module: fixed exception handling in
	  QoreTibrvCmTransport
	  * "tibae" module: updated to new internal API
	  * fixed a memory leak when deleting qore classes that have
	  pending
	  method additions (affected builds with and without STL hash_map
	  support)
	  * fixed class execution when %exec-class is not used
	  * implemented the "-A" command-line option to disallow changes to
	  the
	  warning level
	  * added domain tags to builtin classes to allow for enforcing
	  parse
	  restrictions on class access
	  * implemented logic to verify function domains of classes when
	  using the
	  "new" operator and when declaring base classes with "inherits" -
	  if
	  a class provides functionality restricted by the current parse
	  options
	  an exception is thrown
	  * implemented -B command-line option to disallow database access
	  * implemented warning: undeclared-var
	  * implemented defaultWarningHandler() to print out warnings in a
	  user-
	  friendly way
	  * implemented warning: duplicate-global-var
	  * made it illegal to declare constructor and destructor methods
	  as
	  private
	  * implemented warning: synchronization-ignored
	  * fixed error detection and reporting in scanner.ll when a
	  required
	  argument was not given to a parse directive (like %exec-class)
	  * implemented "flush()" function to flush standard output as
	  printed by
	  print(), printf(), etc
	  * combined some thread tests into test/thread-object-test.q
	  * fixed a race condition in thread.cc where the thread list was
	  accessed outside the thread lock but could be dynamically
	  reallocated
	  -- now the thread list is static
	  * "ncurses" module: changed the Window and Panel classes to call
	  qore_ncurses_init() before creating the objects instead of
	  afterwards
	  which fixed a segfault in examples/hanoi.q
	  * fixed a problem when a builtin class would throw an exception
	  in the
	  constructor and if Object::doDeleteNoDestructor() was not called
	  (which has been removed as a part of this patch) the destructor
	  would be run after the object had been deleted which would cause
	  another exception to be thrown. Without this function call,
	  builtin
	  classes in class hierarchies would not have their private data
	  dereferenced. Now all builtin constructors throwing exceptions
	  have
	  to do is to throw the exception and then Object::obliterate() is
	  called, taking care of all private data and Object destruction.
	  * implemented a flexible parse warning framework and 3 warnings:
	  duplicate-local-vars, warning-mask-unchanged, unknown-warning
	  * implemented the following parse directives:
	  %enable-all-warnings,
	  %disable-all-warnings, %enable-warning <arg>, %disable-warning
	  <arg>
	  * implented the -W flag to enable all warnings and the
	  PO_LOCK_WARNINGS
	  parse restriction
	  * implemented the -r command-line flag to treat warnings as
	  errors
	  * changed all functions and methods taking timeout values to
	  accept both
	  integers, relative times (i.e. 150ms), or absolute times (in
	  which
	  case the timeout will be automatically calculated from the
	  current
	  time)
	  * updated QoreQueue::pop() and shift() debugging statements to
	  only
	  output when debugging
	  * implemented the "chomp" operator similar to perl's, added tests
	  to
	  test/test.q
	  * doc updates

2006-09-08 09:54  david_nichols

	* * doc updates
	  * removed include/qore/module.h - modules should only include
	  qore/ModuleManager.h
	  * module API changes: module_init routines should return a
	  QoreString *
	  with an error message when errors occur
	  * more descriptive errors are reported when module loading errors
	  are
	  encountered
	  * if a module provides a feature other than the one requested
	  (when
	  modules are loaded based on the required feature name) an error
	  is
	  raised and the module is not loaded

2006-09-07 14:58  david_nichols

	* * "mysql" module: fixed placeholder binding to work properly with
	  the
	  Qore DBI syntax
	  * removed the "describe" method from the DBI API and from the
	  oracle
	  and mysql modules
	  * added a list argument parameter to the DBI select and
	  select_rows
	  methods so that value binding can also be supported for select
	  statements
	  * "mysql" module: enabled value binding for select statements
	  * "oracle" module: enabled value binding for select statements
	  * fixed a object destruction ordering issue in QoreProgram.h
	  * changed all references to "%08x" to "%08p" so 64-bit pointers
	  won't
	  throw off arguments in printf format strings
	  * "mysql" module: implemented bind by value and placeholder
	  binding

2006-09-06 10:11  david_nichols

	* * changed the internal c++ qore object API to handle references
	  internally, greatly simplifying the job of implementing qore
	  classes
	  in c++ - fixed some reference-counting bugs at the same time
	  * made special function templates for class constructors,
	  destructors,
	  and copy methods for the most efficient execution, a pointer to
	  the
	  private object is now passed to each method that could need it
	  (all
	  methods except the constructor)
	  + doc updates

2006-09-05 07:03  david_nichols

	* made QoreProgram first set all program-local (non-imported)
	  global variables to NULL and then delete

2006-09-04 16:04  david_nichols

	* * fixed circular reference count issue between
	  objects->programs->
	  global variable list->objects by implementing 2 phase references
	  for
	  program objects
	  * streamlined 2 phase objects referencess
	  * "mysql" module: started implementing value and placeholder
	  binding
	  functionality
	  * "oracle" module: fixed access to private DateTime members

2006-09-04 09:20  david_nichols

	* fixed accesses to private DateTime members

2006-09-04 09:15  david_nichols

	* checking in correct versions

2006-09-04 08:18  david_nichols

	* renamed classes to be oracle-specific

2006-09-03 17:24  david_nichols

	* * added a new format for printing relative dates with *printf %n
	  & %N
	  formats: <time: x years x months ...etc >
	  * implemented absolute date difference algorithm that produces
	  relative
	  dates normalized to day,hour,minute,second,ms
	  (i.e. 2006-01-02 - 2006-01-01 = 1D), previously this would
	  produce a
	  nonsense result
	  * fixed another bug with generating dates on year boundries 2
	  years
	  before and after the epoch from epoch offsets
	  * made time information members of the DateTime class private to
	  isolate
	  the implementation from the interface to prepare for a better
	  (hopefully more efficient) implementation
	  * changed getDayOfWeek() (again) to return 0-6 for sun-sat
	  (useful for
	  array lookups)
	  * added getISODayOfWeek() to return 1-7 for mon-sun
	  * updated date tests in test/test.q and added more tests for more
	  boundry conditions

2006-09-02 20:30  david_nichols

	* * fixed some bugs in DateTime::getEpochSeconds()
	  * fixed some bugs in DateTime::setDate(int64)
	  * added additional date tests to test/test.q for border
	  conditions
	  * changed the getDayOfWeek() function to return 1-7 with 1=Mon to
	  correspond to ISO-8601 specifications

2006-09-02 08:55  david_nichols

	* doc update

2006-09-02 08:34  david_nichols

	* * added getDateFromISOWeek() to return a date/time value from the
	  ISO-
	  8601 year, week and optional day values
	  * added tests for new date functions in test/test.q
	  * added millisecond addition and subtraction tests to test/test.q
	  * corrected DateTime class to make millisecond subtraction work
	  * changed scanner.ll and DateTime string constructor to allow for
	  millisecond specification for dates: i.e. 2006-01-01-10:00:00.502
	  for
	  502 milliseconds after Jan 1 2006 10 am
	  * changed scanner.ll to only accept valid month, day, hour,
	  minute,
	  second, and millisecond values in dates
	  * added getISOWeekHash() to return the ISO-8601 calendar year,
	  week,
	  and day from a date value
	  * added getISOWeekString() to return the ISO-8601 calender info
	  for a
	  particular date value in the following format: "####-W##-#" for
	  year-week-day info
	  * added getDayNumber() to return the ordinal number of the day in
	  the
	  year of a date value (sometimes erroneously called the Julian
	  date)
	  * added getDayOfWeek() to return a value from 0 - 6 corresponding
	  to
	  Sun - Sat for a date value
	  * added get_years(), get_months(), get_days(), get_hours(),
	  get_minutes(), get_seconds(), get_milliseconds() calls to
	  ql_time.cc
	  * added support for specifying relative millisecond values in
	  scanner.ll
	  as <int>ms: i.e. "$date -= 250ms" will subtract 250 milliseconds
	  from
	  the date value in $date

2006-09-01 11:47  david_nichols

	* * "tibrv" module: added the TibrvDistributedQueue class to allow
	  qore
	  programs to be members of a Rendezvous distributed queue using a
	  certified transport object
	  * added -ssl to the TIBRV_LIBS when secure daemon support is
	  included
	  * fixed a bug in the QoreProgram destructor when the ::del()
	  method had
	  already been called.
	  * added -lcrypto to OPENSSL_LDFLAGS

2006-08-30 15:15  david_nichols

	* added -lcrypto to OPENSSL_LDFLAGS

2006-08-30 14:44  david_nichols

	* fixed a bug in the QoreProgram destructor when the ::del() method
	  had already been called.

2006-08-25 10:03  david_nichols

	* doc update

2006-08-22 06:34  david_nichols

	* fixed Rendezvous library link detection and secure daemon
	  presence in configure

2006-08-20 06:24  david_nichols

	* removed old code in QoreLib.h, updated socket-test.q

2006-08-19 16:57  david_nichols

	* fixed buggy the Socket::*i8() methods

2006-08-19 15:53  david_nichols

	* socket test update, doc update, and typo fix in QoreProgram.cc

2006-08-19 15:32  david_nichols

	* missing file

2006-08-19 15:24  david_nichols

	* * removed some unused functions in lib/thread.cc
	  * added the QoreProgram::cannotProvideFeature() function to raise
	  a
	  special parse exception that will cause all other parse
	  exceptions to
	  be ignored so that when features cannot be provided the only
	  error
	  messages that will be reported via exceptions are the facts that
	  the
	  features could not be provided. lib/scanner.ll was modified to
	  use
	  this new method
	  * fixed the qore binary's command-line handling when the first
	  option
	  takes an argument with spaces
	  * if the -e or --exec options are given then no file name is set
	  from
	  the command-line, instead all such options are passed directly
	  into
	  $ARGV
	  * fixed some errors and memory leaks when a thread start error
	  occurs
	  * changed Program::destructor() to immediately run the object's
	  underlying destructor with an ExceptionSink object to allow
	  exceptions to be caught by the parent code instead of just
	  decrementing the counter and running the default exception
	  handler on
	  any exceptions - this allows exceptions thrown when deleting
	  global
	  variables and thread data to be caught and handled (before they
	  could
	  not be caught and the default exception handler would be run)
	  * added throwThreadResourceExceptions() function to explicitly
	  throw
	  thread resource exceptions
	  * changed objects to reference their parent QoreProgram object
	  instead
	  of the parent class because the class is contained by the program
	  anyway, and the class may have a method that calls a function in
	  the
	  program - otherwise in the case that an object exported from a
	  program is deleted before the object and that object's class has
	  a
	  method that calls a function in the program, a core dump would
	  result

2006-08-17 07:43  david_nichols

	* * infrastructure changes to allow thread-specific resources to be
	  registered with a destructor function to be run on the data if
	  the
	  resource is not cleared before the thread terminates
	  * Datasource class updated to use the new thread resource
	  registration
	  support to throw an exception and call Datasource::rollback() on
	  the
	  transaction

2006-08-13 15:15  david_nichols

	* cosmetic update

2006-08-13 11:22  david_nichols

	* added explicit type-encoded hash support for "bool"
	  added the tibrv_bool() helper function

2006-08-13 11:04  david_nichols

	* * removed default argument value in constructor in
	  QC_SSLPrivateKey
	  * added hash type-encoding for tibrv serialization: to specify
	  the tibrv
	  type, use a hash with two keys: "^type^" and "^value^", where
	  "^type^"
	  can be: i8, u8, i16, u16, i32, u32, i64, u64, f32, f64, ipport16,
	  ipaddr32, xml

2006-08-12 08:54  david_nichols

	* removed default arg value in QoreSSLPrivateKey class constructor

2006-08-12 08:44  david_nichols

	* * added the following methods to the SSLPrivateKey class:
	  ::getVersion(), ::getType(), ::getBitLength()
	  * added the following methods to the SSLCertificate class:
	  ::getVersion(), ::getPublicKeyAlgorithm(), ::getPublicKey(),
	  ::getSignatureType(), ::getSignature(), getSubjectHash(),
	  ::getIssuerHash(), ::getSerialNumber(), ::getVersion(),
	  ::getPurposeHash(), ::getNotBeforeDate(), ::getNotAfterDate()
	  * "tibrv" module: started adding secure daemon support
	  * added SSLCertificate::getPEM() call to return a string
	  representing
	  the certificate in PEM format
	  * added SSLCertificate::getInfo() method to return information
	  about the
	  certificate
	  * added SSLPrivateKey::getInfo() method to return info about the
	  key
	  * eliminated the Hash::newIterator() call, forcing all hash
	  iterations
	  to be done with a variable on the stack (speed improvement)
	  * "tibrv" module: do not time out with
	  TibrvListener::getMessage() and
	  TibrvCmListener::getMessage() if timeout is negative; only
	  returns if
	  a message is available

2006-08-07 15:05  david_nichols

	* fix

2006-08-07 14:24  david_nichols

	* doc & tibrv updates

2006-08-06 19:51  david_nichols

	* updated tibrv code

2006-08-06 12:28  david_nichols

	* * fixed a copy-and-paste bug in lib/QC_Socket.cc
	  * included port number in output hash in QoreURL class

2006-07-30 12:51  david_nichols

	* changes/additions to tibrv module (certified communications)

2006-07-30 11:54  david_nichols

	* more missing files

2006-07-30 11:53  david_nichols

	* missing files

2006-07-30 11:32  david_nichols

	* tibrv changes

2006-07-29 19:48  david_nichols

	* added tibrv test program

2006-07-29 18:23  david_nichols

	* updates

2006-07-29 17:26  david_nichols

	* ft member fixes

2006-07-29 14:37  david_nichols

	* added TibrvFtMember for fault-tolerant TIBCO Rendezvous operation

2006-07-28 18:26  david_nichols

	* missing files

2006-07-28 18:25  david_nichols

	* tibrv module reorg

2006-07-28 12:39  david_nichols

	* update

2006-07-28 11:21  david_nichols

	* monolithic build fix

2006-07-28 11:09  david_nichols

	* monolithic build fix

2006-07-28 11:01  david_nichols

	* solaris build fixes

2006-07-28 10:35  david_nichols

	* fix

2006-07-28 10:23  david_nichols

	* fix

2006-07-28 10:21  david_nichols

	* fix

2006-07-28 10:06  david_nichols

	* fix

2006-07-28 09:50  david_nichols

	* updates

2006-07-28 09:45  david_nichols

	* TIBCO Rendezvous updates

2006-07-26 10:17  david_nichols

	* fix

2006-07-25 19:01  david_nichols

	* fixed a bug in QoreString::vsprintf()
	  TibrvSender and TibrvListener enhancements

2006-07-25 17:44  david_nichols

	* initial TibrvSender class

2006-07-25 09:38  david_nichols

	* renamed tibco to tibae to be consistent with module

2006-07-25 09:30  david_nichols

	* tibae configure fix

2006-07-25 09:24  david_nichols

	* fixes for tibae module to compile after module split

2006-07-25 09:19  david_nichols

	* missing files

2006-07-25 09:14  david_nichols

	* this file is a symlink created by configure

2006-07-25 09:13  david_nichols

	* bug fix for 32-bit builds

2006-07-25 09:05  david_nichols

	* * renamed tibco module to tibae
	  * moved TIBCO Rendezvous functionality to separate tibrv module
	  * separated detection for rendezvous and tibco AE SDK so tibrv
	  can be compiled even if no SDK is present (or the SDK cannot be
	  linked with this compiler for some reason)
	  * make rendezbous and tibco ae sdk detection more automatic with
	  more verbose messages in the configure script
	  * added support to link with 64-bit rendezvous libraries

2006-07-24 11:34  david_nichols

	* exception bug fix
	  changes to allow mysql to be properly detected under linux x86_64

2006-07-24 09:44  david_nichols

	* * 64-bit configure support for Linux x86_64
	  * fixed a stupid bug in generating parse exceptions (how did that
	  ever work before???)
	  * fixed a deadlock in adding new (unknown) character encodings in
	  include/qore/charset.h
	  * fixed a bug in the QoreString::vsprintf() design and usage
	  (retries when the buffer was too small would cause a segfault)
	  * set library and module dir to use lib64 for 64-bit builds on
	  Linux

2006-07-09 19:24  david_nichols

	* * added TibrvListener class to the tibco module for TIBCO
	  Rendezvous
	  listening
	  * changed DateTime <-> integer conversions to be based on the
	  number of
	  seconds from January 1, 1970 (the UNIX epoch)

2006-07-08 18:13  david_nichols

	* force all QoreStrings to have an encoding set

2006-07-08 15:13  david_nichols

	* * added digest and crypto tests to test/test.q
	  * corrected regular expressions for XML-RPC method names in
	  examples/XmlRpcServerValidation.q
	  * eliminated rare but stupid race condition in the Socket class

2006-07-08 09:09  david_nichols

	* * FtpClient updated to understand the "ftps://" protocol as per
	  RFC-2228
	  and RFC-4217: for AUTH TLS secure logins implemented
	  * FtpClient updated to use secure data connections using PBSZ 0
	  and
	  PROT P as per RFC-4217
	  * new FtpClient methods:
	  + FtpClient::setSecure()
	  + FtpClient::setInsecure()
	  + FtpClient::setInsecureData()
	  + FtpClient::isSecure()
	  + FtpClient::isDataSecure()
	  + FtpClient::getSSLCipherName()
	  + FtpClient::getSSLCipherVersion()
	  + FtpClient::verifyPeerCertificate()
	  + FtpClient::setModeAuto()
	  + FtpClient::setModeEPSV()
	  + FtpClient::setModePASV()
	  + FtpClient::setModePORT()

2006-07-07 14:14  david_nichols

	* * added MD2(), MD4(), MD5(), SHA(), SHA1(), DSS(), DSS1(),
	  RIPEMD160()
	  digest functions to lib/ql_crypto.cc
	  * added MDC2() digest function to lib/ql_crypto.cc optionally
	  depending
	  on openssl library support
	  * added the following cryptographic functions to
	  lib/ql_crypto.cc:
	  + des_encrypt_cbc()
	  + des_decrypt_cbc()
	  + des_decrypt_cbc_to_string()
	  + des_ede_encrypt_cbc()
	  + des_ede_decrypt_cbc()
	  + des_ede_decrypt_cbc_to_string()
	  + des_ede3_encrypt_cbc()
	  + des_ede3_decrypt_cbc()
	  + des_ede3_decrypt_cbc_to_string()
	  + desx_encrypt_cbc()
	  + desx_decrypt_cbc()
	  + desx_decrypt_cbc_to_string()
	  + rc4_encrypt()
	  + rc4_decrypt()
	  + rc4_decrypt_to_string()
	  + rc2_encrypt_cbc()
	  + rc2_decrypt_cbc()
	  + rc2_decrypt_cbc_to_string()
	  + cast5_encrypt_cbc()
	  + cast5_decrypt_cbc()
	  + cast5_decrypt_cbc_to_string()
	  + rc5_encrypt_cbc()
	  + rc5_decrypt_cbc()
	  + rc5_decrypt_cbc_to_string()

2006-07-05 06:38  david_nichols

	* * fixed a memory leak in some exception handling code in
	  lib/ql_xml.cc
	  * changed XML generation and XML parsing to be able to parse and
	  properly generate XML with mixed elements and text. When multiple
	  text nodes are present, hash keys are created with the format:
	  ^value#^, where # is an increasing number. When elements are
	  duplicated, then, if the last element does not have the same
	  name,
	  a new hash key is used with the following format: name^#, in the
	  same
	  manner as value nodes. When serializing Qore data to XML strings,
	  the
	  reverse ruls are used - ^value* nodes are output as text, and if
	  an
	  element name is suffixed with ^# the suffix is removed before the
	  element name is output. This should allow mixed data and text to
	  be
	  properly parsed and generated while maintaining
	  backward-compatibility
	  with the previous functionality.

2006-07-04 05:57  david_nichols

	* * fixed a rare race condition & a memory leak in lib/Object.cc
	  * changed ::memberGate() methods and ::methodGate() methods to
	  not
	  execute when we are already in the method - to avoid silly
	  infinite loops

2006-07-03 16:20  david_nichols

	* added lib/ql_crypto.cc with new functions:
	  blowfish_encrypt_cbc(), blowfish_decrypt_cbc() and
	  blowfish_decrypt_cbc_to_string()

2006-06-30 08:45  david_nichols

	* added a splice() function

2006-06-29 13:24  david_nichols

	* fixed a bug in HTTPClient

2006-06-26 19:28  david_nichols

	* updated modulemanager

2006-06-26 15:31  david_nichols

	* fixes

2006-06-20 19:32  david_nichols

	* update

2006-06-20 15:11  david_nichols

	* bugfix

2006-06-20 11:53  david_nichols

	* updates

2006-06-20 11:52  david_nichols

	* example updates

2006-06-20 07:44  david_nichols

	* missing file

2006-06-19 16:41  david_nichols

	* SSL additions & fixes

2006-06-19 08:40  david_nichols

	* updates

2006-06-18 18:09  david_nichols

	* more SSL socket support changes

2006-06-18 07:59  david_nichols

	* socket SSL handling based on openssl

2006-06-14 15:25  david_nichols

	* tibco module compiles with SDK 5.3.*
	  fixes, etc

2006-06-14 13:49  david_nichols

	* backed out broken MDateTime constructor based on time_t - cannot
	  handle very large dates

2006-06-14 12:19  david_nichols

	* use better MDate and MDateTime constructors

2006-06-14 05:55  david_nichols

	* bug fixes

2006-06-13 17:23  david_nichols

	* bugfix

2006-06-13 16:16  david_nichols

	* updates

2006-06-13 12:21  david_nichols

	* added regex subpattern extraction tests

2006-06-13 12:07  david_nichols

	* * sanitized QoreString constructor order when specifying an
	  encoding,
	  added an additional constructor to accept simply specifying the
	  encoding without giving an initial string value
	  * added regex substring extraction operator: =~ x/.../ - returns
	  a list
	  of matched substrings
	  * fixed a bug parsing empty data elements in an XML-RPC array

2006-06-12 15:19  david_nichols

	* fixed a cosmetic bug in generating formatted xml output with
	  certain data

2006-06-09 13:19  david_nichols

	* fixed typos

2006-06-09 13:08  david_nichols

	* doc update

2006-06-09 12:53  david_nichols

	* starting 0.5.2 release

2006-06-09 12:50  david_nichols

	* doc updates

2006-06-08 16:10  david_nichols

	* update

2006-06-08 12:40  david_nichols

	* rename

2006-06-08 12:40  david_nichols

	* removed files

2006-06-08 12:39  david_nichols

	* updates

2006-06-07 15:39  david_nichols

	* updates

2006-06-07 15:31  david_nichols

	* typo fix

2006-06-07 14:57  david_nichols

	* updates

2006-06-07 13:48  david_nichols

	* updates

2006-06-07 13:35  david_nichols

	* removed unnecessary files

2006-06-07 12:52  david_nichols

	* fixed silly regexsubst implementation

2006-06-07 12:33  david_nichols

	* update

2006-06-07 12:29  david_nichols

	* added test and example scripts
	  implemented transliteration operator "=~ tr/.../.../"

2006-06-07 10:05  david_nichols

	* updated to current 0.5.1 status

2006-06-07 09:41  david_nichols

	* updates

2006-06-07 09:30  david_nichols

	* checkin

2006-06-07 09:25  david_nichols

	* new file

2006-06-07 09:10  david_nichols

	* initial repository import

