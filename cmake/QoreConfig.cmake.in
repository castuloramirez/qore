# QORE_FOUND - system has qore installed
# QORE_INCLUDE_DIR - includes
# QORE_INCLUDE_DIRS - cmake standard alias for QORE_INCLUDE_DIR
# QORE_LIBRARY - library location
# QORE_LIBRARIES - cmake standard alias for QORE_LIBRARY
#
# QORE_MODULES_DIR - location of qore modules
# QORE_API_VERSION - API version
#
# QORE_EXECUTABLE - qore interpret executable
# QORE_QPP_EXECUTABLE - qore qpp executable


if (CMAKE_VERSION VERSION_LESS 2.8.3)
    message(FATAL_ERROR "Qore requires at least CMake version 2.8.3")
endif()

set(QORE_FOUND 1)

set(QORE_INCLUDE_DIR @myprefix@/include)
set(QORE_INCLUDE_DIRS ${QORE_INCLUDE_DIR})

find_library(QORE_LIBRARY NAMES qore libqore HINTS "@myprefix@/lib@LIBSUFFIX@/")
set(QORE_LIBRARIES ${QORE_LIBRARY})

set(QORE_MODULES_DIR @MODULE_DIR@)
set(QORE_API_VERSION @MODULE_API_MAJOR@.@MODULE_API_MINOR@)

set(QORE_EXECUTABLE @myprefix@/bin/qore)
set(QORE_QPP_EXECUTABLE @myprefix@/bin/qpp)


# warning: the same prefix for current qore is ised if there is no
# CMAKE_INSTALL_PREFIX given
if (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    set(CMAKE_INSTALL_PREFIX @myprefix@)
    message(STATUS "Using detected CMAKE_INSTALL_PREFIX: @myprefix@")
endif (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)


# some system (rpm builds) setup LIB_SUFFIX for cmake. If there is no set, try to get it from system
IF (NOT DEFINED LIB_SUFFIX AND NOT DEFINED LIB_SUFFIX_ALREADY_SET)
    MESSAGE(STATUS "*********************************************************************")
    MESSAGE(STATUS "LIB_SUFFIX variable is not defined. It will be autodetected now")
    MESSAGE(STATUS "You can set it manually with -DLIB_SUFFIX=<value> (64 for example)")

    # All 32bit system have empty lib suffix
    if(CMAKE_SIZEOF_VOID_P EQUAL 8)
        # If there is lib64 dir, set suffix to 64
        if(IS_DIRECTORY ${CMAKE_INSTALL_PREFIX}/lib64)
            set(LIB_SUFFIX 64)
        elseif(IS_DIRECTORY ${CMAKE_INSTALL_PREFIX}/lib)
            set(LIB_SUFFIX "")
        else()
            message(WARNING "LIB_SUFFIX cannot be autodetected. No ${CMAKE_INSTALL_PREFIX}/lib neither ${CMAKE_INSTALL_PREFIX}/lib64 found.")
            set(LIB_SUFFIX "")
        endif()
    else()
        set(LIB_SUFFIX "")
    endif()
    
    set(LIB_SUFFIX_ALREADY_SET 1)

    message(STATUS "LIB_SUFFIX autodetected as '${LIB_SUFFIX}', libraries will be installed into ${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX}")
    MESSAGE(STATUS "*********************************************************************")
else ()
    message(STATUS "LIB_SUFFIX already set: ${LIB_SUFFIX}")
ENDIF ()



if (NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE "release")
endif (NOT CMAKE_BUILD_TYPE)
string(TOLOWER ${CMAKE_BUILD_TYPE} QORE_BUILD_TYPE_LWR)
if (${QORE_BUILD_TYPE_LWR} MATCHES "debug")
    add_definitions(-DDEBUG)
else ()
    add_definitions(-DNDEBUG)
endif ()


include("${CMAKE_CURRENT_LIST_DIR}/QoreMacros.cmake")

