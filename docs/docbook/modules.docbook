<?xml version="1.0" encoding="UTF-8" ?>

<chapter id="Modules">
  <title>Modules</title>
  
  <para>This section describes the modules that are shipped with Qore.</para>

  <para>Qore modules extend Qore's functionality by allowing the optional features to be loaded at run-time.  Qore modules normally depend on other shared libraries and therefore can only be loaded if the libraries they require are present on the system and can be found in the library path.</para>

  <para>Modules are generally only loaded when the Qore program requiring the functionality of a module contains the appropriate <code>%requires</code> directive in the source.</para>

  <para>An exception to this rule is for DBI drivers; DBI drivers are loaded on demand through the <link linkend="Datasource_Class">Datasource class</link>, therefore it's not necessary to use a <code>%requires</code> directive to load DBI drivers.</para>

  <para>However, because <code>%requires</code> directives are processed at parse time, if the Qore program requires the functionality in the module to run, a <code>%requires</code> directive should be used, or the <link linkend="load_module">load_module()</link> function should be used at the start of the program and the resulting exception should be handled gracefully, causing the program to exit.</para>

  <para>Note that modules providing classes, constants, functions, etc that are resolved at parse time must be loaded at parse time using the <code>%requires</code> directive, otherwise parsing will fail and the run-time <link linkend="load_module">load_module()</link> function will never get a chance to run.</para>

  &ncurses_module;
  
  &mysql_module;

  &sybase_module;

  &mssql_module;

  &opengl_module;

  &glut_module;

  &qt-core_module;

  &qt-gui_module;

  &qt-opengl_module;

  &qt-svg_module;

</chapter>
