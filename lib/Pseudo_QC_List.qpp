/* -*- mode: c++; indent-tabs-mode: nil -*- */
/*
  Pseudo_QC_List.qpp

  Qore Programming Language

  Copyright 2003 - 2012 David Nichols

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

#include <qore/Qore.h>

//! Methods in this pseudo-class can be executed on @ref binary "binary values"
/** 
 */
qclass <list> [arg=QoreListNode* l;vparent=<value>];

//! Returns NT_LIST
/** 
    @return NT_LIST

    @par Example:
    @code
switch ($l.typeCode()) {
    case NT_LIST:
        printf("%y: is a list\n", $l);
        break;
}
    @endcode
*/
int <list>::typeCode() [flags=CONSTANT] {
   return NT_LIST;
}

//! Returns the number of elements in the list
/** 
    @return the number of elements in the list

    @par Example:
    @code
my int $len = $l.size();
    @endcode
*/
int <list>::size() [flags=CONSTANT] {
   return l->size();
}

//! Returns \c True if the list is empty (size = 0), \c False if not
/** 
    @return \c True if the list is empty (size = 0), \c False if not

    @par Example:
    @code
my bool $b = $l.empty();
    @endcode
*/
bool <list>::empty() [flags=CONSTANT] {
   return l->empty();
}
