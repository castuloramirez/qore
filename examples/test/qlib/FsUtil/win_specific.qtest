#!/usr/bin/env qore

%requires ../../../../qlib/FsUtil.qm
%requires ../../../../qlib/QUnit.qm

%new-style
%require-types
%enable-all-warnings

%exec-class WinSpecificTest

public class WinSpecificTest inherits QUnit::Test {

    private {
        WinPathHandler ph;
    }

    constructor() : Test ('WinSpecificTest', '1.0') {
        addTestCase ('SplitDriveTest', \test_split_drive());
        set_return_value(main());
    }

    globalSetUp() {
        ph = new WinPathHandler();
    }

    test_split_drive() {
        assertEq(('', ''), ph.split_drive(''));
        assertEq(('C:', '\'), ph.split_drive('C:\'));
        assertEq(('D:', '\dir\'), ph.split_drive('D:\dir\'));
        assertEq(('E:', '\dir\file.txt'), ph.split_drive('E:\dir\file.txt'));
        assertEq(('F:', '..\file.txt'), ph.split_drive('F:..\file.txt'));
        assertEq(('G:', 'file.txt'), ph.split_drive('G:file.txt'));
        assertEq(('c:', '/'), ph.split_drive('c:/'));
        assertEq(('d:', '/dir/'), ph.split_drive('d:/dir/'));
        assertEq(('e:', '/dir/file.txt'), ph.split_drive('e:/dir/file.txt'));
        assertEq(('f:', '../file.txt'), ph.split_drive('f:../file.txt'));
        assertEq(('', '/'), ph.split_drive('/'));
        assertEq(('', '/dir/'), ph.split_drive('/dir/'));
        assertEq(('', '/dir/file.txt'), ph.split_drive('/dir/file.txt'));
        assertEq(('', '../file.txt'), ph.split_drive('../file.txt'));
        assertEq(('', 'file.txt'), ph.split_drive('file.txt'));
    }
}
