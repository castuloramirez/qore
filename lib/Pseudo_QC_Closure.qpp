/* -*- mode: c++; indent-tabs-mode: nil -*- */
/*
  Pseudo_QC_closure.qpp

  Qore Programming Language

  Copyright 2003 - 2012 David Nichols

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

#include <qore/Qore.h>

//! Methods in this pseudo-class can be executed on @ref closure "closures"
/** 
 */
qclass <closure> [arg=QoreClosureNode* c;vparent=<callref>];

//! Returns Qore::NT_CLOSURE
/** 
    @return Qore::NT_CLOSURE

    @par Example:
    @code
switch ($c.typeCode()) {
    case NT_CLOSURE:
        printf("%y: is a closure\n", $c);
        break;
}
    @endcode
*/
int <closure>::typeCode() [flags=CONSTANT] {
   return NT_RUNTIME_CLOSURE;
}

//! Returns @ref True
/** @return @ref True

    @par Example:
    @code
my bool $b = $c.val();
    @endcode
*/
bool <closure>::val() [flags=CONSTANT] {
   return true;
}
